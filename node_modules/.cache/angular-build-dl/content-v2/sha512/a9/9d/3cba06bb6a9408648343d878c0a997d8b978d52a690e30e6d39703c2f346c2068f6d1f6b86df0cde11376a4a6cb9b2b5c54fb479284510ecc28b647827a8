{"version":3,"sources":["./node_modules/events/events.js","./node_modules/xmlbuilder/lib/DocumentPosition.js","./node_modules/xmlbuilder/lib/XMLDocType.js","./node_modules/timers/index.js","./src/app/sort-table.pipe.ts","./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","./src/app/home/home.component.ts","./node_modules/xmlbuilder/lib/XMLNodeList.js","./node_modules/xmlbuilder/lib/NodeType.js","./node_modules/xml2js/lib/xml2js.js","./node_modules/xmlbuilder/lib/WriterState.js","./node_modules/xmlbuilder/lib/XMLDOMImplementation.js","./node_modules/stream/index.js","./node_modules/xmlbuilder/lib/XMLDummy.js","./node_modules/xmlbuilder/lib/XMLDTDEntity.js","./node_modules/xmlbuilder/lib/XMLDOMStringList.js","./node_modules/xmlbuilder/lib/XMLDTDAttList.js","./src/app/home/home.component.html","./node_modules/base64-js/index.js","./node_modules/xmlbuilder/lib/XMLStringWriter.js","./node_modules/xmlbuilder/lib/XMLAttribute.js","./node_modules/sax/lib/sax.js","./node_modules/xmlbuilder/lib/XMLDTDElement.js","./node_modules/xml2js/lib/builder.js","./src/app/home/home.component.css","./node_modules/xmlbuilder/lib/Utility.js","./node_modules/xmlbuilder/lib/XMLCData.js","./node_modules/xmlbuilder/lib/XMLRaw.js","./node_modules/xmlbuilder/lib/XMLDeclaration.js","./node_modules/xmlbuilder/lib/XMLCharacterData.js","./node_modules/xmlbuilder/lib/XMLDocumentCB.js","./node_modules/xmlbuilder/lib/XMLStringifier.js","./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","./node_modules/xml2js/lib/bom.js","./src/app/home/home.module.ts","./node_modules/xmlbuilder/lib/index.js","./node_modules/string_decoder/lib/string_decoder.js","./node_modules/xml2js/lib/processors.js","./node_modules/safe-buffer/index.js","./node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","./node_modules/xmlbuilder/lib/XMLComment.js","./node_modules/emitter-component/index.js","./node_modules/ieee754/index.js","./node_modules/xmlbuilder/lib/XMLNode.js","./node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","./node_modules/xmlbuilder/lib/XMLText.js","./node_modules/xmlbuilder/lib/XMLWriterBase.js","./node_modules/xml2js/lib/defaults.js","./node_modules/xml2js/lib/parser.js","./node_modules/xmlbuilder/lib/XMLDocument.js","./node_modules/buffer/index.js","./node_modules/xmlbuilder/lib/XMLDTDNotation.js","./node_modules/xmlbuilder/lib/XMLElement.js","./node_modules/xmlbuilder/lib/XMLStreamWriter.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AChfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACXD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,uBAAW;;AAEhC,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,4BAAgB;;AAEzC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,+BAAmB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;ACxLD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/EoD;IAKvC,aAAa,SAAb,aAAa;IAExB,SAAS,CAAC,KAAiB;QACzB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;gBAC3C,OAAO,CAAC,CAAC,CAAC;aACX;iBAAM,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;gBAClD,OAAO,CAAC,CAAC;aACV;iBAAM;gBACL,OAAO,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AAhBY,aAAa;IAHzB,0DAAI,CAAC;QACJ,IAAI,EAAE,WAAW;KAClB,CAAC;GACW,aAAa,CAgBzB;AAhByB;;;;;;;;;;;;ACL1B;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,qBAAqB,mBAAO,CAAC,gCAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDyC;AACH;AAG2B;AAClB;AACf;AACQ;AACkC;IAQ9D,aAAa,SAAb,aAAa;IAqBtB,YAAoB,WAAwB,EAAQ,cAAiC,EAAS,qBAA4C,EAAS,MAAa,EAAQ,IAAgB;QAApK,gBAAW,GAAX,WAAW,CAAa;QAAQ,mBAAc,GAAd,cAAc,CAAmB;QAAS,0BAAqB,GAArB,qBAAqB,CAAuB;QAAS,WAAM,GAAN,MAAM,CAAO;QAAQ,SAAI,GAAJ,IAAI,CAAY;QAnBxL,iBAAY,GAAW,IAAI,CAAC;QAC5B,iBAAY,GAAW,KAAK,CAAC;QAC7B,kBAAa,GAAW,KAAK,CAAC;QAE9B,qBAAgB,GAAW,KAAK,CAAC;QACjC,sBAAiB,GAAW,KAAK,CAAC;QAClC,qBAAgB,GAAW,KAAK,CAAC;QAEjC,yBAAoB,GAAS,EAAE,CAAC;QAChC,0BAAqB,GAAS,EAAE,CAAC;QACjC,cAAS,GAAU,CAAC,CAAC;QAErB,eAAU,GAAW,IAAI,CAAC;QAC1B,gBAAW,GAAS,SAAS,CAAC;QACvB,SAAI,GAAG,yFAAyF,CAAC;QACjG,iBAAY,GAAG,wBAAwB,CAAC;QACxC,kBAAa,GAAG,wBAAwB,CAAC;QACzC,iBAAY,GAAG,wBAAwB,CAAC;QAE6I,IAAI,CAAC,aAAa,GAAC,CAAC,CAAC,CAAC;IAAC,CAAC;IAEpN,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IACD,SAAS,CAAC,KAAa,EAAC,KAAY;QAChC,IAAG,KAAK,IAAI,OAAO,EAAC;YACjB,IAAI,CAAC,aAAa,GAAG,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/D,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;SACzC;IACH,CAAC;IACD,OAAO,CAAC,KAAY;QAChB,IAAG,KAAK,IAAI,GAAG,EAAC;YACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;aAAK,IAAG,KAAK,IAAI,GAAG,EAAC;YACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;aAAI;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;IACL,CAAC;IAGH,OAAO,CAAC,WAEmB;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,oBAAoB;QACpB,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAC9B,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE,WAAW,CAAC,sBAAsB,CAAC,CAAC;QAC9E,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,WAAW,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,OAAO,GAAG;YACV,OAAO,EAAE,WAAW;SACvB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,EAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aAC5D,SAAS,CAAC;YACT,IAAI,EAAE,YAAY,CAAC,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,sBAAsB,CAAC;gBAC/D,IAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC,eAAe,CAAC;gBAEzD,MAAM,MAAM,GAAG,IAAI,6CAAa,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,kDAAkB,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;oBAC7D,IAAG,GAAG,EAAC;wBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC5B;yBAAI;wBACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBACpB,IAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;4BACtF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;4BAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;yBAC5B;6BAAI;4BACH,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;yBAC5B;qBACF;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;SACF,CAAC,CAAC;QACL,8BAA8B;QAC9B,uBAAuB;QACvB,8BAA8B;QAC9B,gCAAgC;QAChC,iCAAiC;QACjC,gBAAgB;QAChB,mWAAmW;QACnW,oTAAoT;QACpT,+SAA+S;QAC/S,+YAA+Y;QAC/Y,8YAA8Y;QAC9Y,OAAO;QACP,wDAAwD;QACxD,8DAA8D;QAC9D,oCAAoC;QACpC,yBAAyB;QACzB,oCAAoC;QACpC,iBAAiB;QACjB,WAAW;QACX,wBAAwB;QACxB,2xCAA2xC;QAC3xC,OAAO;QACP,uEAAuE;QACvE,qEAAqE;QACrE,kCAAkC;QAClC,oDAAoD;QACpD,wEAAwE;QACxE,uEAAuE;QACvE,gEAAgE;QAChE,wEAAwE;QAGxE,oDAAoD;QACpD,QAAQ;IACV,CAAC;IAED,QAAQ,CAAC,YAIR;QACG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,oBAAoB;QACpB,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAC9B,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAC/E,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,WAAW,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,OAAO,GAAG;YACV,OAAO,EAAE,WAAW;SACvB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,EAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aAC7D,SAAS,CAAC;YACT,IAAI,EAAE,YAAY,CAAC,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,mEAAmE;gBACnE,yDAAyD;gBACzD,wDAAwD;gBACxD,MAAM,MAAM,GAAG,IAAI,6CAAa,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,kDAAkB,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;oBAC7D,IAAG,GAAG,EAAC;wBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC5B;yBAAK;wBACJ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;wBACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC5B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,WAAe;QACnB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,oBAAoB;QACpB,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAC9B,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE,WAAW,CAAC,sBAAsB,CAAC,CAAC;QAC9E,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;QACnC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAClC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,WAAW,CAAC,oBAAoB,CAAC,CAAC;QAE1E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,EAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aAC5D,SAAS,CAAC;YACT,IAAI,EAAE,YAAY,CAAC,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,MAAM,MAAM,GAAG,IAAI,6CAAa,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,kDAAkB,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;oBAC7D,IAAG,GAAG,EAAC;wBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC5B;yBAAK;wBACJ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;wBACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;wBAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC5B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;CACJ;;YAzPQ,qDAAW;YACX,6DAAiB;YADJ,+DAAqB;YAGlC,sDAAM;YACN,+DAAU;;AAQN,aAAa;IANzB,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,iFAAoC;;KAErC,CAAC;GAES,aAAa,CA6OzB;AA7OyB;;;;;;;;;;;;AChB1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC3BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACtBD;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,WAAW,mBAAO,CAAC,sBAAU;;AAE7B,eAAe,mBAAO,CAAC,0BAAc;;AAErC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;ACtCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACTD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,qBAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;AClHA;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC9BD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,uBAAW;;AAEhC,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AChGD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC3BD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;ACtDD;AAAe,yaAA0W,gBAAgB,GAAG,eAAe,ifAAif,gBAAgB,GAAG,eAAe,0DAA0D,usDAAusD,kBAAkB,unBAAunB,83CAA83C,kBAAkB,qgCAAqgC,kBAAkB,s+BAAs+B,kBAAkB,kBAAkB,0OAA0O,0nDAA0nD,2QAA2Q,8sDAA8sD,kBAAkB,6mBAA6mB,07BAA07B,iBAAiB,WAAW,uBAAuB,kCAAkC,sBAAsB,wFAAwF,WAAW,oBAAoB,cAAc,iBAAiB,kLAAkL,mBAAmB,aAAa,iVAAiV,kBAAkB,aAAa,iBAAiB,mQAAmQ,mBAAmB,aAAa,8CAA8C,2EAA2E,+FAA+F,yQAAyQ,SAAS,0BAA0B,mEAAmE,yBAAyB,mEAAmE,kBAAkB,kEAAkE,kBAAkB,aAAa,iBAAiB,KAAK,0BAA0B,qGAAqG,cAAc,wCAAwC,mBAAmB,qBAAqB,4DAA4D,8BAA8B,kbAAkb,iBAAiB,WAAW,uBAAuB,kCAAkC,sBAAsB,6FAA6F,WAAW,oBAAoB,cAAc,iBAAiB,+HAA+H,mBAAmB,aAAa,4GAA4G,kBAAkB,aAAa,8BAA8B,+BAA+B,+EAA+E,kBAAkB,aAAa,sBAAsB,+BAA+B,KAAK,6CAA6C,oJAAoJ,kBAAkB,aAAa,8BAA8B,iFAAiF,kBAAkB,aAAa,sBAAsB,KAAK,sDAAsD,kdAAkd,iBAAiB,WAAW,uBAAuB,kCAAkC,sBAAsB,8FAA8F,WAAW,oBAAoB,cAAc,iBAAiB,8HAA8H,mBAAmB,aAAa,0GAA0G,kBAAkB,aAAa,8BAA8B,+BAA+B,8EAA8E,kBAAkB,aAAa,sBAAsB,+BAA+B,KAAK,6CAA6C,iJAAiJ,kBAAkB,aAAa,8BAA8B,+BAA+B,gFAAgF,kBAAkB,aAAa,sBAAsB,+BAA+B,KAAK,sDAAsD,iJAAiJ,kBAAkB,aAAa,8BAA8B,+BAA+B,uBAAuB,mGAAmG,kBAAkB,aAAa,sBAAsB,+BAA+B,KAAK,gEAAgE,iJAAiJ,kBAAkB,aAAa,8BAA8B,sBAAsB,uGAAuG,kBAAkB,aAAa,sBAAsB,KAAK,oEAAoE,kbAAkb,oBAAoB,kBAAkB,4CAA4C,E;;;;;;;;;;;;ACA7lmB;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACrJA;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AClCD;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,YAAY,mBAAO,CAAC,uBAAW;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,4BAA4B,aAAa;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC3GD,CAAC,iBAAiB;AAClB,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,YAAY;AAClC;AACA,yBAAyB,mBAAmB,cAAc;AAC1D,wBAAwB,0BAA0B;AAClD,wBAAwB;AACxB;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnqCAAqC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,WAAW,OAAO,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,CAAC,EAAE,MAA8B,GAAG,SAAa;;;;;;;;;;;;AC5hDjD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACrCD;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,wBAAY;;AAEhC,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;AC9HD;AAAe,iFAAkB,oEAAoE,oBAAoB,KAAK,oCAAoC,mBAAmB,OAAO,0BAA0B,2BAA2B,OAAO,uDAAuD,2BAA2B,oBAAoB,iBAAiB,sCAAsC,oBAAoB,OAAO,iEAAiE,oBAAoB,OAAO,oBAAoB,uBAAuB,gDAAgD,qBAAqB,yBAAyB,qBAAqB,oBAAoB,sBAAsB,eAAe,QAAQ,MAAM,SAAS,gDAAgD,qBAAqB,2BAA2B,QAAQ,kDAAkD,uoDAAuoD,E;;;;;;;;;;;ACA3hF;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;AClFD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,qBAAqB,mBAAO,CAAC,gCAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACnCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,YAAY,mBAAO,CAAC,uBAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AClCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,uBAAW;;AAEhC,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC1CD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,uBAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC9ED;AACA;AACA;AACA,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,uBAAW;;AAE3B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,gBAAgB,mBAAO,CAAC,2BAAe;;AAEvC,eAAe,mBAAO,CAAC,0BAAc;;AAErC,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,eAAe,mBAAO,CAAC,0BAAc;;AAErC,WAAW,mBAAO,CAAC,sBAAU;;AAE7B,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,6BAA6B,mBAAO,CAAC,wCAA4B;;AAEjE,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,eAAe,mBAAO,CAAC,0BAAc;;AAErC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,4BAAgB;;AAEzC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,iBAAiB,mBAAO,CAAC,4BAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,+BAAmB;;AAE/C,gBAAgB,mBAAO,CAAC,2BAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/gBD;AACA;AACA;AACA,4BAA4B,mBAAmB,gCAAgC,GAAG,EAAE;AACpF,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,yCAAyC,sBAAsB,sBAAsB,wBAAwB;AAC7G;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,yCAAyC,sBAAsB,wBAAwB,wBAAwB,wBAAwB,wBAAwB;AAC/J;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/OD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACzDD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACXwC;AACM;AACQ;AACN;AACF;AACS;AACX;AACM;AAEnD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6DAAa,EAAE;CACvC,CAAC;IASW,UAAU,SAAV,UAAU;CAAI;AAAd,UAAU;IAPtB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,6DAAa,EAAC,8DAAa,CAAC;QAC3C,OAAO,EAAE;YACP,4DAAY,EAAC,0DAAW,EAAC,qEAAgB,EAAC,4DAAgB;YAC1D,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;ACpBvB;AACA;AACA;;AAEA,QAAQ,mBAAO,CAAC,uBAAW;;AAE3B,yBAAyB,mBAAO,CAAC,oCAAwB;;AAEzD,gBAAgB,mBAAO,CAAC,2BAAe;;AAEvC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,oBAAoB,mBAAO,CAAC,+BAAmB;;AAE/C,oBAAoB,mBAAO,CAAC,+BAAmB;;AAE/C,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,gBAAgB,mBAAO,CAAC,2BAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;AChED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,yBAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;ACvSA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACjCD;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,kCAAsB;;AAErD,qBAAqB,mBAAO,CAAC,gCAAoB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/DD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,qBAAqB,mBAAO,CAAC,gCAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;AClCD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACpFA;AACA;AACA;AACA,gBAAgB;;AAEhB,SAAS,mBAAO,CAAC,uBAAW;;AAE5B;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,0BAAc;AAC3C,mBAAmB,mBAAO,CAAC,wBAAY;AACvC,qBAAqB,mBAAO,CAAC,0BAAc;AAC3C,yBAAyB,mBAAO,CAAC,8BAAkB;AACnD,qBAAqB,mBAAO,CAAC,0BAAc;AAC3C,iBAAiB,mBAAO,CAAC,sBAAU;AACnC,kBAAkB,mBAAO,CAAC,uBAAW;AACrC,mCAAmC,mBAAO,CAAC,wCAA4B;AACvE,mBAAmB,mBAAO,CAAC,wBAAY;AACvC,mBAAmB,mBAAO,CAAC,wBAAY;AACvC,sBAAsB,mBAAO,CAAC,2BAAe;AAC7C,0BAA0B,mBAAO,CAAC,+BAAmB;AACrD,2BAA2B,mBAAO,CAAC,gCAAoB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AChxBD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACfD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,qBAAqB,mBAAO,CAAC,gCAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACpED;AACA;AACA;AACA,gBAAgB;;AAEhB,WAAW,mBAAO,CAAC,uBAAW;;AAE9B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,eAAe,mBAAO,CAAC,0BAAc;;AAErC,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,eAAe,mBAAO,CAAC,0BAAc;;AAErC,eAAe,mBAAO,CAAC,0BAAc;;AAErC,WAAW,mBAAO,CAAC,sBAAU;;AAE7B,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,6BAA6B,mBAAO,CAAC,wCAA4B;;AAEjE,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,4BAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,gBAAgB,mBAAO,CAAC,2BAAe;;AAEvC;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC3aD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACvED;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB,gCAAgC,GAAG,EAAE;AACpF,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,iBAAK;;AAErB,WAAW,mBAAO,CAAC,oBAAQ;;AAE3B,QAAQ,mBAAO,CAAC,mBAAO;;AAEvB,eAAe,mBAAO,CAAC,0BAAc;;AAErC,iBAAiB,mBAAO,CAAC,oBAAQ;;AAEjC,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,GAAG;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;AC5XD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,kBAAkB,mBAAO,CAAC,uBAAW;;AAErC,yBAAyB,mBAAO,CAAC,oCAAwB;;AAEzD,wBAAwB,mBAAO,CAAC,mCAAuB;;AAEvD,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,mBAAmB,mBAAO,CAAC,8BAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,+BAAmB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;ACjPD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,uBAAW;AAChC,cAAc,mBAAO,CAAC,qBAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB,YAAY;AAChD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACxxDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACnDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,uBAAW;;AAE3B,YAAY,mBAAO,CAAC,uBAAW;;AAE/B,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,iBAAiB,mBAAO,CAAC,4BAAgB;;AAEzC,oBAAoB,mBAAO,CAAC,+BAAmB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mCAAmC;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACzSD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,wBAAY;;AAEjC,kBAAkB,mBAAO,CAAC,6BAAiB;;AAE3C,gBAAgB,mBAAO,CAAC,2BAAe;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC","file":"home-home-module-es2015.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\nvar R = typeof Reflect === 'object' ? Reflect : null\r\nvar ReflectApply = R && typeof R.apply === 'function'\r\n  ? R.apply\r\n  : function ReflectApply(target, receiver, args) {\r\n    return Function.prototype.apply.call(target, receiver, args);\r\n  }\r\n\r\nvar ReflectOwnKeys\r\nif (R && typeof R.ownKeys === 'function') {\r\n  ReflectOwnKeys = R.ownKeys\r\n} else if (Object.getOwnPropertySymbols) {\r\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\r\n    return Object.getOwnPropertyNames(target)\r\n      .concat(Object.getOwnPropertySymbols(target));\r\n  };\r\n} else {\r\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\r\n    return Object.getOwnPropertyNames(target);\r\n  };\r\n}\r\n\r\nfunction ProcessEmitWarning(warning) {\r\n  if (console && console.warn) console.warn(warning);\r\n}\r\n\r\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\r\n  return value !== value;\r\n}\r\n\r\nfunction EventEmitter() {\r\n  EventEmitter.init.call(this);\r\n}\r\nmodule.exports = EventEmitter;\r\nmodule.exports.once = once;\r\n\r\n// Backwards-compat with node 0.10.x\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\nEventEmitter.prototype._events = undefined;\r\nEventEmitter.prototype._eventsCount = 0;\r\nEventEmitter.prototype._maxListeners = undefined;\r\n\r\n// By default EventEmitters will print a warning if more than 10 listeners are\r\n// added to it. This is a useful default which helps finding memory leaks.\r\nvar defaultMaxListeners = 10;\r\n\r\nfunction checkListener(listener) {\r\n  if (typeof listener !== 'function') {\r\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\r\n  }\r\n}\r\n\r\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\r\n  enumerable: true,\r\n  get: function() {\r\n    return defaultMaxListeners;\r\n  },\r\n  set: function(arg) {\r\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\r\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\r\n    }\r\n    defaultMaxListeners = arg;\r\n  }\r\n});\r\n\r\nEventEmitter.init = function() {\r\n\r\n  if (this._events === undefined ||\r\n      this._events === Object.getPrototypeOf(this)._events) {\r\n    this._events = Object.create(null);\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  this._maxListeners = this._maxListeners || undefined;\r\n};\r\n\r\n// Obviously not all Emitters should be limited to 10. This function allows\r\n// that to be increased. Set to zero for unlimited.\r\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\r\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\r\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\r\n  }\r\n  this._maxListeners = n;\r\n  return this;\r\n};\r\n\r\nfunction _getMaxListeners(that) {\r\n  if (that._maxListeners === undefined)\r\n    return EventEmitter.defaultMaxListeners;\r\n  return that._maxListeners;\r\n}\r\n\r\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\r\n  return _getMaxListeners(this);\r\n};\r\n\r\nEventEmitter.prototype.emit = function emit(type) {\r\n  var args = [];\r\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\r\n  var doError = (type === 'error');\r\n\r\n  var events = this._events;\r\n  if (events !== undefined)\r\n    doError = (doError && events.error === undefined);\r\n  else if (!doError)\r\n    return false;\r\n\r\n  // If there is no 'error' event listener then throw.\r\n  if (doError) {\r\n    var er;\r\n    if (args.length > 0)\r\n      er = args[0];\r\n    if (er instanceof Error) {\r\n      // Note: The comments on the `throw` lines are intentional, they show\r\n      // up in Node's output if this results in an unhandled exception.\r\n      throw er; // Unhandled 'error' event\r\n    }\r\n    // At least give some kind of context to the user\r\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\r\n    err.context = er;\r\n    throw err; // Unhandled 'error' event\r\n  }\r\n\r\n  var handler = events[type];\r\n\r\n  if (handler === undefined)\r\n    return false;\r\n\r\n  if (typeof handler === 'function') {\r\n    ReflectApply(handler, this, args);\r\n  } else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      ReflectApply(listeners[i], this, args);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction _addListener(target, type, listener, prepend) {\r\n  var m;\r\n  var events;\r\n  var existing;\r\n\r\n  checkListener(listener);\r\n\r\n  events = target._events;\r\n  if (events === undefined) {\r\n    events = target._events = Object.create(null);\r\n    target._eventsCount = 0;\r\n  } else {\r\n    // To avoid recursion in the case that type === \"newListener\"! Before\r\n    // adding it to the listeners, first emit \"newListener\".\r\n    if (events.newListener !== undefined) {\r\n      target.emit('newListener', type,\r\n                  listener.listener ? listener.listener : listener);\r\n\r\n      // Re-assign `events` because a newListener handler could have caused the\r\n      // this._events to be assigned to a new object\r\n      events = target._events;\r\n    }\r\n    existing = events[type];\r\n  }\r\n\r\n  if (existing === undefined) {\r\n    // Optimize the case of one listener. Don't need the extra array object.\r\n    existing = events[type] = listener;\r\n    ++target._eventsCount;\r\n  } else {\r\n    if (typeof existing === 'function') {\r\n      // Adding the second element, need to change to array.\r\n      existing = events[type] =\r\n        prepend ? [listener, existing] : [existing, listener];\r\n      // If we've already got an array, just append.\r\n    } else if (prepend) {\r\n      existing.unshift(listener);\r\n    } else {\r\n      existing.push(listener);\r\n    }\r\n\r\n    // Check for listener leak\r\n    m = _getMaxListeners(target);\r\n    if (m > 0 && existing.length > m && !existing.warned) {\r\n      existing.warned = true;\r\n      // No error code for this since it is a Warning\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\r\n                          existing.length + ' ' + String(type) + ' listeners ' +\r\n                          'added. Use emitter.setMaxListeners() to ' +\r\n                          'increase limit');\r\n      w.name = 'MaxListenersExceededWarning';\r\n      w.emitter = target;\r\n      w.type = type;\r\n      w.count = existing.length;\r\n      ProcessEmitWarning(w);\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nEventEmitter.prototype.addListener = function addListener(type, listener) {\r\n  return _addListener(this, type, listener, false);\r\n};\r\n\r\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\r\n\r\nEventEmitter.prototype.prependListener =\r\n    function prependListener(type, listener) {\r\n      return _addListener(this, type, listener, true);\r\n    };\r\n\r\nfunction onceWrapper() {\r\n  if (!this.fired) {\r\n    this.target.removeListener(this.type, this.wrapFn);\r\n    this.fired = true;\r\n    if (arguments.length === 0)\r\n      return this.listener.call(this.target);\r\n    return this.listener.apply(this.target, arguments);\r\n  }\r\n}\r\n\r\nfunction _onceWrap(target, type, listener) {\r\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\r\n  var wrapped = onceWrapper.bind(state);\r\n  wrapped.listener = listener;\r\n  state.wrapFn = wrapped;\r\n  return wrapped;\r\n}\r\n\r\nEventEmitter.prototype.once = function once(type, listener) {\r\n  checkListener(listener);\r\n  this.on(type, _onceWrap(this, type, listener));\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.prependOnceListener =\r\n    function prependOnceListener(type, listener) {\r\n      checkListener(listener);\r\n      this.prependListener(type, _onceWrap(this, type, listener));\r\n      return this;\r\n    };\r\n\r\n// Emits a 'removeListener' event if and only if the listener was removed.\r\nEventEmitter.prototype.removeListener =\r\n    function removeListener(type, listener) {\r\n      var list, events, position, i, originalListener;\r\n\r\n      checkListener(listener);\r\n\r\n      events = this._events;\r\n      if (events === undefined)\r\n        return this;\r\n\r\n      list = events[type];\r\n      if (list === undefined)\r\n        return this;\r\n\r\n      if (list === listener || list.listener === listener) {\r\n        if (--this._eventsCount === 0)\r\n          this._events = Object.create(null);\r\n        else {\r\n          delete events[type];\r\n          if (events.removeListener)\r\n            this.emit('removeListener', type, list.listener || listener);\r\n        }\r\n      } else if (typeof list !== 'function') {\r\n        position = -1;\r\n\r\n        for (i = list.length - 1; i >= 0; i--) {\r\n          if (list[i] === listener || list[i].listener === listener) {\r\n            originalListener = list[i].listener;\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0)\r\n          return this;\r\n\r\n        if (position === 0)\r\n          list.shift();\r\n        else {\r\n          spliceOne(list, position);\r\n        }\r\n\r\n        if (list.length === 1)\r\n          events[type] = list[0];\r\n\r\n        if (events.removeListener !== undefined)\r\n          this.emit('removeListener', type, originalListener || listener);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\n\r\nEventEmitter.prototype.removeAllListeners =\r\n    function removeAllListeners(type) {\r\n      var listeners, events, i;\r\n\r\n      events = this._events;\r\n      if (events === undefined)\r\n        return this;\r\n\r\n      // not listening for removeListener, no need to emit\r\n      if (events.removeListener === undefined) {\r\n        if (arguments.length === 0) {\r\n          this._events = Object.create(null);\r\n          this._eventsCount = 0;\r\n        } else if (events[type] !== undefined) {\r\n          if (--this._eventsCount === 0)\r\n            this._events = Object.create(null);\r\n          else\r\n            delete events[type];\r\n        }\r\n        return this;\r\n      }\r\n\r\n      // emit removeListener for all listeners on all events\r\n      if (arguments.length === 0) {\r\n        var keys = Object.keys(events);\r\n        var key;\r\n        for (i = 0; i < keys.length; ++i) {\r\n          key = keys[i];\r\n          if (key === 'removeListener') continue;\r\n          this.removeAllListeners(key);\r\n        }\r\n        this.removeAllListeners('removeListener');\r\n        this._events = Object.create(null);\r\n        this._eventsCount = 0;\r\n        return this;\r\n      }\r\n\r\n      listeners = events[type];\r\n\r\n      if (typeof listeners === 'function') {\r\n        this.removeListener(type, listeners);\r\n      } else if (listeners !== undefined) {\r\n        // LIFO order\r\n        for (i = listeners.length - 1; i >= 0; i--) {\r\n          this.removeListener(type, listeners[i]);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nfunction _listeners(target, type, unwrap) {\r\n  var events = target._events;\r\n\r\n  if (events === undefined)\r\n    return [];\r\n\r\n  var evlistener = events[type];\r\n  if (evlistener === undefined)\r\n    return [];\r\n\r\n  if (typeof evlistener === 'function')\r\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\r\n\r\n  return unwrap ?\r\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\r\n}\r\n\r\nEventEmitter.prototype.listeners = function listeners(type) {\r\n  return _listeners(this, type, true);\r\n};\r\n\r\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\r\n  return _listeners(this, type, false);\r\n};\r\n\r\nEventEmitter.listenerCount = function(emitter, type) {\r\n  if (typeof emitter.listenerCount === 'function') {\r\n    return emitter.listenerCount(type);\r\n  } else {\r\n    return listenerCount.call(emitter, type);\r\n  }\r\n};\r\n\r\nEventEmitter.prototype.listenerCount = listenerCount;\r\nfunction listenerCount(type) {\r\n  var events = this._events;\r\n\r\n  if (events !== undefined) {\r\n    var evlistener = events[type];\r\n\r\n    if (typeof evlistener === 'function') {\r\n      return 1;\r\n    } else if (evlistener !== undefined) {\r\n      return evlistener.length;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\r\n};\r\n\r\nfunction arrayClone(arr, n) {\r\n  var copy = new Array(n);\r\n  for (var i = 0; i < n; ++i)\r\n    copy[i] = arr[i];\r\n  return copy;\r\n}\r\n\r\nfunction spliceOne(list, index) {\r\n  for (; index + 1 < list.length; index++)\r\n    list[index] = list[index + 1];\r\n  list.pop();\r\n}\r\n\r\nfunction unwrapListeners(arr) {\r\n  var ret = new Array(arr.length);\r\n  for (var i = 0; i < ret.length; ++i) {\r\n    ret[i] = arr[i].listener || arr[i];\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction once(emitter, name) {\r\n  return new Promise(function (resolve, reject) {\r\n    function errorListener(err) {\r\n      emitter.removeListener(name, resolver);\r\n      reject(err);\r\n    }\r\n\r\n    function resolver() {\r\n      if (typeof emitter.removeListener === 'function') {\r\n        emitter.removeListener('error', errorListener);\r\n      }\r\n      resolve([].slice.call(arguments));\r\n    };\r\n\r\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\r\n    if (name !== 'error') {\r\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\r\n    }\r\n  });\r\n}\r\n\r\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\r\n  if (typeof emitter.on === 'function') {\r\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\r\n  }\r\n}\r\n\r\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\r\n  if (typeof emitter.on === 'function') {\r\n    if (flags.once) {\r\n      emitter.once(name, listener);\r\n    } else {\r\n      emitter.on(name, listener);\r\n    }\r\n  } else if (typeof emitter.addEventListener === 'function') {\r\n    // EventTarget does not have `error` event semantics like Node\r\n    // EventEmitters, we do not listen for `error` events here.\r\n    emitter.addEventListener(name, function wrapListener(arg) {\r\n      // IE does not have builtin `{ once: true }` support so we\r\n      // have to do it manually.\r\n      if (flags.once) {\r\n        emitter.removeEventListener(name, wrapListener);\r\n      }\r\n      listener(arg);\r\n    });\r\n  } else {\r\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\r\n  }\r\n}\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  module.exports = {\r\n    Disconnected: 1,\r\n    Preceding: 2,\r\n    Following: 4,\r\n    Contains: 8,\r\n    ContainedBy: 16,\r\n    ImplementationSpecific: 32\r\n  };\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isObject = require('./Utility').isObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\r\n\r\n  module.exports = XMLDocType = (function(superClass) {\r\n    extend(XMLDocType, superClass);\r\n\r\n    function XMLDocType(parent, pubID, sysID) {\r\n      var child, i, len, ref, ref1, ref2;\r\n      XMLDocType.__super__.constructor.call(this, parent);\r\n      this.type = NodeType.DocType;\r\n      if (parent.children) {\r\n        ref = parent.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          if (child.type === NodeType.Element) {\r\n            this.name = child.name;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      this.documentObject = parent;\r\n      if (isObject(pubID)) {\r\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\r\n      }\r\n      if (sysID == null) {\r\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\r\n      }\r\n      if (pubID != null) {\r\n        this.pubID = this.stringify.dtdPubID(pubID);\r\n      }\r\n      if (sysID != null) {\r\n        this.sysID = this.stringify.dtdSysID(sysID);\r\n      }\r\n    }\r\n\r\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\r\n      get: function() {\r\n        var child, i, len, nodes, ref;\r\n        nodes = {};\r\n        ref = this.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\r\n            nodes[child.name] = child;\r\n          }\r\n        }\r\n        return new XMLNamedNodeMap(nodes);\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\r\n      get: function() {\r\n        var child, i, len, nodes, ref;\r\n        nodes = {};\r\n        ref = this.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          if (child.type === NodeType.NotationDeclaration) {\r\n            nodes[child.name] = child;\r\n          }\r\n        }\r\n        return new XMLNamedNodeMap(nodes);\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\r\n      get: function() {\r\n        return this.pubID;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\r\n      get: function() {\r\n        return this.sysID;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\r\n      get: function() {\r\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n      }\r\n    });\r\n\r\n    XMLDocType.prototype.element = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDElement(this, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      var child;\r\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.entity = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDEntity(this, false, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.pEntity = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDEntity(this, true, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.notation = function(name, value) {\r\n      var child;\r\n      child = new XMLDTDNotation(this, name, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLDocType.prototype.toString = function(options) {\r\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    XMLDocType.prototype.ele = function(name, value) {\r\n      return this.element(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\r\n    };\r\n\r\n    XMLDocType.prototype.ent = function(name, value) {\r\n      return this.entity(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.pent = function(name, value) {\r\n      return this.pEntity(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.not = function(name, value) {\r\n      return this.notation(name, value);\r\n    };\r\n\r\n    XMLDocType.prototype.up = function() {\r\n      return this.root() || this.documentObject;\r\n    };\r\n\r\n    XMLDocType.prototype.isEqualNode = function(node) {\r\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\r\n        return false;\r\n      }\r\n      if (node.name !== this.name) {\r\n        return false;\r\n      }\r\n      if (node.publicId !== this.publicId) {\r\n        return false;\r\n      }\r\n      if (node.systemId !== this.systemId) {\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return XMLDocType;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","\r\nexports.every = function(str) {\r\n  return new Every(str);\r\n};\r\n\r\n/*\r\n  Time map\r\n*/\r\n\r\nvar time = {\r\n  millisecond: 1,\r\n  second: 1000,\r\n  minute: 60000,\r\n  hour: 3600000,\r\n  day: 86400000\r\n};\r\n\r\nfor (var key in time) {\r\n  if (key === 'millisecond') {\r\n    time.ms = time[key];\r\n  } else {\r\n    time[key.charAt(0)] = time[key];\r\n  }\r\n  time[key + 's'] = time[key];\r\n}\r\n\r\n\r\n/*\r\n  Every constructor\r\n*/\r\n\r\nfunction Every(str) {\r\n  this.count = 0;\r\n  var m = parse(str);\r\n  if (m) {\r\n    this.time = Number(m[0]) * time[m[1]];\r\n    this.type = m[1];\r\n  }\r\n}\r\n\r\nEvery.prototype.do = function(cb) {\r\n  if (this.time) {\r\n    this.interval = setInterval(callback, this.time);\r\n  }\r\n\r\n  var that = this;\r\n  function callback() {\r\n    that.count++;\r\n    cb.call(that);\r\n  }\r\n  return this;\r\n};\r\n\r\nEvery.prototype.stop = function() {\r\n  if (this.interval) {\r\n    clearInterval(this.interval);\r\n    delete this.interval;\r\n  }\r\n  return this;\r\n};\r\n\r\n\r\n/*\r\n  Convert string to milliseconds\r\n\r\n    ms, millisecond(s)?\r\n    s, second(s)?\r\n    m, minute(s)?\r\n    h, hour(s)?\r\n    d, day(s)?\r\n*/\r\nvar reg = /^\\s*(\\d+(?:\\.\\d+)?)\\s*([a-z]+)\\s*$/;\r\n\r\nfunction parse(str) {\r\n  var m = str.match(reg);\r\n  if (m && time[m[2]]) {\r\n    return m.slice(1);\r\n  }\r\n  return null;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'sortTable'\r\n})\r\nexport class SortTablePipe implements PipeTransform {\r\n\r\n  transform(array: Array<any>): any {\r\n    array.sort((a: any, b: any) => {\r\n      console.log(a.Compatibility[0]);\r\n      if (a.Compatibility[0] < b.Compatibility[0]) {\r\n        return -1;\r\n      } else if (a.Compatibility[0] > b.Compatibility[0]) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return array;\r\n  }\r\n\r\n}\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLCharacterData = require('./XMLCharacterData');\r\n\r\n  module.exports = XMLProcessingInstruction = (function(superClass) {\r\n    extend(XMLProcessingInstruction, superClass);\r\n\r\n    function XMLProcessingInstruction(parent, target, value) {\r\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\r\n      if (target == null) {\r\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\r\n      }\r\n      this.type = NodeType.ProcessingInstruction;\r\n      this.target = this.stringify.insTarget(target);\r\n      this.name = this.target;\r\n      if (value) {\r\n        this.value = this.stringify.insValue(value);\r\n      }\r\n    }\r\n\r\n    XMLProcessingInstruction.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLProcessingInstruction.prototype.toString = function(options) {\r\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\r\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\r\n        return false;\r\n      }\r\n      if (node.target !== this.target) {\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return XMLProcessingInstruction;\r\n\r\n  })(XMLCharacterData);\r\n\r\n}).call(this);\r\n","import { Component } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models';\r\nimport { UserService, AuthenticationService } from '../_services';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport * as xml2js from 'xml2js';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n  })\r\n  \r\nexport class HomeComponent {\r\n    users: User[];\r\n    showAnalyzer:boolean = true;\r\n    showMigrator:boolean = false;\r\n    showGenerator:boolean = false;\r\n    public values: any;\r\n    showAnalyzerData:boolean = false;\r\n    showGeneratorData:boolean = false;\r\n    showMigratorData:boolean = false;\r\n  \r\n    analyzerPathLocation:string =\"\";\r\n    analyzerCompatibility:string =\"\";\r\n    showIndex:number = 0;\r\n    public expandedIndex:number;\r\n    isExpanded:boolean = true;\r\n    profileName:string =\"default\";\r\n    public URLG = 'http://54.85.113.141:8181/integration-framework-0.0.1-SNAPSHOT/api/v1/deploymentDetails';\r\n    public ANALYZER_URL = 'http://localhost:19093';\r\n    public GENERATOR_URL = 'http://localhost:19092';\r\n    public MIGRATOR_URL = 'http://localhost:19091';\r\n\r\n    constructor(private userService: UserService,public spinnerService: NgxSpinnerService,private authenticationService: AuthenticationService, public router:Router,public http: HttpClient) { this.expandedIndex=-1; }\r\n\r\n    ngOnInit() {\r\n        this.userService.getAll().pipe(first()).subscribe(users => {\r\n            this.users = users;\r\n        });\r\n        this.spinnerService.hide();\r\n    }\r\n    expandRow(index: number,value:string): void {\r\n        if(value == 'false'){\r\n           this.expandedIndex = index === this.expandedIndex ? -1 : index;\r\n           this.isExpanded = !!this.expandedIndex;\r\n        }\r\n      }\r\n      goToTab(value:string){\r\n          if(value == '2'){\r\n            this.showAnalyzer = false;\r\n            this.showMigrator = true;\r\n            this.showGenerator = false;\r\n            this.showAnalyzerData = false;\r\n            this.showMigratorData = false;\r\n            this.showGeneratorData = false;\r\n          }else if(value == '3'){\r\n            this.showAnalyzer = false;\r\n            this.showMigrator = false;\r\n            this.showGenerator = true;\r\n            this.showAnalyzerData = false;\r\n            this.showGeneratorData = false;\r\n            this.showMigratorData = false;\r\n          }else{\r\n            this.showAnalyzer = true;\r\n            this.showMigrator = false;\r\n            this.showGenerator = false;\r\n            this.showAnalyzerData = false;\r\n            this.showGeneratorData = false;\r\n            this.showMigratorData = false;\r\n          }\r\n      }\r\n    \r\n      \r\n    analyze(analyzeData: { \r\n      codebaseLocation_FormA: string; \r\n      bwCompatibility: string;}) {\r\n        this.spinnerService.show();\r\n      // Send Http request\r\n      let httpHeaders = new HttpHeaders()\r\n          .set('Content-Type', 'application/x-www-form-urlencoded');\r\n          let body = new HttpParams();\r\n          body = body.set('codebaseLocation_FormA', analyzeData.codebaseLocation_FormA);\r\n          body = body.set('bwCompatibility', analyzeData.bwCompatibility);\r\n      let options = {\r\n          headers: httpHeaders\r\n      }; \r\n      this.http.post(this.ANALYZER_URL,body,{ responseType: 'text' })\r\n        .subscribe({\r\n          next: responseData => {\r\n            console.log(responseData);\r\n            this.analyzerPathLocation = analyzeData.codebaseLocation_FormA;\r\n            this.analyzerCompatibility = analyzeData.bwCompatibility;\r\n          \r\n            const parser = new xml2js.Parser({ strict: false, trim: true });\r\n            xml2js.parseString(responseData, {trim: true}, (err, result) => {\r\n              if(err){\r\n                console.log(err);\r\n                this.spinnerService.hide();\r\n              }else{\r\n                console.log(result);\r\n                if(!!result && !!result.response && !!result.response.Rows && !!result.response.Rows[0]){\r\n                  console.log(result.response.Rows[0].root); \r\n                  console.log(result.response.Rows[0].root[0].ActivityGroup[0]); \r\n                  console.log(result.response.Rows[0].root[0].ActivityName[0]); \r\n                  console.log(result.response.Rows[0].root[0].Count[0]); \r\n                  console.log(result.response.Rows[0].root[0].Compatibility[0]); \r\n                  console.log(result.response.Rows[0].root[0].SuggestedActivity[0]); \r\n                  this.values = result.response.Rows[0].root;\r\n                  this.showAnalyzerData = true;\r\n                  this.spinnerService.hide();\r\n                }else{\r\n                  this.showAnalyzerData = false;\r\n                  this.spinnerService.hide();\r\n                }\r\n              }\r\n            });\r\n          },\r\n          error: error => {\r\n            this.spinnerService.hide();\r\n            this.showAnalyzerData = false;\r\n            console.log(error.message);\r\n          }        \r\n        });\r\n      // this.spinnerService.show();\r\n      // // Send Http request\r\n      // // this.http.get(this.URLG)\r\n      // //   .subscribe(response => {\r\n      // //     this.values = response;\r\n      // this.values=[\r\n      //   {\"id\":\"123356\",\"projectId\":\"1234\",\"interfaceName\":\"New Test Updating \",\"deploymentStatus\":\"SUCCESS\",\"deploymentMode\":\"Docker2222\",\"buildNumber\":\"1.0\",\"instanceName\":\"Test2222\",\"costCenter\":\"Test2222\",\"memoryRequest\":\"Test2222\",\"cpuRequest\":\"Test2222\",\"memoryLimit\":\"Test2222\",\"cpuLimit\":\"Test2222\",\"healthCheckUri\":\"Test2222\",\"techOwner\":\"Test2222\"},\r\n      //   {\"id\":\"5fe0d5d548ec052fbeaabf53\",\"projectId\":null,\"interfaceName\":\"RESTDEMOAPP45\",\"deploymentStatus\":\"FAILURE\",\"deploymentMode\":null,\"buildNumber\":\"3\",\"instanceName\":null,\"costCenter\":null,\"memoryRequest\":null,\"cpuRequest\":null,\"memoryLimit\":null,\"cpuLimit\":null,\"healthCheckUri\":null,\"techOwner\":null},\r\n      //   {\"id\":\"5fe1c1f948ec052fbeab5336\",\"projectId\":null,\"interfaceName\":\"TEST1222\",\"deploymentStatus\":\"SUCCESS\",\"deploymentMode\":null,\"buildNumber\":\"4\",\"instanceName\":null,\"costCenter\":null,\"memoryRequest\":null,\"cpuRequest\":null,\"memoryLimit\":null,\"cpuLimit\":null,\"healthCheckUri\":null,\"techOwner\":null},\r\n      //   {\"id\":\"5fe37fcd11eef6d1877e10fa\",\"projectId\":\"Inteface New01\",\"interfaceName\":\"Cts.New.Project\",\"deploymentStatus\":\"SUCCESS\",\"deploymentMode\":\"Docker\",\"buildNumber\":\"1.0\",\"instanceName\":\"instanceName\",\"costCenter\":\"costCenter\",\"memoryRequest\":\"memoryRequest\",\"cpuRequest\":\"cpuRequest\",\"memoryLimit\":\"memoryLimit\",\"cpuLimit\":\"cpuLimit\",\"healthCheckUri\":\"healthCheckUri\",\"techOwner\":\"techOwner\"},\r\n      //   {\"id\":\"5fe37fd711eef6d1877e10fb\",\"projectId\":\"Inteface New01\",\"interfaceName\":\"Cts.New.Project\",\"deploymentStatus\":\"FAILURE\",\"deploymentMode\":\"Docker\",\"buildNumber\":\"1.0\",\"instanceName\":\"instanceName\",\"costCenter\":\"costCenter\",\"memoryRequest\":\"memoryRequest\",\"cpuRequest\":\"cpuRequest\",\"memoryLimit\":\"memoryLimit\",\"cpuLimit\":\"cpuLimit\",\"healthCheckUri\":\"healthCheckUri\",\"techOwner\":\"techOwner\"}\r\n      //   ];\r\n      //     this.analyzerPathLocation = analyzeData.location;\r\n      //     this.analyzerCompatibility = analyzeData.compatibility;\r\n      //     this.showAnalyzerData = true;\r\n      //     setTimeout(() => {\r\n      //       this.spinnerService.hide();\r\n      //       }, 2000)\r\n      //   // });\r\n      //   const xmlString = `\r\n      //   <?xml version=\"1.0\" encoding=\"UTF-8\"?><response><location>C:\\TibSmartMigrator\\migration\\src\\file_migration\\File_IntelliReport</location><Rows><root><ActivityName>File Poller</ActivityName><ActivityGroup>File</ActivityGroup><Count>1</Count><Compatibility>true</Compatibility></root><root><ActivityName>Read File</ActivityName><ActivityGroup>File</ActivityGroup><Count>1</Count><Compatibility>true</Compatibility></root><root><ActivityName>Write File</ActivityName><ActivityGroup>File</ActivityGroup><Count>2</Count><Compatibility>true</Compatibility></root><root><ActivityName>Create File</ActivityName><ActivityGroup>File</ActivityGroup><Count>1</Count><Compatibility>true</Compatibility></root><root><ActivityName>Remove File</ActivityName><ActivityGroup>File</ActivityGroup><Count>1</Count><Compatibility>true</Compatibility></root><root><ActivityName>Wait for File Change</ActivityName><ActivityGroup>File</ActivityGroup><Count>1</Count><Compatibility>false</Compatibility></root><root><ActivityName>Call Process</ActivityName><ActivityGroup>General Activities</ActivityGroup><Count>1</Count><Compatibility>true</Compatibility></root><root><ActivityName>Parse XML</ActivityName><ActivityGroup>XML Activities</ActivityGroup><Count>2</Count><Compatibility>true</Compatibility></root></Rows></response>\r\n      //   `;\r\n      //     const parser = new xml2js.Parser({ strict: false, trim: true });\r\n      //     xml2js.parseString(xmlString, {trim: true}, (err, result) => {\r\n      //       if(err) console.log(err);\r\n      //       console.log(result.response.Rows[0].root); \r\n      //       console.log(result.response.Rows[0].root[0].ActivityGroup[0]); \r\n      //       console.log(result.response.Rows[0].root[0].ActivityName[0]); \r\n      //       console.log(result.response.Rows[0].root[0].Count[0]); \r\n      //       console.log(result.response.Rows[0].root[0].Compatibility[0]); \r\n  \r\n  \r\n      //       this.values = result.response.Rows[0].root;\r\n      //   });\r\n    }\r\n  \r\n    generate(generateForm:{\r\n      codebaseLocation_FormA: string; \r\n      profileName: string;\r\n      bwArtifact: string;\r\n    }) {\r\n        this.spinnerService.show();\r\n      // Send Http request\r\n      let httpHeaders = new HttpHeaders()\r\n          .set('Content-Type', 'application/x-www-form-urlencoded');\r\n          let body = new HttpParams();\r\n          body = body.set('codebaseLocation_FormA', generateForm.codebaseLocation_FormA);\r\n          body = body.set('profileName', generateForm.profileName);\r\n          body = body.set('bwArtifact', generateForm.bwArtifact);\r\n  \r\n      let options = {\r\n          headers: httpHeaders\r\n      }; \r\n      this.http.post(this.GENERATOR_URL,body,{ responseType: 'text' })\r\n        .subscribe({\r\n          next: responseData => {\r\n            console.log(responseData);\r\n            // this.analyzerPathLocation = generateForm.codebaseLocation_FormA;\r\n            // this.analyzerCompatibility = generateForm.profileName;\r\n            // this.analyzerCompatibility = generateForm.bwArtifact;\r\n            const parser = new xml2js.Parser({ strict: false, trim: true });\r\n            xml2js.parseString(responseData, {trim: true}, (err, result) => {\r\n              if(err){\r\n                console.log(err);\r\n                this.spinnerService.hide();\r\n              } else{\r\n                console.log(result);\r\n                this.values = result;\r\n                this.showGeneratorData = true;\r\n                this.spinnerService.hide();\r\n              }\r\n            });\r\n          },\r\n          error: error => {\r\n            this.spinnerService.hide();\r\n            this.showGeneratorData = false;\r\n            console.log(error.message);\r\n          }        \r\n        });\r\n    }\r\n  \r\n    migrate(migrateForm:any){\r\n        this.spinnerService.show();\r\n      // Send Http request\r\n      let httpHeaders = new HttpHeaders()\r\n          .set('Content-Type', 'application/x-www-form-urlencoded');\r\n      let body = new HttpParams();\r\n      body = body.set('codebaseLocation_FormA', migrateForm.codebaseLocation_FormA);\r\n      body = body.set('bwMigration',migrateForm.bwMigration);\r\n      body = body.set('rvMigration', \"\");\r\n      body = body.set('codeCleanUp', migrateForm.codeCleanUp);\r\n      body = body.set('ndProcess', \"\");\r\n      body = body.set('ndResource', \"\");\r\n      body = body.set('ndGV', \"\");\r\n      body = body.set('ndFolder', \"\");\r\n      body = body.set('folderReorganization', migrateForm.folderReorganization);\r\n  \r\n      this.http.post(this.MIGRATOR_URL,body,{ responseType: 'text' })\r\n        .subscribe({\r\n          next: responseData => {\r\n            console.log(responseData);\r\n            const parser = new xml2js.Parser({ strict: false, trim: true });\r\n            xml2js.parseString(responseData, {trim: true}, (err, result) => {\r\n              if(err){\r\n                console.log(err);\r\n                this.spinnerService.hide();\r\n              } else{\r\n                console.log(result);\r\n                this.values = result;\r\n                this.showMigratorData = true;\r\n                this.spinnerService.hide();\r\n              }\r\n            });\r\n          },\r\n          error: error => {\r\n            this.spinnerService.hide();\r\n            this.showMigratorData = false;\r\n            console.log(error.message);\r\n          }        \r\n        });\r\n    }\r\n\r\n    logout(){\r\n      this.authenticationService.logout();\r\n      this.router.navigate(['/login']);\r\n    }\r\n}","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLNodeList;\r\n\r\n  module.exports = XMLNodeList = (function() {\r\n    function XMLNodeList(nodes) {\r\n      this.nodes = nodes;\r\n    }\r\n\r\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\r\n      get: function() {\r\n        return this.nodes.length || 0;\r\n      }\r\n    });\r\n\r\n    XMLNodeList.prototype.clone = function() {\r\n      return this.nodes = null;\r\n    };\r\n\r\n    XMLNodeList.prototype.item = function(index) {\r\n      return this.nodes[index] || null;\r\n    };\r\n\r\n    return XMLNodeList;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  module.exports = {\r\n    Element: 1,\r\n    Attribute: 2,\r\n    Text: 3,\r\n    CData: 4,\r\n    EntityReference: 5,\r\n    EntityDeclaration: 6,\r\n    ProcessingInstruction: 7,\r\n    Comment: 8,\r\n    Document: 9,\r\n    DocType: 10,\r\n    DocumentFragment: 11,\r\n    NotationDeclaration: 12,\r\n    Declaration: 201,\r\n    Raw: 202,\r\n    AttributeDeclaration: 203,\r\n    ElementDeclaration: 204,\r\n    Dummy: 205\r\n  };\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var builder, defaults, parser, processors,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  defaults = require('./defaults');\r\n\r\n  builder = require('./builder');\r\n\r\n  parser = require('./parser');\r\n\r\n  processors = require('./processors');\r\n\r\n  exports.defaults = defaults.defaults;\r\n\r\n  exports.processors = processors;\r\n\r\n  exports.ValidationError = (function(superClass) {\r\n    extend(ValidationError, superClass);\r\n\r\n    function ValidationError(message) {\r\n      this.message = message;\r\n    }\r\n\r\n    return ValidationError;\r\n\r\n  })(Error);\r\n\r\n  exports.Builder = builder.Builder;\r\n\r\n  exports.Parser = parser.Parser;\r\n\r\n  exports.parseString = parser.parseString;\r\n\r\n  exports.parseStringPromise = parser.parseStringPromise;\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  module.exports = {\r\n    None: 0,\r\n    OpenTag: 1,\r\n    InsideTag: 2,\r\n    CloseTag: 3\r\n  };\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDOMImplementation;\r\n\r\n  module.exports = XMLDOMImplementation = (function() {\r\n    function XMLDOMImplementation() {}\r\n\r\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\r\n      return true;\r\n    };\r\n\r\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    return XMLDOMImplementation;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar Emitter = require('emitter');\r\n\r\nfunction Stream() {\r\n  Emitter.call(this);\r\n}\r\nStream.prototype = new Emitter();\r\nmodule.exports = Stream;\r\n// Backwards-compat with node 0.4.x\r\nStream.Stream = Stream;\r\n\r\nStream.prototype.pipe = function(dest, options) {\r\n  var source = this;\r\n\r\n  function ondata(chunk) {\r\n    if (dest.writable) {\r\n      if (false === dest.write(chunk) && source.pause) {\r\n        source.pause();\r\n      }\r\n    }\r\n  }\r\n\r\n  source.on('data', ondata);\r\n\r\n  function ondrain() {\r\n    if (source.readable && source.resume) {\r\n      source.resume();\r\n    }\r\n  }\r\n\r\n  dest.on('drain', ondrain);\r\n\r\n  // If the 'end' option is not supplied, dest.end() will be called when\r\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\r\n  if (!dest._isStdio && (!options || options.end !== false)) {\r\n    source.on('end', onend);\r\n    source.on('close', onclose);\r\n  }\r\n\r\n  var didOnEnd = false;\r\n  function onend() {\r\n    if (didOnEnd) return;\r\n    didOnEnd = true;\r\n\r\n    dest.end();\r\n  }\r\n\r\n\r\n  function onclose() {\r\n    if (didOnEnd) return;\r\n    didOnEnd = true;\r\n\r\n    if (typeof dest.destroy === 'function') dest.destroy();\r\n  }\r\n\r\n  // don't leave dangling pipes when there are errors.\r\n  function onerror(er) {\r\n    cleanup();\r\n    if (!this.hasListeners('error')) {\r\n      throw er; // Unhandled stream error in pipe.\r\n    }\r\n  }\r\n\r\n  source.on('error', onerror);\r\n  dest.on('error', onerror);\r\n\r\n  // remove all the event listeners that were added.\r\n  function cleanup() {\r\n    source.off('data', ondata);\r\n    dest.off('drain', ondrain);\r\n\r\n    source.off('end', onend);\r\n    source.off('close', onclose);\r\n\r\n    source.off('error', onerror);\r\n    dest.off('error', onerror);\r\n\r\n    source.off('end', cleanup);\r\n    source.off('close', cleanup);\r\n\r\n    dest.off('end', cleanup);\r\n    dest.off('close', cleanup);\r\n  }\r\n\r\n  source.on('end', cleanup);\r\n  source.on('close', cleanup);\r\n\r\n  dest.on('end', cleanup);\r\n  dest.on('close', cleanup);\r\n\r\n  dest.emit('pipe', source);\r\n\r\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\r\n  return dest;\r\n}\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDummy, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  module.exports = XMLDummy = (function(superClass) {\r\n    extend(XMLDummy, superClass);\r\n\r\n    function XMLDummy(parent) {\r\n      XMLDummy.__super__.constructor.call(this, parent);\r\n      this.type = NodeType.Dummy;\r\n    }\r\n\r\n    XMLDummy.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLDummy.prototype.toString = function(options) {\r\n      return '';\r\n    };\r\n\r\n    return XMLDummy;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isObject = require('./Utility').isObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  module.exports = XMLDTDEntity = (function(superClass) {\r\n    extend(XMLDTDEntity, superClass);\r\n\r\n    function XMLDTDEntity(parent, pe, name, value) {\r\n      XMLDTDEntity.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\r\n      }\r\n      if (value == null) {\r\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\r\n      }\r\n      this.pe = !!pe;\r\n      this.name = this.stringify.name(name);\r\n      this.type = NodeType.EntityDeclaration;\r\n      if (!isObject(value)) {\r\n        this.value = this.stringify.dtdEntityValue(value);\r\n        this.internal = true;\r\n      } else {\r\n        if (!value.pubID && !value.sysID) {\r\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\r\n        }\r\n        if (value.pubID && !value.sysID) {\r\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\r\n        }\r\n        this.internal = false;\r\n        if (value.pubID != null) {\r\n          this.pubID = this.stringify.dtdPubID(value.pubID);\r\n        }\r\n        if (value.sysID != null) {\r\n          this.sysID = this.stringify.dtdSysID(value.sysID);\r\n        }\r\n        if (value.nData != null) {\r\n          this.nData = this.stringify.dtdNData(value.nData);\r\n        }\r\n        if (this.pe && this.nData) {\r\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\r\n        }\r\n      }\r\n    }\r\n\r\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\r\n      get: function() {\r\n        return this.pubID;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\r\n      get: function() {\r\n        return this.sysID;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\r\n      get: function() {\r\n        return this.nData || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    XMLDTDEntity.prototype.toString = function(options) {\r\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLDTDEntity;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDOMStringList;\r\n\r\n  module.exports = XMLDOMStringList = (function() {\r\n    function XMLDOMStringList(arr) {\r\n      this.arr = arr || [];\r\n    }\r\n\r\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\r\n      get: function() {\r\n        return this.arr.length;\r\n      }\r\n    });\r\n\r\n    XMLDOMStringList.prototype.item = function(index) {\r\n      return this.arr[index] || null;\r\n    };\r\n\r\n    XMLDOMStringList.prototype.contains = function(str) {\r\n      return this.arr.indexOf(str) !== -1;\r\n    };\r\n\r\n    return XMLDOMStringList;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDTDAttList, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  module.exports = XMLDTDAttList = (function(superClass) {\r\n    extend(XMLDTDAttList, superClass);\r\n\r\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      XMLDTDAttList.__super__.constructor.call(this, parent);\r\n      if (elementName == null) {\r\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\r\n      }\r\n      if (attributeName == null) {\r\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\r\n      }\r\n      if (!attributeType) {\r\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\r\n      }\r\n      if (!defaultValueType) {\r\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\r\n      }\r\n      if (defaultValueType.indexOf('#') !== 0) {\r\n        defaultValueType = '#' + defaultValueType;\r\n      }\r\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\r\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\r\n      }\r\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\r\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\r\n      }\r\n      this.elementName = this.stringify.name(elementName);\r\n      this.type = NodeType.AttributeDeclaration;\r\n      this.attributeName = this.stringify.name(attributeName);\r\n      this.attributeType = this.stringify.dtdAttType(attributeType);\r\n      if (defaultValue) {\r\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\r\n      }\r\n      this.defaultValueType = defaultValueType;\r\n    }\r\n\r\n    XMLDTDAttList.prototype.toString = function(options) {\r\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLDTDAttList;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","export default \"<!-- <div class=\\\"card mt-4\\\">\\r\\n    <h4 class=\\\"card-header\\\">You're logged in with Angular 10 & JWT!!</h4>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h6>Users from secure api end point</h6>\\r\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\r\\n        <ul *ngIf=\\\"users\\\">\\r\\n            <li *ngFor=\\\"let user of users\\\">{{user.firstName}} {{user.lastName}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div> -->\\r\\n<!-- <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n    <p style=\\\"color: white\\\">Please Wait... </p>  \\r\\n</ngx-spinner>  -->\\r\\n<div class=\\\"container register\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 register-left\\\">\\r\\n            <img src=\\\"assets/user_icon.png\\\"/>\\r\\n            <h3>TIBSmartMigrator</h3>\\r\\n            <p *ngFor=\\\"let user of users\\\">Welcome {{user.firstName}} {{user.lastName}}</p>\\r\\n            <button style=\\\"border-radius: 1.5rem;\\\" (click)=\\\"logout()\\\">Logout</button><br/>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9 register-right\\\">\\r\\n            <ul class=\\\"nav nav-tabs nav-justified\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a [ngClass]=\\\"[ showAnalyzer ? 'nav-link active' : 'nav-link']\\\" (click)=\\\"goToTab('1')\\\">Intelli Analyzer</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a [ngClass]=\\\"[ showMigrator ? 'nav-link active' : 'nav-link']\\\"  (click)=\\\"goToTab('2')\\\">Code Migrator</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a [ngClass]=\\\"[ showGenerator ? 'nav-link active' : 'nav-link']\\\"  (click)=\\\"goToTab('3')\\\">Artifact Generator</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <div class=\\\"container register\\\" class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\r\\n                <div class=\\\"tab-pane fade show active\\\" *ngIf=\\\"showAnalyzer\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"analyzer-tab\\\">\\r\\n                    <h3 class=\\\"register-heading\\\">Intelli Analyzer</h3>\\r\\n                    <form #analyzeForm=\\\"ngForm\\\" (ngSubmit)=\\\"analyze(analyzeForm.value)\\\" class=\\\"row register-form\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"codebaseLocation_FormA\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"BW5 Code location\\\" required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"text-align: left; margin-top: 10px;\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input type=\\\"radio\\\" name=\\\"bwCompatibility\\\" ngModel value=\\\"bw6\\\" required>\\r\\n                                        <span> BW6 Compatibility </span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input style=\\\"margin-left: 20px;\\\" type=\\\"radio\\\" ngModel name=\\\"bwCompatibility\\\" value=\\\"bwce\\\" required>\\r\\n                                        <span> BWCE Compatibility</span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>                            \\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <button [disabled]=\\\"analyzeForm.form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btnRegister\\\">Analyze</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <div class=\\\"tab-pane fade show active\\\" *ngIf=\\\"showMigrator\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"migrator-tab\\\">\\r\\n                    <h3 class=\\\"register-heading\\\">Code Migrator</h3>\\r\\n                    <form #migrateForm=\\\"ngForm\\\" class=\\\"row register-form\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"BW5 Code location\\\" name=\\\"codebaseLocation_FormA\\\" ngModel required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"text-align: left; margin-top: 10px;\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input type=\\\"radio\\\" name=\\\"bwMigration\\\" ngModel value=\\\"bw6\\\" required>\\r\\n                                        <span> BW6 Migration </span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input type=\\\"radio\\\" name=\\\"bwMigration\\\" ngModel value=\\\"bwce\\\" required>\\r\\n                                        <span> BWCE Migration</span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"text-align: left; margin-top: 10px;\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input type=\\\"radio\\\" name=\\\"rvMigration\\\" ngModel value=\\\"rvToEms\\\" required>\\r\\n                                        <span> RV To EMS Migration </span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input type=\\\"radio\\\" name=\\\"rvMigration\\\" ngModel value=\\\"rvToHttp\\\" required>\\r\\n                                        <span> RV To HTTP Migration</span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\" style=\\\"text-align: left; margin-top: 10px;margin-left: 15px;\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"checkbox\\\" name=\\\"codeCleanUp\\\" id=\\\"cleanUp\\\" ngModel>\\r\\n                                <label style=\\\"margin-left: 5px;\\\" for=\\\"cleanUp\\\">Code Cleanup</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\" *ngIf=\\\"!!migrateForm.value.codeCleanUp\\\">\\r\\n                            <div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"process\\\" name=\\\"ndProcess\\\" ngModel placeholder=\\\"Not to be Deleted Process\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"resource\\\" name=\\\"ndResource\\\" ngModel placeholder=\\\"Not to be Deleted Resource\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gv\\\" name=\\\"ndGV\\\" ngModel placeholder=\\\"Not to be Deleted GV\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"folder\\\" name=\\\"ndFolder\\\" ngModel placeholder=\\\"Not to be Deleted Folder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>*all value can be comma separated</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\" style=\\\"text-align: left;margin-left: 15px\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"checkbox\\\" name=\\\"folderReorganization\\\" id=\\\"reorganization\\\" ngModel>\\r\\n                                <label style=\\\"margin-left: 5px;\\\" for=\\\"reorganization\\\">Folder Reorganization</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <button [disabled]=\\\"migrateForm.form.invalid\\\"  (click)=\\\"migrate(migrateForm.value)\\\" class=\\\"btn btn-lg btn-block btnRegister\\\">Migrate</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <div class=\\\"tab-pane fade show active\\\" *ngIf=\\\"showGenerator\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"generator-tab\\\">\\r\\n                    <h3  class=\\\"register-heading\\\">Artifact Generator</h3>\\r\\n                    <form #generateForm=\\\"ngForm\\\" class=\\\"row register-form\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>BW6/CE Code location</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name = \\\"codebaseLocation_FormA\\\" ngModel placeholder=\\\"BW6/CE Code location\\\" required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Profile Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name = \\\"profileName\\\" ngModel [(ngModel)]=\\\"profileName\\\" placeholder=\\\"Profile Name\\\" value=\\\"default\\\" required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"text-align: left; margin-top: 10px;\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input type=\\\"radio\\\" name=\\\"bwArtifact\\\" ngModel value=\\\"bw6\\\" required>\\r\\n                                        <span> BW6 Artifact </span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label class=\\\"radio inline\\\"> \\r\\n                                        <input style=\\\"margin-left: 20px;\\\" type=\\\"radio\\\" ngModel name=\\\"bwArtifact\\\" value=\\\"bwce\\\" required>\\r\\n                                        <span>BWCE Artifact</span> \\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <button (click)=\\\"generate(generateForm.value)\\\" [disabled]=\\\"generateForm.form.invalid\\\" class=\\\"btn btn-lg btn-block btnRegister\\\">Generate</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container analyzeData\\\" *ngIf=\\\"showAnalyzerData\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 register-left\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9 register-right\\\">\\r\\n            <div style=\\\"text-align: center;margin-top: 30px;\\\"><p><b>{{analyzerCompatibility}}</b> data for path location: <b>{{analyzerPathLocation}}</b></p></div>\\r\\n            <div class=\\\"table-responsive\\\" style=\\\"margin-left: 90px;width: 80%;margin-bottom: 10px;height: 500px;margin-top: 40px;\\\" >\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                      <tr class=\\\"accordion-toggle collapsed\\\" style=\\\"border: 1px solid black;;text-align: center;height: 50px;\\\">\\r\\n                       <div class=\\\"row\\\">\\r\\n                           <div class=\\\"rowData\\\"><b>Activity Group</b></div>\\r\\n                           <div class=\\\"rowData\\\"><b>Activity Name</b></div>\\r\\n                           <div class=\\\"rowData\\\"><b>Count</b></div>\\r\\n                           <div style=\\\"width: 25%;padding-top: 10px;height: 50px;overflow: hidden;\\\"><b>Compatibility</b></div>\\r\\n                       </div>\\r\\n                       </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr class=\\\"accordion-toggle collapsed\\\" style=\\\"border: 0.5px solid black;;text-align: center;height: 50px;\\\" *ngFor=\\\"let value of (values | sortTable); index as i\\\" (click)=\\\"expandRow(i,value.Compatibility[0])\\\" [ngStyle]=\\\"{'backgroundColor': value.Compatibility[0] == 'true' ? 'rgb(130 208 147)' : 'rgb(228 131 131)' }\\\">\\r\\n                            <div class=\\\"row\\\" >\\r\\n                                <div class=\\\"rowData\\\"><i *ngIf=\\\"value.Compatibility[0] == 'false'\\\" [ngClass]=\\\"isExpanded ? 'fa fa-plus' : 'fa fa-minus'\\\" aria-hidden=\\\"true\\\" style=\\\"margin-right: 20px;\\\"></i>{{ value.ActivityGroup[0] }}</div>\\r\\n                                <div class=\\\"rowData\\\">{{ value.ActivityName[0] }}</div>\\r\\n                                <div class=\\\"rowData\\\">{{ value.Count[0] }}</div>\\r\\n                                <div style=\\\"width: 25%;padding-top: 10px;height: 50px;overflow: hidden;\\\">{{ value.Compatibility[0] }}</div>\\r\\n                            </div>\\r\\n                           <div style=\\\"height: 20px;padding: 20px;background-color: rgb(11 189 140 / 18%);text-align: center;padding-bottom: 50px;\\\" *ngIf=\\\"i === expandedIndex\\\">Suggested Activity :- <b>{{ value.SuggestedActivity[0] }}</b></div>\\r\\n                       </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container analyzeData\\\" *ngIf=\\\"showGeneratorData\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 register-left\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9 register-right\\\">\\r\\n            <!-- <div style=\\\"text-align: center;margin-top: 30px;\\\"><p><b>{{analyzerCompatibility}}</b> data for path location: <b>{{analyzerPathLocation}}</b></p></div> -->\\r\\n            <div class=\\\"table-responsive\\\"  style=\\\"margin-left: 90px;width: 80%;margin-bottom: 10px;height: 200px;margin-top: 40px;\\\" >\\r\\n                <table>\\r\\n                    <tbody>\\r\\n                        <tr style=\\\"border: 1px solid black;;text-align: center;height: 80px;\\\">\\r\\n                         <div class=\\\"row\\\">\\r\\n                             <div style=\\\"width: 30%;padding-top: 10px;height: 80px;border-right: 1px solid black;border-bottom: 1px solid black;\\\"><b>Status</b></div>\\r\\n                             <div style=\\\"width: 70%;padding-top: 10px;height: 80px;word-wrap: break-word;border-bottom: 1px solid black;\\\">{{values[\\\"ns0:response\\\"][\\\"ns0:status\\\"][0]}}</div>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                             <div style=\\\"width: 30%;padding-top: 10px;height: 80px;border-right: 1px solid black;\\\"><b>Location</b></div>\\r\\n                             <div style=\\\"width: 70%;padding-top: 10px;height: 80px;word-wrap: break-word;\\\">{{values[\\\"ns0:response\\\"][\\\"ns0:projectLocation\\\"][0]}}</div>\\r\\n                          </div>\\r\\n                       </tr>\\r\\n                     </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container analyzeData\\\" *ngIf=\\\"showMigratorData\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 register-left\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9 register-right\\\">\\r\\n            <!-- <div style=\\\"text-align: center;margin-top: 30px;\\\"><p><b>{{analyzerCompatibility}}</b> data for path location: <b>{{analyzerPathLocation}}</b></p></div> -->\\r\\n            <div class=\\\"table-responsive\\\"  style=\\\"margin-left: 120px;width: 80%;margin-bottom: 10px;height: 400px;margin-top: 40px;\\\" >\\r\\n                <table>\\r\\n                    <tbody>\\r\\n                       <tr style=\\\"border: 1px solid black;;text-align: center;height: 80px;\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div style=\\\"width: 30%;padding-top: 10px;height: 80px;border-right: 1px solid black;border-bottom: 1px solid black;\\\"><b>Status</b></div>\\r\\n                            <div style=\\\"width: 70%;padding-top: 10px;height: 80px;word-wrap: break-word;border-bottom: 1px solid black;\\\">{{values[\\\"ns0:response\\\"][\\\"ns0:status\\\"][0]}}</div>\\r\\n                         </div>\\r\\n                         <div class=\\\"row\\\">\\r\\n                            <div style=\\\"width: 30%;padding-top: 10px;height: 80px;border-right: 1px solid black;border-bottom: 1px solid black;\\\"><b>Location</b></div>\\r\\n                            <div style=\\\"width: 70%;padding-top: 10px;height: 80px;word-wrap: break-word;border-bottom: 1px solid black;\\\">{{values[\\\"ns0:response\\\"][\\\"ns0:projectLocation\\\"][0]}}</div>\\r\\n                         </div>\\r\\n                         <div class=\\\"row\\\">\\r\\n                            <div style=\\\"width: 30%;padding-top: 10px;height: 80px;border-right: 1px solid black;border-bottom: 1px solid black; word-wrap: break-word;\\\"><b>Code CleanUpReport Location</b></div>\\r\\n                            <div style=\\\"width: 70%;padding-top: 10px;height: 80px;word-wrap: break-word;border-bottom: 1px solid black;\\\">{{values[\\\"ns0:response\\\"][\\\"ns0:codeCleanUpReportLocation\\\"][0]}}</div>\\r\\n                         </div>\\r\\n                         <div class=\\\"row\\\">\\r\\n                            <div style=\\\"width: 30%;padding-top: 10px;height: 80px;border-right: 1px solid black;word-wrap: break-word;\\\"><b>Folder OptimizedReport Location</b></div>\\r\\n                            <div style=\\\"width: 70%;padding-top: 10px;height: 80px;word-wrap: break-word;\\\">{{values[\\\"ns0:response\\\"][\\\"ns0:folderOptimizedReportLocation\\\"][0]}}</div>\\r\\n                         </div>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"loading\\\" *ngIf=\\\"showLoading\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </div> -->\\r\\n<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" template=\\\"<img src='assets/spinner.gif' />\\\"><br>\\r\\n    <p style=\\\"color: white; text-align: center;margin-top: 130px;\\\">Please Wait... </p>  \\r\\n</ngx-spinner> \";","'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLStringWriter, XMLWriterBase,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLWriterBase = require('./XMLWriterBase');\r\n\r\n  module.exports = XMLStringWriter = (function(superClass) {\r\n    extend(XMLStringWriter, superClass);\r\n\r\n    function XMLStringWriter(options) {\r\n      XMLStringWriter.__super__.constructor.call(this, options);\r\n    }\r\n\r\n    XMLStringWriter.prototype.document = function(doc, options) {\r\n      var child, i, len, r, ref;\r\n      options = this.filterOptions(options);\r\n      r = '';\r\n      ref = doc.children;\r\n      for (i = 0, len = ref.length; i < len; i++) {\r\n        child = ref[i];\r\n        r += this.writeChildNode(child, options, 0);\r\n      }\r\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\r\n        r = r.slice(0, -options.newline.length);\r\n      }\r\n      return r;\r\n    };\r\n\r\n    return XMLStringWriter;\r\n\r\n  })(XMLWriterBase);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLAttribute, XMLNode;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLAttribute = (function() {\r\n    function XMLAttribute(parent, name, value) {\r\n      this.parent = parent;\r\n      if (this.parent) {\r\n        this.options = this.parent.options;\r\n        this.stringify = this.parent.stringify;\r\n      }\r\n      if (name == null) {\r\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\r\n      }\r\n      this.name = this.stringify.name(name);\r\n      this.value = this.stringify.attValue(value);\r\n      this.type = NodeType.Attribute;\r\n      this.isId = false;\r\n      this.schemaTypeInfo = null;\r\n    }\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\r\n      get: function() {\r\n        return this.type;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\r\n      get: function() {\r\n        return this.parent;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\r\n      get: function() {\r\n        return this.value;\r\n      },\r\n      set: function(value) {\r\n        return this.value = value || '';\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\r\n      get: function() {\r\n        return '';\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\r\n      get: function() {\r\n        return '';\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\r\n      get: function() {\r\n        return this.name;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\r\n      get: function() {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    XMLAttribute.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLAttribute.prototype.toString = function(options) {\r\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    XMLAttribute.prototype.debugInfo = function(name) {\r\n      name = name || this.name;\r\n      if (name == null) {\r\n        return \"parent: <\" + this.parent.name + \">\";\r\n      } else {\r\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\r\n      }\r\n    };\r\n\r\n    XMLAttribute.prototype.isEqualNode = function(node) {\r\n      if (node.namespaceURI !== this.namespaceURI) {\r\n        return false;\r\n      }\r\n      if (node.prefix !== this.prefix) {\r\n        return false;\r\n      }\r\n      if (node.localName !== this.localName) {\r\n        return false;\r\n      }\r\n      if (node.value !== this.value) {\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return XMLAttribute;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n",";(function (sax) { // wrapper for non-node envs\r\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\r\n  sax.SAXParser = SAXParser\r\n  sax.SAXStream = SAXStream\r\n  sax.createStream = createStream\r\n\r\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\r\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\r\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\r\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\r\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\r\n  // large string into write() might have undesirable effects, but this is manageable by\r\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\r\n  // edge case, result in creating at most one complete copy of the string passed in.\r\n  // Set to Infinity to have unlimited buffers.\r\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\r\n\r\n  var buffers = [\r\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\r\n    'procInstName', 'procInstBody', 'entity', 'attribName',\r\n    'attribValue', 'cdata', 'script'\r\n  ]\r\n\r\n  sax.EVENTS = [\r\n    'text',\r\n    'processinginstruction',\r\n    'sgmldeclaration',\r\n    'doctype',\r\n    'comment',\r\n    'opentagstart',\r\n    'attribute',\r\n    'opentag',\r\n    'closetag',\r\n    'opencdata',\r\n    'cdata',\r\n    'closecdata',\r\n    'error',\r\n    'end',\r\n    'ready',\r\n    'script',\r\n    'opennamespace',\r\n    'closenamespace'\r\n  ]\r\n\r\n  function SAXParser (strict, opt) {\r\n    if (!(this instanceof SAXParser)) {\r\n      return new SAXParser(strict, opt)\r\n    }\r\n\r\n    var parser = this\r\n    clearBuffers(parser)\r\n    parser.q = parser.c = ''\r\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\r\n    parser.opt = opt || {}\r\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\r\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\r\n    parser.tags = []\r\n    parser.closed = parser.closedRoot = parser.sawRoot = false\r\n    parser.tag = parser.error = null\r\n    parser.strict = !!strict\r\n    parser.noscript = !!(strict || parser.opt.noscript)\r\n    parser.state = S.BEGIN\r\n    parser.strictEntities = parser.opt.strictEntities\r\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\r\n    parser.attribList = []\r\n\r\n    // namespaces form a prototype chain.\r\n    // it always points at the current tag,\r\n    // which protos to its parent tag.\r\n    if (parser.opt.xmlns) {\r\n      parser.ns = Object.create(rootNS)\r\n    }\r\n\r\n    // mostly just for error reporting\r\n    parser.trackPosition = parser.opt.position !== false\r\n    if (parser.trackPosition) {\r\n      parser.position = parser.line = parser.column = 0\r\n    }\r\n    emit(parser, 'onready')\r\n  }\r\n\r\n  if (!Object.create) {\r\n    Object.create = function (o) {\r\n      function F () {}\r\n      F.prototype = o\r\n      var newf = new F()\r\n      return newf\r\n    }\r\n  }\r\n\r\n  if (!Object.keys) {\r\n    Object.keys = function (o) {\r\n      var a = []\r\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\r\n      return a\r\n    }\r\n  }\r\n\r\n  function checkBufferLength (parser) {\r\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\r\n    var maxActual = 0\r\n    for (var i = 0, l = buffers.length; i < l; i++) {\r\n      var len = parser[buffers[i]].length\r\n      if (len > maxAllowed) {\r\n        // Text/cdata nodes can get big, and since they're buffered,\r\n        // we can get here under normal conditions.\r\n        // Avoid issues by emitting the text node now,\r\n        // so at least it won't get any bigger.\r\n        switch (buffers[i]) {\r\n          case 'textNode':\r\n            closeText(parser)\r\n            break\r\n\r\n          case 'cdata':\r\n            emitNode(parser, 'oncdata', parser.cdata)\r\n            parser.cdata = ''\r\n            break\r\n\r\n          case 'script':\r\n            emitNode(parser, 'onscript', parser.script)\r\n            parser.script = ''\r\n            break\r\n\r\n          default:\r\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\r\n        }\r\n      }\r\n      maxActual = Math.max(maxActual, len)\r\n    }\r\n    // schedule the next check for the earliest possible buffer overrun.\r\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\r\n    parser.bufferCheckPosition = m + parser.position\r\n  }\r\n\r\n  function clearBuffers (parser) {\r\n    for (var i = 0, l = buffers.length; i < l; i++) {\r\n      parser[buffers[i]] = ''\r\n    }\r\n  }\r\n\r\n  function flushBuffers (parser) {\r\n    closeText(parser)\r\n    if (parser.cdata !== '') {\r\n      emitNode(parser, 'oncdata', parser.cdata)\r\n      parser.cdata = ''\r\n    }\r\n    if (parser.script !== '') {\r\n      emitNode(parser, 'onscript', parser.script)\r\n      parser.script = ''\r\n    }\r\n  }\r\n\r\n  SAXParser.prototype = {\r\n    end: function () { end(this) },\r\n    write: write,\r\n    resume: function () { this.error = null; return this },\r\n    close: function () { return this.write(null) },\r\n    flush: function () { flushBuffers(this) }\r\n  }\r\n\r\n  var Stream\r\n  try {\r\n    Stream = require('stream').Stream\r\n  } catch (ex) {\r\n    Stream = function () {}\r\n  }\r\n\r\n  var streamWraps = sax.EVENTS.filter(function (ev) {\r\n    return ev !== 'error' && ev !== 'end'\r\n  })\r\n\r\n  function createStream (strict, opt) {\r\n    return new SAXStream(strict, opt)\r\n  }\r\n\r\n  function SAXStream (strict, opt) {\r\n    if (!(this instanceof SAXStream)) {\r\n      return new SAXStream(strict, opt)\r\n    }\r\n\r\n    Stream.apply(this)\r\n\r\n    this._parser = new SAXParser(strict, opt)\r\n    this.writable = true\r\n    this.readable = true\r\n\r\n    var me = this\r\n\r\n    this._parser.onend = function () {\r\n      me.emit('end')\r\n    }\r\n\r\n    this._parser.onerror = function (er) {\r\n      me.emit('error', er)\r\n\r\n      // if didn't throw, then means error was handled.\r\n      // go ahead and clear error, so we can write again.\r\n      me._parser.error = null\r\n    }\r\n\r\n    this._decoder = null\r\n\r\n    streamWraps.forEach(function (ev) {\r\n      Object.defineProperty(me, 'on' + ev, {\r\n        get: function () {\r\n          return me._parser['on' + ev]\r\n        },\r\n        set: function (h) {\r\n          if (!h) {\r\n            me.removeAllListeners(ev)\r\n            me._parser['on' + ev] = h\r\n            return h\r\n          }\r\n          me.on(ev, h)\r\n        },\r\n        enumerable: true,\r\n        configurable: false\r\n      })\r\n    })\r\n  }\r\n\r\n  SAXStream.prototype = Object.create(Stream.prototype, {\r\n    constructor: {\r\n      value: SAXStream\r\n    }\r\n  })\r\n\r\n  SAXStream.prototype.write = function (data) {\r\n    if (typeof Buffer === 'function' &&\r\n      typeof Buffer.isBuffer === 'function' &&\r\n      Buffer.isBuffer(data)) {\r\n      if (!this._decoder) {\r\n        var SD = require('string_decoder').StringDecoder\r\n        this._decoder = new SD('utf8')\r\n      }\r\n      data = this._decoder.write(data)\r\n    }\r\n\r\n    this._parser.write(data.toString())\r\n    this.emit('data', data)\r\n    return true\r\n  }\r\n\r\n  SAXStream.prototype.end = function (chunk) {\r\n    if (chunk && chunk.length) {\r\n      this.write(chunk)\r\n    }\r\n    this._parser.end()\r\n    return true\r\n  }\r\n\r\n  SAXStream.prototype.on = function (ev, handler) {\r\n    var me = this\r\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\r\n      me._parser['on' + ev] = function () {\r\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\r\n        args.splice(0, 0, ev)\r\n        me.emit.apply(me, args)\r\n      }\r\n    }\r\n\r\n    return Stream.prototype.on.call(me, ev, handler)\r\n  }\r\n\r\n  // this really needs to be replaced with character classes.\r\n  // XML allows all manner of ridiculous numbers and digits.\r\n  var CDATA = '[CDATA['\r\n  var DOCTYPE = 'DOCTYPE'\r\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\r\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\r\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\r\n\r\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\r\n  // This implementation works on strings, a single character at a time\r\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\r\n  // without a significant breaking change to either this  parser, or the\r\n  // JavaScript language.  Implementation of an emoji-capable xml parser\r\n  // is left as an exercise for the reader.\r\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\r\n\r\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\r\n\r\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\r\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\r\n\r\n  function isWhitespace (c) {\r\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\r\n  }\r\n\r\n  function isQuote (c) {\r\n    return c === '\"' || c === '\\''\r\n  }\r\n\r\n  function isAttribEnd (c) {\r\n    return c === '>' || isWhitespace(c)\r\n  }\r\n\r\n  function isMatch (regex, c) {\r\n    return regex.test(c)\r\n  }\r\n\r\n  function notMatch (regex, c) {\r\n    return !isMatch(regex, c)\r\n  }\r\n\r\n  var S = 0\r\n  sax.STATE = {\r\n    BEGIN: S++, // leading byte order mark or whitespace\r\n    BEGIN_WHITESPACE: S++, // leading whitespace\r\n    TEXT: S++, // general stuff\r\n    TEXT_ENTITY: S++, // &amp and such.\r\n    OPEN_WAKA: S++, // <\r\n    SGML_DECL: S++, // <!BLARG\r\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\r\n    DOCTYPE: S++, // <!DOCTYPE\r\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\r\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\r\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\r\n    COMMENT_STARTING: S++, // <!-\r\n    COMMENT: S++, // <!--\r\n    COMMENT_ENDING: S++, // <!-- blah -\r\n    COMMENT_ENDED: S++, // <!-- blah --\r\n    CDATA: S++, // <![CDATA[ something\r\n    CDATA_ENDING: S++, // ]\r\n    CDATA_ENDING_2: S++, // ]]\r\n    PROC_INST: S++, // <?hi\r\n    PROC_INST_BODY: S++, // <?hi there\r\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\r\n    OPEN_TAG: S++, // <strong\r\n    OPEN_TAG_SLASH: S++, // <strong /\r\n    ATTRIB: S++, // <a\r\n    ATTRIB_NAME: S++, // <a foo\r\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\r\n    ATTRIB_VALUE: S++, // <a foo=\r\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\r\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\r\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\r\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\r\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\r\n    CLOSE_TAG: S++, // </a\r\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\r\n    SCRIPT: S++, // <script> ...\r\n    SCRIPT_ENDING: S++ // <script> ... <\r\n  }\r\n\r\n  sax.XML_ENTITIES = {\r\n    'amp': '&',\r\n    'gt': '>',\r\n    'lt': '<',\r\n    'quot': '\"',\r\n    'apos': \"'\"\r\n  }\r\n\r\n  sax.ENTITIES = {\r\n    'amp': '&',\r\n    'gt': '>',\r\n    'lt': '<',\r\n    'quot': '\"',\r\n    'apos': \"'\",\r\n    'AElig': 198,\r\n    'Aacute': 193,\r\n    'Acirc': 194,\r\n    'Agrave': 192,\r\n    'Aring': 197,\r\n    'Atilde': 195,\r\n    'Auml': 196,\r\n    'Ccedil': 199,\r\n    'ETH': 208,\r\n    'Eacute': 201,\r\n    'Ecirc': 202,\r\n    'Egrave': 200,\r\n    'Euml': 203,\r\n    'Iacute': 205,\r\n    'Icirc': 206,\r\n    'Igrave': 204,\r\n    'Iuml': 207,\r\n    'Ntilde': 209,\r\n    'Oacute': 211,\r\n    'Ocirc': 212,\r\n    'Ograve': 210,\r\n    'Oslash': 216,\r\n    'Otilde': 213,\r\n    'Ouml': 214,\r\n    'THORN': 222,\r\n    'Uacute': 218,\r\n    'Ucirc': 219,\r\n    'Ugrave': 217,\r\n    'Uuml': 220,\r\n    'Yacute': 221,\r\n    'aacute': 225,\r\n    'acirc': 226,\r\n    'aelig': 230,\r\n    'agrave': 224,\r\n    'aring': 229,\r\n    'atilde': 227,\r\n    'auml': 228,\r\n    'ccedil': 231,\r\n    'eacute': 233,\r\n    'ecirc': 234,\r\n    'egrave': 232,\r\n    'eth': 240,\r\n    'euml': 235,\r\n    'iacute': 237,\r\n    'icirc': 238,\r\n    'igrave': 236,\r\n    'iuml': 239,\r\n    'ntilde': 241,\r\n    'oacute': 243,\r\n    'ocirc': 244,\r\n    'ograve': 242,\r\n    'oslash': 248,\r\n    'otilde': 245,\r\n    'ouml': 246,\r\n    'szlig': 223,\r\n    'thorn': 254,\r\n    'uacute': 250,\r\n    'ucirc': 251,\r\n    'ugrave': 249,\r\n    'uuml': 252,\r\n    'yacute': 253,\r\n    'yuml': 255,\r\n    'copy': 169,\r\n    'reg': 174,\r\n    'nbsp': 160,\r\n    'iexcl': 161,\r\n    'cent': 162,\r\n    'pound': 163,\r\n    'curren': 164,\r\n    'yen': 165,\r\n    'brvbar': 166,\r\n    'sect': 167,\r\n    'uml': 168,\r\n    'ordf': 170,\r\n    'laquo': 171,\r\n    'not': 172,\r\n    'shy': 173,\r\n    'macr': 175,\r\n    'deg': 176,\r\n    'plusmn': 177,\r\n    'sup1': 185,\r\n    'sup2': 178,\r\n    'sup3': 179,\r\n    'acute': 180,\r\n    'micro': 181,\r\n    'para': 182,\r\n    'middot': 183,\r\n    'cedil': 184,\r\n    'ordm': 186,\r\n    'raquo': 187,\r\n    'frac14': 188,\r\n    'frac12': 189,\r\n    'frac34': 190,\r\n    'iquest': 191,\r\n    'times': 215,\r\n    'divide': 247,\r\n    'OElig': 338,\r\n    'oelig': 339,\r\n    'Scaron': 352,\r\n    'scaron': 353,\r\n    'Yuml': 376,\r\n    'fnof': 402,\r\n    'circ': 710,\r\n    'tilde': 732,\r\n    'Alpha': 913,\r\n    'Beta': 914,\r\n    'Gamma': 915,\r\n    'Delta': 916,\r\n    'Epsilon': 917,\r\n    'Zeta': 918,\r\n    'Eta': 919,\r\n    'Theta': 920,\r\n    'Iota': 921,\r\n    'Kappa': 922,\r\n    'Lambda': 923,\r\n    'Mu': 924,\r\n    'Nu': 925,\r\n    'Xi': 926,\r\n    'Omicron': 927,\r\n    'Pi': 928,\r\n    'Rho': 929,\r\n    'Sigma': 931,\r\n    'Tau': 932,\r\n    'Upsilon': 933,\r\n    'Phi': 934,\r\n    'Chi': 935,\r\n    'Psi': 936,\r\n    'Omega': 937,\r\n    'alpha': 945,\r\n    'beta': 946,\r\n    'gamma': 947,\r\n    'delta': 948,\r\n    'epsilon': 949,\r\n    'zeta': 950,\r\n    'eta': 951,\r\n    'theta': 952,\r\n    'iota': 953,\r\n    'kappa': 954,\r\n    'lambda': 955,\r\n    'mu': 956,\r\n    'nu': 957,\r\n    'xi': 958,\r\n    'omicron': 959,\r\n    'pi': 960,\r\n    'rho': 961,\r\n    'sigmaf': 962,\r\n    'sigma': 963,\r\n    'tau': 964,\r\n    'upsilon': 965,\r\n    'phi': 966,\r\n    'chi': 967,\r\n    'psi': 968,\r\n    'omega': 969,\r\n    'thetasym': 977,\r\n    'upsih': 978,\r\n    'piv': 982,\r\n    'ensp': 8194,\r\n    'emsp': 8195,\r\n    'thinsp': 8201,\r\n    'zwnj': 8204,\r\n    'zwj': 8205,\r\n    'lrm': 8206,\r\n    'rlm': 8207,\r\n    'ndash': 8211,\r\n    'mdash': 8212,\r\n    'lsquo': 8216,\r\n    'rsquo': 8217,\r\n    'sbquo': 8218,\r\n    'ldquo': 8220,\r\n    'rdquo': 8221,\r\n    'bdquo': 8222,\r\n    'dagger': 8224,\r\n    'Dagger': 8225,\r\n    'bull': 8226,\r\n    'hellip': 8230,\r\n    'permil': 8240,\r\n    'prime': 8242,\r\n    'Prime': 8243,\r\n    'lsaquo': 8249,\r\n    'rsaquo': 8250,\r\n    'oline': 8254,\r\n    'frasl': 8260,\r\n    'euro': 8364,\r\n    'image': 8465,\r\n    'weierp': 8472,\r\n    'real': 8476,\r\n    'trade': 8482,\r\n    'alefsym': 8501,\r\n    'larr': 8592,\r\n    'uarr': 8593,\r\n    'rarr': 8594,\r\n    'darr': 8595,\r\n    'harr': 8596,\r\n    'crarr': 8629,\r\n    'lArr': 8656,\r\n    'uArr': 8657,\r\n    'rArr': 8658,\r\n    'dArr': 8659,\r\n    'hArr': 8660,\r\n    'forall': 8704,\r\n    'part': 8706,\r\n    'exist': 8707,\r\n    'empty': 8709,\r\n    'nabla': 8711,\r\n    'isin': 8712,\r\n    'notin': 8713,\r\n    'ni': 8715,\r\n    'prod': 8719,\r\n    'sum': 8721,\r\n    'minus': 8722,\r\n    'lowast': 8727,\r\n    'radic': 8730,\r\n    'prop': 8733,\r\n    'infin': 8734,\r\n    'ang': 8736,\r\n    'and': 8743,\r\n    'or': 8744,\r\n    'cap': 8745,\r\n    'cup': 8746,\r\n    'int': 8747,\r\n    'there4': 8756,\r\n    'sim': 8764,\r\n    'cong': 8773,\r\n    'asymp': 8776,\r\n    'ne': 8800,\r\n    'equiv': 8801,\r\n    'le': 8804,\r\n    'ge': 8805,\r\n    'sub': 8834,\r\n    'sup': 8835,\r\n    'nsub': 8836,\r\n    'sube': 8838,\r\n    'supe': 8839,\r\n    'oplus': 8853,\r\n    'otimes': 8855,\r\n    'perp': 8869,\r\n    'sdot': 8901,\r\n    'lceil': 8968,\r\n    'rceil': 8969,\r\n    'lfloor': 8970,\r\n    'rfloor': 8971,\r\n    'lang': 9001,\r\n    'rang': 9002,\r\n    'loz': 9674,\r\n    'spades': 9824,\r\n    'clubs': 9827,\r\n    'hearts': 9829,\r\n    'diams': 9830\r\n  }\r\n\r\n  Object.keys(sax.ENTITIES).forEach(function (key) {\r\n    var e = sax.ENTITIES[key]\r\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\r\n    sax.ENTITIES[key] = s\r\n  })\r\n\r\n  for (var s in sax.STATE) {\r\n    sax.STATE[sax.STATE[s]] = s\r\n  }\r\n\r\n  // shorthand\r\n  S = sax.STATE\r\n\r\n  function emit (parser, event, data) {\r\n    parser[event] && parser[event](data)\r\n  }\r\n\r\n  function emitNode (parser, nodeType, data) {\r\n    if (parser.textNode) closeText(parser)\r\n    emit(parser, nodeType, data)\r\n  }\r\n\r\n  function closeText (parser) {\r\n    parser.textNode = textopts(parser.opt, parser.textNode)\r\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\r\n    parser.textNode = ''\r\n  }\r\n\r\n  function textopts (opt, text) {\r\n    if (opt.trim) text = text.trim()\r\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\r\n    return text\r\n  }\r\n\r\n  function error (parser, er) {\r\n    closeText(parser)\r\n    if (parser.trackPosition) {\r\n      er += '\\nLine: ' + parser.line +\r\n        '\\nColumn: ' + parser.column +\r\n        '\\nChar: ' + parser.c\r\n    }\r\n    er = new Error(er)\r\n    parser.error = er\r\n    emit(parser, 'onerror', er)\r\n    return parser\r\n  }\r\n\r\n  function end (parser) {\r\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\r\n    if ((parser.state !== S.BEGIN) &&\r\n      (parser.state !== S.BEGIN_WHITESPACE) &&\r\n      (parser.state !== S.TEXT)) {\r\n      error(parser, 'Unexpected end')\r\n    }\r\n    closeText(parser)\r\n    parser.c = ''\r\n    parser.closed = true\r\n    emit(parser, 'onend')\r\n    SAXParser.call(parser, parser.strict, parser.opt)\r\n    return parser\r\n  }\r\n\r\n  function strictFail (parser, message) {\r\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\r\n      throw new Error('bad call to strictFail')\r\n    }\r\n    if (parser.strict) {\r\n      error(parser, message)\r\n    }\r\n  }\r\n\r\n  function newTag (parser) {\r\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\r\n    var parent = parser.tags[parser.tags.length - 1] || parser\r\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\r\n\r\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\r\n    if (parser.opt.xmlns) {\r\n      tag.ns = parent.ns\r\n    }\r\n    parser.attribList.length = 0\r\n    emitNode(parser, 'onopentagstart', tag)\r\n  }\r\n\r\n  function qname (name, attribute) {\r\n    var i = name.indexOf(':')\r\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\r\n    var prefix = qualName[0]\r\n    var local = qualName[1]\r\n\r\n    // <x \"xmlns\"=\"http://foo\">\r\n    if (attribute && name === 'xmlns') {\r\n      prefix = 'xmlns'\r\n      local = ''\r\n    }\r\n\r\n    return { prefix: prefix, local: local }\r\n  }\r\n\r\n  function attrib (parser) {\r\n    if (!parser.strict) {\r\n      parser.attribName = parser.attribName[parser.looseCase]()\r\n    }\r\n\r\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\r\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\r\n      parser.attribName = parser.attribValue = ''\r\n      return\r\n    }\r\n\r\n    if (parser.opt.xmlns) {\r\n      var qn = qname(parser.attribName, true)\r\n      var prefix = qn.prefix\r\n      var local = qn.local\r\n\r\n      if (prefix === 'xmlns') {\r\n        // namespace binding attribute. push the binding into scope\r\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\r\n          strictFail(parser,\r\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\r\n            'Actual: ' + parser.attribValue)\r\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\r\n          strictFail(parser,\r\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\r\n            'Actual: ' + parser.attribValue)\r\n        } else {\r\n          var tag = parser.tag\r\n          var parent = parser.tags[parser.tags.length - 1] || parser\r\n          if (tag.ns === parent.ns) {\r\n            tag.ns = Object.create(parent.ns)\r\n          }\r\n          tag.ns[local] = parser.attribValue\r\n        }\r\n      }\r\n\r\n      // defer onattribute events until all attributes have been seen\r\n      // so any new bindings can take effect. preserve attribute order\r\n      // so deferred events can be emitted in document order\r\n      parser.attribList.push([parser.attribName, parser.attribValue])\r\n    } else {\r\n      // in non-xmlns mode, we can emit the event right away\r\n      parser.tag.attributes[parser.attribName] = parser.attribValue\r\n      emitNode(parser, 'onattribute', {\r\n        name: parser.attribName,\r\n        value: parser.attribValue\r\n      })\r\n    }\r\n\r\n    parser.attribName = parser.attribValue = ''\r\n  }\r\n\r\n  function openTag (parser, selfClosing) {\r\n    if (parser.opt.xmlns) {\r\n      // emit namespace binding events\r\n      var tag = parser.tag\r\n\r\n      // add namespace info to tag\r\n      var qn = qname(parser.tagName)\r\n      tag.prefix = qn.prefix\r\n      tag.local = qn.local\r\n      tag.uri = tag.ns[qn.prefix] || ''\r\n\r\n      if (tag.prefix && !tag.uri) {\r\n        strictFail(parser, 'Unbound namespace prefix: ' +\r\n          JSON.stringify(parser.tagName))\r\n        tag.uri = qn.prefix\r\n      }\r\n\r\n      var parent = parser.tags[parser.tags.length - 1] || parser\r\n      if (tag.ns && parent.ns !== tag.ns) {\r\n        Object.keys(tag.ns).forEach(function (p) {\r\n          emitNode(parser, 'onopennamespace', {\r\n            prefix: p,\r\n            uri: tag.ns[p]\r\n          })\r\n        })\r\n      }\r\n\r\n      // handle deferred onattribute events\r\n      // Note: do not apply default ns to attributes:\r\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\r\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\r\n        var nv = parser.attribList[i]\r\n        var name = nv[0]\r\n        var value = nv[1]\r\n        var qualName = qname(name, true)\r\n        var prefix = qualName.prefix\r\n        var local = qualName.local\r\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\r\n        var a = {\r\n          name: name,\r\n          value: value,\r\n          prefix: prefix,\r\n          local: local,\r\n          uri: uri\r\n        }\r\n\r\n        // if there's any attributes with an undefined namespace,\r\n        // then fail on them now.\r\n        if (prefix && prefix !== 'xmlns' && !uri) {\r\n          strictFail(parser, 'Unbound namespace prefix: ' +\r\n            JSON.stringify(prefix))\r\n          a.uri = prefix\r\n        }\r\n        parser.tag.attributes[name] = a\r\n        emitNode(parser, 'onattribute', a)\r\n      }\r\n      parser.attribList.length = 0\r\n    }\r\n\r\n    parser.tag.isSelfClosing = !!selfClosing\r\n\r\n    // process the tag\r\n    parser.sawRoot = true\r\n    parser.tags.push(parser.tag)\r\n    emitNode(parser, 'onopentag', parser.tag)\r\n    if (!selfClosing) {\r\n      // special case for <script> in non-strict mode.\r\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\r\n        parser.state = S.SCRIPT\r\n      } else {\r\n        parser.state = S.TEXT\r\n      }\r\n      parser.tag = null\r\n      parser.tagName = ''\r\n    }\r\n    parser.attribName = parser.attribValue = ''\r\n    parser.attribList.length = 0\r\n  }\r\n\r\n  function closeTag (parser) {\r\n    if (!parser.tagName) {\r\n      strictFail(parser, 'Weird empty close tag.')\r\n      parser.textNode += '</>'\r\n      parser.state = S.TEXT\r\n      return\r\n    }\r\n\r\n    if (parser.script) {\r\n      if (parser.tagName !== 'script') {\r\n        parser.script += '</' + parser.tagName + '>'\r\n        parser.tagName = ''\r\n        parser.state = S.SCRIPT\r\n        return\r\n      }\r\n      emitNode(parser, 'onscript', parser.script)\r\n      parser.script = ''\r\n    }\r\n\r\n    // first make sure that the closing tag actually exists.\r\n    // <a><b></c></b></a> will close everything, otherwise.\r\n    var t = parser.tags.length\r\n    var tagName = parser.tagName\r\n    if (!parser.strict) {\r\n      tagName = tagName[parser.looseCase]()\r\n    }\r\n    var closeTo = tagName\r\n    while (t--) {\r\n      var close = parser.tags[t]\r\n      if (close.name !== closeTo) {\r\n        // fail the first time in strict mode\r\n        strictFail(parser, 'Unexpected close tag')\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n\r\n    // didn't find it.  we already failed for strict, so just abort.\r\n    if (t < 0) {\r\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\r\n      parser.textNode += '</' + parser.tagName + '>'\r\n      parser.state = S.TEXT\r\n      return\r\n    }\r\n    parser.tagName = tagName\r\n    var s = parser.tags.length\r\n    while (s-- > t) {\r\n      var tag = parser.tag = parser.tags.pop()\r\n      parser.tagName = parser.tag.name\r\n      emitNode(parser, 'onclosetag', parser.tagName)\r\n\r\n      var x = {}\r\n      for (var i in tag.ns) {\r\n        x[i] = tag.ns[i]\r\n      }\r\n\r\n      var parent = parser.tags[parser.tags.length - 1] || parser\r\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\r\n        // remove namespace bindings introduced by tag\r\n        Object.keys(tag.ns).forEach(function (p) {\r\n          var n = tag.ns[p]\r\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\r\n        })\r\n      }\r\n    }\r\n    if (t === 0) parser.closedRoot = true\r\n    parser.tagName = parser.attribValue = parser.attribName = ''\r\n    parser.attribList.length = 0\r\n    parser.state = S.TEXT\r\n  }\r\n\r\n  function parseEntity (parser) {\r\n    var entity = parser.entity\r\n    var entityLC = entity.toLowerCase()\r\n    var num\r\n    var numStr = ''\r\n\r\n    if (parser.ENTITIES[entity]) {\r\n      return parser.ENTITIES[entity]\r\n    }\r\n    if (parser.ENTITIES[entityLC]) {\r\n      return parser.ENTITIES[entityLC]\r\n    }\r\n    entity = entityLC\r\n    if (entity.charAt(0) === '#') {\r\n      if (entity.charAt(1) === 'x') {\r\n        entity = entity.slice(2)\r\n        num = parseInt(entity, 16)\r\n        numStr = num.toString(16)\r\n      } else {\r\n        entity = entity.slice(1)\r\n        num = parseInt(entity, 10)\r\n        numStr = num.toString(10)\r\n      }\r\n    }\r\n    entity = entity.replace(/^0+/, '')\r\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\r\n      strictFail(parser, 'Invalid character entity')\r\n      return '&' + parser.entity + ';'\r\n    }\r\n\r\n    return String.fromCodePoint(num)\r\n  }\r\n\r\n  function beginWhiteSpace (parser, c) {\r\n    if (c === '<') {\r\n      parser.state = S.OPEN_WAKA\r\n      parser.startTagPosition = parser.position\r\n    } else if (!isWhitespace(c)) {\r\n      // have to process this as a text node.\r\n      // weird, but happens.\r\n      strictFail(parser, 'Non-whitespace before first tag.')\r\n      parser.textNode = c\r\n      parser.state = S.TEXT\r\n    }\r\n  }\r\n\r\n  function charAt (chunk, i) {\r\n    var result = ''\r\n    if (i < chunk.length) {\r\n      result = chunk.charAt(i)\r\n    }\r\n    return result\r\n  }\r\n\r\n  function write (chunk) {\r\n    var parser = this\r\n    if (this.error) {\r\n      throw this.error\r\n    }\r\n    if (parser.closed) {\r\n      return error(parser,\r\n        'Cannot write after close. Assign an onready handler.')\r\n    }\r\n    if (chunk === null) {\r\n      return end(parser)\r\n    }\r\n    if (typeof chunk === 'object') {\r\n      chunk = chunk.toString()\r\n    }\r\n    var i = 0\r\n    var c = ''\r\n    while (true) {\r\n      c = charAt(chunk, i++)\r\n      parser.c = c\r\n\r\n      if (!c) {\r\n        break\r\n      }\r\n\r\n      if (parser.trackPosition) {\r\n        parser.position++\r\n        if (c === '\\n') {\r\n          parser.line++\r\n          parser.column = 0\r\n        } else {\r\n          parser.column++\r\n        }\r\n      }\r\n\r\n      switch (parser.state) {\r\n        case S.BEGIN:\r\n          parser.state = S.BEGIN_WHITESPACE\r\n          if (c === '\\uFEFF') {\r\n            continue\r\n          }\r\n          beginWhiteSpace(parser, c)\r\n          continue\r\n\r\n        case S.BEGIN_WHITESPACE:\r\n          beginWhiteSpace(parser, c)\r\n          continue\r\n\r\n        case S.TEXT:\r\n          if (parser.sawRoot && !parser.closedRoot) {\r\n            var starti = i - 1\r\n            while (c && c !== '<' && c !== '&') {\r\n              c = charAt(chunk, i++)\r\n              if (c && parser.trackPosition) {\r\n                parser.position++\r\n                if (c === '\\n') {\r\n                  parser.line++\r\n                  parser.column = 0\r\n                } else {\r\n                  parser.column++\r\n                }\r\n              }\r\n            }\r\n            parser.textNode += chunk.substring(starti, i - 1)\r\n          }\r\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\r\n            parser.state = S.OPEN_WAKA\r\n            parser.startTagPosition = parser.position\r\n          } else {\r\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\r\n              strictFail(parser, 'Text data outside of root node.')\r\n            }\r\n            if (c === '&') {\r\n              parser.state = S.TEXT_ENTITY\r\n            } else {\r\n              parser.textNode += c\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.SCRIPT:\r\n          // only non-strict\r\n          if (c === '<') {\r\n            parser.state = S.SCRIPT_ENDING\r\n          } else {\r\n            parser.script += c\r\n          }\r\n          continue\r\n\r\n        case S.SCRIPT_ENDING:\r\n          if (c === '/') {\r\n            parser.state = S.CLOSE_TAG\r\n          } else {\r\n            parser.script += '<' + c\r\n            parser.state = S.SCRIPT\r\n          }\r\n          continue\r\n\r\n        case S.OPEN_WAKA:\r\n          // either a /, ?, !, or text is coming next.\r\n          if (c === '!') {\r\n            parser.state = S.SGML_DECL\r\n            parser.sgmlDecl = ''\r\n          } else if (isWhitespace(c)) {\r\n            // wait for it...\r\n          } else if (isMatch(nameStart, c)) {\r\n            parser.state = S.OPEN_TAG\r\n            parser.tagName = c\r\n          } else if (c === '/') {\r\n            parser.state = S.CLOSE_TAG\r\n            parser.tagName = ''\r\n          } else if (c === '?') {\r\n            parser.state = S.PROC_INST\r\n            parser.procInstName = parser.procInstBody = ''\r\n          } else {\r\n            strictFail(parser, 'Unencoded <')\r\n            // if there was some whitespace, then add that in.\r\n            if (parser.startTagPosition + 1 < parser.position) {\r\n              var pad = parser.position - parser.startTagPosition\r\n              c = new Array(pad).join(' ') + c\r\n            }\r\n            parser.textNode += '<' + c\r\n            parser.state = S.TEXT\r\n          }\r\n          continue\r\n\r\n        case S.SGML_DECL:\r\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\r\n            emitNode(parser, 'onopencdata')\r\n            parser.state = S.CDATA\r\n            parser.sgmlDecl = ''\r\n            parser.cdata = ''\r\n          } else if (parser.sgmlDecl + c === '--') {\r\n            parser.state = S.COMMENT\r\n            parser.comment = ''\r\n            parser.sgmlDecl = ''\r\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\r\n            parser.state = S.DOCTYPE\r\n            if (parser.doctype || parser.sawRoot) {\r\n              strictFail(parser,\r\n                'Inappropriately located doctype declaration')\r\n            }\r\n            parser.doctype = ''\r\n            parser.sgmlDecl = ''\r\n          } else if (c === '>') {\r\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\r\n            parser.sgmlDecl = ''\r\n            parser.state = S.TEXT\r\n          } else if (isQuote(c)) {\r\n            parser.state = S.SGML_DECL_QUOTED\r\n            parser.sgmlDecl += c\r\n          } else {\r\n            parser.sgmlDecl += c\r\n          }\r\n          continue\r\n\r\n        case S.SGML_DECL_QUOTED:\r\n          if (c === parser.q) {\r\n            parser.state = S.SGML_DECL\r\n            parser.q = ''\r\n          }\r\n          parser.sgmlDecl += c\r\n          continue\r\n\r\n        case S.DOCTYPE:\r\n          if (c === '>') {\r\n            parser.state = S.TEXT\r\n            emitNode(parser, 'ondoctype', parser.doctype)\r\n            parser.doctype = true // just remember that we saw it.\r\n          } else {\r\n            parser.doctype += c\r\n            if (c === '[') {\r\n              parser.state = S.DOCTYPE_DTD\r\n            } else if (isQuote(c)) {\r\n              parser.state = S.DOCTYPE_QUOTED\r\n              parser.q = c\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.DOCTYPE_QUOTED:\r\n          parser.doctype += c\r\n          if (c === parser.q) {\r\n            parser.q = ''\r\n            parser.state = S.DOCTYPE\r\n          }\r\n          continue\r\n\r\n        case S.DOCTYPE_DTD:\r\n          parser.doctype += c\r\n          if (c === ']') {\r\n            parser.state = S.DOCTYPE\r\n          } else if (isQuote(c)) {\r\n            parser.state = S.DOCTYPE_DTD_QUOTED\r\n            parser.q = c\r\n          }\r\n          continue\r\n\r\n        case S.DOCTYPE_DTD_QUOTED:\r\n          parser.doctype += c\r\n          if (c === parser.q) {\r\n            parser.state = S.DOCTYPE_DTD\r\n            parser.q = ''\r\n          }\r\n          continue\r\n\r\n        case S.COMMENT:\r\n          if (c === '-') {\r\n            parser.state = S.COMMENT_ENDING\r\n          } else {\r\n            parser.comment += c\r\n          }\r\n          continue\r\n\r\n        case S.COMMENT_ENDING:\r\n          if (c === '-') {\r\n            parser.state = S.COMMENT_ENDED\r\n            parser.comment = textopts(parser.opt, parser.comment)\r\n            if (parser.comment) {\r\n              emitNode(parser, 'oncomment', parser.comment)\r\n            }\r\n            parser.comment = ''\r\n          } else {\r\n            parser.comment += '-' + c\r\n            parser.state = S.COMMENT\r\n          }\r\n          continue\r\n\r\n        case S.COMMENT_ENDED:\r\n          if (c !== '>') {\r\n            strictFail(parser, 'Malformed comment')\r\n            // allow <!-- blah -- bloo --> in non-strict mode,\r\n            // which is a comment of \" blah -- bloo \"\r\n            parser.comment += '--' + c\r\n            parser.state = S.COMMENT\r\n          } else {\r\n            parser.state = S.TEXT\r\n          }\r\n          continue\r\n\r\n        case S.CDATA:\r\n          if (c === ']') {\r\n            parser.state = S.CDATA_ENDING\r\n          } else {\r\n            parser.cdata += c\r\n          }\r\n          continue\r\n\r\n        case S.CDATA_ENDING:\r\n          if (c === ']') {\r\n            parser.state = S.CDATA_ENDING_2\r\n          } else {\r\n            parser.cdata += ']' + c\r\n            parser.state = S.CDATA\r\n          }\r\n          continue\r\n\r\n        case S.CDATA_ENDING_2:\r\n          if (c === '>') {\r\n            if (parser.cdata) {\r\n              emitNode(parser, 'oncdata', parser.cdata)\r\n            }\r\n            emitNode(parser, 'onclosecdata')\r\n            parser.cdata = ''\r\n            parser.state = S.TEXT\r\n          } else if (c === ']') {\r\n            parser.cdata += ']'\r\n          } else {\r\n            parser.cdata += ']]' + c\r\n            parser.state = S.CDATA\r\n          }\r\n          continue\r\n\r\n        case S.PROC_INST:\r\n          if (c === '?') {\r\n            parser.state = S.PROC_INST_ENDING\r\n          } else if (isWhitespace(c)) {\r\n            parser.state = S.PROC_INST_BODY\r\n          } else {\r\n            parser.procInstName += c\r\n          }\r\n          continue\r\n\r\n        case S.PROC_INST_BODY:\r\n          if (!parser.procInstBody && isWhitespace(c)) {\r\n            continue\r\n          } else if (c === '?') {\r\n            parser.state = S.PROC_INST_ENDING\r\n          } else {\r\n            parser.procInstBody += c\r\n          }\r\n          continue\r\n\r\n        case S.PROC_INST_ENDING:\r\n          if (c === '>') {\r\n            emitNode(parser, 'onprocessinginstruction', {\r\n              name: parser.procInstName,\r\n              body: parser.procInstBody\r\n            })\r\n            parser.procInstName = parser.procInstBody = ''\r\n            parser.state = S.TEXT\r\n          } else {\r\n            parser.procInstBody += '?' + c\r\n            parser.state = S.PROC_INST_BODY\r\n          }\r\n          continue\r\n\r\n        case S.OPEN_TAG:\r\n          if (isMatch(nameBody, c)) {\r\n            parser.tagName += c\r\n          } else {\r\n            newTag(parser)\r\n            if (c === '>') {\r\n              openTag(parser)\r\n            } else if (c === '/') {\r\n              parser.state = S.OPEN_TAG_SLASH\r\n            } else {\r\n              if (!isWhitespace(c)) {\r\n                strictFail(parser, 'Invalid character in tag name')\r\n              }\r\n              parser.state = S.ATTRIB\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.OPEN_TAG_SLASH:\r\n          if (c === '>') {\r\n            openTag(parser, true)\r\n            closeTag(parser)\r\n          } else {\r\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\r\n            parser.state = S.ATTRIB\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB:\r\n          // haven't read the attribute name yet.\r\n          if (isWhitespace(c)) {\r\n            continue\r\n          } else if (c === '>') {\r\n            openTag(parser)\r\n          } else if (c === '/') {\r\n            parser.state = S.OPEN_TAG_SLASH\r\n          } else if (isMatch(nameStart, c)) {\r\n            parser.attribName = c\r\n            parser.attribValue = ''\r\n            parser.state = S.ATTRIB_NAME\r\n          } else {\r\n            strictFail(parser, 'Invalid attribute name')\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_NAME:\r\n          if (c === '=') {\r\n            parser.state = S.ATTRIB_VALUE\r\n          } else if (c === '>') {\r\n            strictFail(parser, 'Attribute without value')\r\n            parser.attribValue = parser.attribName\r\n            attrib(parser)\r\n            openTag(parser)\r\n          } else if (isWhitespace(c)) {\r\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\r\n          } else if (isMatch(nameBody, c)) {\r\n            parser.attribName += c\r\n          } else {\r\n            strictFail(parser, 'Invalid attribute name')\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_NAME_SAW_WHITE:\r\n          if (c === '=') {\r\n            parser.state = S.ATTRIB_VALUE\r\n          } else if (isWhitespace(c)) {\r\n            continue\r\n          } else {\r\n            strictFail(parser, 'Attribute without value')\r\n            parser.tag.attributes[parser.attribName] = ''\r\n            parser.attribValue = ''\r\n            emitNode(parser, 'onattribute', {\r\n              name: parser.attribName,\r\n              value: ''\r\n            })\r\n            parser.attribName = ''\r\n            if (c === '>') {\r\n              openTag(parser)\r\n            } else if (isMatch(nameStart, c)) {\r\n              parser.attribName = c\r\n              parser.state = S.ATTRIB_NAME\r\n            } else {\r\n              strictFail(parser, 'Invalid attribute name')\r\n              parser.state = S.ATTRIB\r\n            }\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE:\r\n          if (isWhitespace(c)) {\r\n            continue\r\n          } else if (isQuote(c)) {\r\n            parser.q = c\r\n            parser.state = S.ATTRIB_VALUE_QUOTED\r\n          } else {\r\n            strictFail(parser, 'Unquoted attribute value')\r\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\r\n            parser.attribValue = c\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE_QUOTED:\r\n          if (c !== parser.q) {\r\n            if (c === '&') {\r\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\r\n            } else {\r\n              parser.attribValue += c\r\n            }\r\n            continue\r\n          }\r\n          attrib(parser)\r\n          parser.q = ''\r\n          parser.state = S.ATTRIB_VALUE_CLOSED\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE_CLOSED:\r\n          if (isWhitespace(c)) {\r\n            parser.state = S.ATTRIB\r\n          } else if (c === '>') {\r\n            openTag(parser)\r\n          } else if (c === '/') {\r\n            parser.state = S.OPEN_TAG_SLASH\r\n          } else if (isMatch(nameStart, c)) {\r\n            strictFail(parser, 'No whitespace between attributes')\r\n            parser.attribName = c\r\n            parser.attribValue = ''\r\n            parser.state = S.ATTRIB_NAME\r\n          } else {\r\n            strictFail(parser, 'Invalid attribute name')\r\n          }\r\n          continue\r\n\r\n        case S.ATTRIB_VALUE_UNQUOTED:\r\n          if (!isAttribEnd(c)) {\r\n            if (c === '&') {\r\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\r\n            } else {\r\n              parser.attribValue += c\r\n            }\r\n            continue\r\n          }\r\n          attrib(parser)\r\n          if (c === '>') {\r\n            openTag(parser)\r\n          } else {\r\n            parser.state = S.ATTRIB\r\n          }\r\n          continue\r\n\r\n        case S.CLOSE_TAG:\r\n          if (!parser.tagName) {\r\n            if (isWhitespace(c)) {\r\n              continue\r\n            } else if (notMatch(nameStart, c)) {\r\n              if (parser.script) {\r\n                parser.script += '</' + c\r\n                parser.state = S.SCRIPT\r\n              } else {\r\n                strictFail(parser, 'Invalid tagname in closing tag.')\r\n              }\r\n            } else {\r\n              parser.tagName = c\r\n            }\r\n          } else if (c === '>') {\r\n            closeTag(parser)\r\n          } else if (isMatch(nameBody, c)) {\r\n            parser.tagName += c\r\n          } else if (parser.script) {\r\n            parser.script += '</' + parser.tagName\r\n            parser.tagName = ''\r\n            parser.state = S.SCRIPT\r\n          } else {\r\n            if (!isWhitespace(c)) {\r\n              strictFail(parser, 'Invalid tagname in closing tag')\r\n            }\r\n            parser.state = S.CLOSE_TAG_SAW_WHITE\r\n          }\r\n          continue\r\n\r\n        case S.CLOSE_TAG_SAW_WHITE:\r\n          if (isWhitespace(c)) {\r\n            continue\r\n          }\r\n          if (c === '>') {\r\n            closeTag(parser)\r\n          } else {\r\n            strictFail(parser, 'Invalid characters in closing tag')\r\n          }\r\n          continue\r\n\r\n        case S.TEXT_ENTITY:\r\n        case S.ATTRIB_VALUE_ENTITY_Q:\r\n        case S.ATTRIB_VALUE_ENTITY_U:\r\n          var returnState\r\n          var buffer\r\n          switch (parser.state) {\r\n            case S.TEXT_ENTITY:\r\n              returnState = S.TEXT\r\n              buffer = 'textNode'\r\n              break\r\n\r\n            case S.ATTRIB_VALUE_ENTITY_Q:\r\n              returnState = S.ATTRIB_VALUE_QUOTED\r\n              buffer = 'attribValue'\r\n              break\r\n\r\n            case S.ATTRIB_VALUE_ENTITY_U:\r\n              returnState = S.ATTRIB_VALUE_UNQUOTED\r\n              buffer = 'attribValue'\r\n              break\r\n          }\r\n\r\n          if (c === ';') {\r\n            parser[buffer] += parseEntity(parser)\r\n            parser.entity = ''\r\n            parser.state = returnState\r\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\r\n            parser.entity += c\r\n          } else {\r\n            strictFail(parser, 'Invalid character in entity name')\r\n            parser[buffer] += '&' + parser.entity + c\r\n            parser.entity = ''\r\n            parser.state = returnState\r\n          }\r\n\r\n          continue\r\n\r\n        default:\r\n          throw new Error(parser, 'Unknown state: ' + parser.state)\r\n      }\r\n    } // while\r\n\r\n    if (parser.position >= parser.bufferCheckPosition) {\r\n      checkBufferLength(parser)\r\n    }\r\n    return parser\r\n  }\r\n\r\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\r\n  /* istanbul ignore next */\r\n  if (!String.fromCodePoint) {\r\n    (function () {\r\n      var stringFromCharCode = String.fromCharCode\r\n      var floor = Math.floor\r\n      var fromCodePoint = function () {\r\n        var MAX_SIZE = 0x4000\r\n        var codeUnits = []\r\n        var highSurrogate\r\n        var lowSurrogate\r\n        var index = -1\r\n        var length = arguments.length\r\n        if (!length) {\r\n          return ''\r\n        }\r\n        var result = ''\r\n        while (++index < length) {\r\n          var codePoint = Number(arguments[index])\r\n          if (\r\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\r\n            codePoint < 0 || // not a valid Unicode code point\r\n            codePoint > 0x10FFFF || // not a valid Unicode code point\r\n            floor(codePoint) !== codePoint // not an integer\r\n          ) {\r\n            throw RangeError('Invalid code point: ' + codePoint)\r\n          }\r\n          if (codePoint <= 0xFFFF) { // BMP code point\r\n            codeUnits.push(codePoint)\r\n          } else { // Astral code point; split in surrogate halves\r\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n            codePoint -= 0x10000\r\n            highSurrogate = (codePoint >> 10) + 0xD800\r\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\r\n            codeUnits.push(highSurrogate, lowSurrogate)\r\n          }\r\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\r\n            result += stringFromCharCode.apply(null, codeUnits)\r\n            codeUnits.length = 0\r\n          }\r\n        }\r\n        return result\r\n      }\r\n      /* istanbul ignore next */\r\n      if (Object.defineProperty) {\r\n        Object.defineProperty(String, 'fromCodePoint', {\r\n          value: fromCodePoint,\r\n          configurable: true,\r\n          writable: true\r\n        })\r\n      } else {\r\n        String.fromCodePoint = fromCodePoint\r\n      }\r\n    }())\r\n  }\r\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDTDElement, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  module.exports = XMLDTDElement = (function(superClass) {\r\n    extend(XMLDTDElement, superClass);\r\n\r\n    function XMLDTDElement(parent, name, value) {\r\n      XMLDTDElement.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\r\n      }\r\n      if (!value) {\r\n        value = '(#PCDATA)';\r\n      }\r\n      if (Array.isArray(value)) {\r\n        value = '(' + value.join(',') + ')';\r\n      }\r\n      this.name = this.stringify.name(name);\r\n      this.type = NodeType.ElementDeclaration;\r\n      this.value = this.stringify.dtdElementValue(value);\r\n    }\r\n\r\n    XMLDTDElement.prototype.toString = function(options) {\r\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLDTDElement;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  builder = require('xmlbuilder');\r\n\r\n  defaults = require('./defaults').defaults;\r\n\r\n  requiresCDATA = function(entry) {\r\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\r\n  };\r\n\r\n  wrapCDATA = function(entry) {\r\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\r\n  };\r\n\r\n  escapeCDATA = function(entry) {\r\n    return entry.replace(']]>', ']]]]><![CDATA[>');\r\n  };\r\n\r\n  exports.Builder = (function() {\r\n    function Builder(opts) {\r\n      var key, ref, value;\r\n      this.options = {};\r\n      ref = defaults[\"0.2\"];\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this.options[key] = value;\r\n      }\r\n      for (key in opts) {\r\n        if (!hasProp.call(opts, key)) continue;\r\n        value = opts[key];\r\n        this.options[key] = value;\r\n      }\r\n    }\r\n\r\n    Builder.prototype.buildObject = function(rootObj) {\r\n      var attrkey, charkey, render, rootElement, rootName;\r\n      attrkey = this.options.attrkey;\r\n      charkey = this.options.charkey;\r\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\r\n        rootName = Object.keys(rootObj)[0];\r\n        rootObj = rootObj[rootName];\r\n      } else {\r\n        rootName = this.options.rootName;\r\n      }\r\n      render = (function(_this) {\r\n        return function(element, obj) {\r\n          var attr, child, entry, index, key, value;\r\n          if (typeof obj !== 'object') {\r\n            if (_this.options.cdata && requiresCDATA(obj)) {\r\n              element.raw(wrapCDATA(obj));\r\n            } else {\r\n              element.txt(obj);\r\n            }\r\n          } else if (Array.isArray(obj)) {\r\n            for (index in obj) {\r\n              if (!hasProp.call(obj, index)) continue;\r\n              child = obj[index];\r\n              for (key in child) {\r\n                entry = child[key];\r\n                element = render(element.ele(key), entry).up();\r\n              }\r\n            }\r\n          } else {\r\n            for (key in obj) {\r\n              if (!hasProp.call(obj, key)) continue;\r\n              child = obj[key];\r\n              if (key === attrkey) {\r\n                if (typeof child === \"object\") {\r\n                  for (attr in child) {\r\n                    value = child[attr];\r\n                    element = element.att(attr, value);\r\n                  }\r\n                }\r\n              } else if (key === charkey) {\r\n                if (_this.options.cdata && requiresCDATA(child)) {\r\n                  element = element.raw(wrapCDATA(child));\r\n                } else {\r\n                  element = element.txt(child);\r\n                }\r\n              } else if (Array.isArray(child)) {\r\n                for (index in child) {\r\n                  if (!hasProp.call(child, index)) continue;\r\n                  entry = child[index];\r\n                  if (typeof entry === 'string') {\r\n                    if (_this.options.cdata && requiresCDATA(entry)) {\r\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\r\n                    } else {\r\n                      element = element.ele(key, entry).up();\r\n                    }\r\n                  } else {\r\n                    element = render(element.ele(key), entry).up();\r\n                  }\r\n                }\r\n              } else if (typeof child === \"object\") {\r\n                element = render(element.ele(key), child).up();\r\n              } else {\r\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\r\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\r\n                } else {\r\n                  if (child == null) {\r\n                    child = '';\r\n                  }\r\n                  element = element.ele(key, child.toString()).up();\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return element;\r\n        };\r\n      })(this);\r\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\r\n        headless: this.options.headless,\r\n        allowSurrogateChars: this.options.allowSurrogateChars\r\n      });\r\n      return render(rootElement, rootObj).end(this.options.renderOpts);\r\n    };\r\n\r\n    return Builder;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","export default \"\\r\\n.analyzeData{\\r\\n    background: -webkit-linear-gradient(left, #3931af, #00c6ff);\\r\\n    padding: 3%;\\r\\n}\\r\\n\\r\\n  tr.hide-table-padding td {\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .expand-button {\\r\\n    position: relative;\\r\\n  }\\r\\n\\r\\n  .accordion-toggle .expand-button:after\\r\\n  {\\r\\n    position: absolute;\\r\\n    left:.75rem;\\r\\n    top: 50%;\\r\\n    transform: translate(0, -50%);\\r\\n    content: '';\\r\\n  }\\r\\n\\r\\n  .accordion-toggle.collapsed .expand-button:after\\r\\n  {\\r\\n    content: '';\\r\\n  }\\r\\n\\r\\n  .overlay {\\r\\n    position:fixed;\\r\\n    background-color: rgba(255,255,255,0.7);\\r\\n    z-index:9999;\\r\\n    background: none;\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n    /* width:100%;\\r\\n    left:0;right:0;top:0;bottom:0;\\r\\n    background-color: rgba(255,255,255,0.7);\\r\\n    z-index:9999; */\\r\\n    /* display:none; */\\r\\n}   \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSwyREFBMkQ7SUFDM0QsV0FBVztBQUNmOztFQUVFO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsUUFBUTtJQUNSLDZCQUE2QjtJQUM3QixXQUFXO0VBQ2I7O0VBQ0E7O0lBRUUsV0FBVztFQUNiOztFQUVBO0lBQ0UsY0FBYztJQUNkLHVDQUF1QztJQUN2QyxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixXQUFXO0lBQ1g7OzttQkFHZTtJQUNmLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmFuYWx5emVEYXRhe1xyXG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCwgIzM5MzFhZiwgIzAwYzZmZik7XHJcbiAgICBwYWRkaW5nOiAzJTtcclxufVxyXG5cclxuICB0ci5oaWRlLXRhYmxlLXBhZGRpbmcgdGQge1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbiAgXHJcbiAgLmV4cGFuZC1idXR0b24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuICBcclxuICAuYWNjb3JkaW9uLXRvZ2dsZSAuZXhwYW5kLWJ1dHRvbjphZnRlclxyXG4gIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6Ljc1cmVtO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gIH1cclxuICAuYWNjb3JkaW9uLXRvZ2dsZS5jb2xsYXBzZWQgLmV4cGFuZC1idXR0b246YWZ0ZXJcclxuICB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICB9XHJcblxyXG4gIC5vdmVybGF5IHtcclxuICAgIHBvc2l0aW9uOmZpeGVkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjcpO1xyXG4gICAgei1pbmRleDo5OTk5O1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgLyogd2lkdGg6MTAwJTtcclxuICAgIGxlZnQ6MDtyaWdodDowO3RvcDowO2JvdHRvbTowO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjcpO1xyXG4gICAgei1pbmRleDo5OTk5OyAqL1xyXG4gICAgLyogZGlzcGxheTpub25lOyAqL1xyXG59ICAgIl19 */\";","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\r\n    slice = [].slice,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  assign = function() {\r\n    var i, key, len, source, sources, target;\r\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\r\n    if (isFunction(Object.assign)) {\r\n      Object.assign.apply(null, arguments);\r\n    } else {\r\n      for (i = 0, len = sources.length; i < len; i++) {\r\n        source = sources[i];\r\n        if (source != null) {\r\n          for (key in source) {\r\n            if (!hasProp.call(source, key)) continue;\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n\r\n  isFunction = function(val) {\r\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\r\n  };\r\n\r\n  isObject = function(val) {\r\n    var ref;\r\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\r\n  };\r\n\r\n  isArray = function(val) {\r\n    if (isFunction(Array.isArray)) {\r\n      return Array.isArray(val);\r\n    } else {\r\n      return Object.prototype.toString.call(val) === '[object Array]';\r\n    }\r\n  };\r\n\r\n  isEmpty = function(val) {\r\n    var key;\r\n    if (isArray(val)) {\r\n      return !val.length;\r\n    } else {\r\n      for (key in val) {\r\n        if (!hasProp.call(val, key)) continue;\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isPlainObject = function(val) {\r\n    var ctor, proto;\r\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\r\n  };\r\n\r\n  getValue = function(obj) {\r\n    if (isFunction(obj.valueOf)) {\r\n      return obj.valueOf();\r\n    } else {\r\n      return obj;\r\n    }\r\n  };\r\n\r\n  module.exports.assign = assign;\r\n\r\n  module.exports.isFunction = isFunction;\r\n\r\n  module.exports.isObject = isObject;\r\n\r\n  module.exports.isArray = isArray;\r\n\r\n  module.exports.isEmpty = isEmpty;\r\n\r\n  module.exports.isPlainObject = isPlainObject;\r\n\r\n  module.exports.getValue = getValue;\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLCData, XMLCharacterData,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLCharacterData = require('./XMLCharacterData');\r\n\r\n  module.exports = XMLCData = (function(superClass) {\r\n    extend(XMLCData, superClass);\r\n\r\n    function XMLCData(parent, text) {\r\n      XMLCData.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\r\n      }\r\n      this.name = \"#cdata-section\";\r\n      this.type = NodeType.CData;\r\n      this.value = this.stringify.cdata(text);\r\n    }\r\n\r\n    XMLCData.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLCData.prototype.toString = function(options) {\r\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLCData;\r\n\r\n  })(XMLCharacterData);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLNode, XMLRaw,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLRaw = (function(superClass) {\r\n    extend(XMLRaw, superClass);\r\n\r\n    function XMLRaw(parent, text) {\r\n      XMLRaw.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\r\n      }\r\n      this.type = NodeType.Raw;\r\n      this.value = this.stringify.raw(text);\r\n    }\r\n\r\n    XMLRaw.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLRaw.prototype.toString = function(options) {\r\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLRaw;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDeclaration, XMLNode, isObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isObject = require('./Utility').isObject;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  module.exports = XMLDeclaration = (function(superClass) {\r\n    extend(XMLDeclaration, superClass);\r\n\r\n    function XMLDeclaration(parent, version, encoding, standalone) {\r\n      var ref;\r\n      XMLDeclaration.__super__.constructor.call(this, parent);\r\n      if (isObject(version)) {\r\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\r\n      }\r\n      if (!version) {\r\n        version = '1.0';\r\n      }\r\n      this.type = NodeType.Declaration;\r\n      this.version = this.stringify.xmlVersion(version);\r\n      if (encoding != null) {\r\n        this.encoding = this.stringify.xmlEncoding(encoding);\r\n      }\r\n      if (standalone != null) {\r\n        this.standalone = this.stringify.xmlStandalone(standalone);\r\n      }\r\n    }\r\n\r\n    XMLDeclaration.prototype.toString = function(options) {\r\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLDeclaration;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLCharacterData, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  module.exports = XMLCharacterData = (function(superClass) {\r\n    extend(XMLCharacterData, superClass);\r\n\r\n    function XMLCharacterData(parent) {\r\n      XMLCharacterData.__super__.constructor.call(this, parent);\r\n      this.value = '';\r\n    }\r\n\r\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\r\n      get: function() {\r\n        return this.value;\r\n      },\r\n      set: function(value) {\r\n        return this.value = value || '';\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\r\n      get: function() {\r\n        return this.value.length;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\r\n      get: function() {\r\n        return this.value;\r\n      },\r\n      set: function(value) {\r\n        return this.value = value || '';\r\n      }\r\n    });\r\n\r\n    XMLCharacterData.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLCharacterData.prototype.substringData = function(offset, count) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLCharacterData.prototype.appendData = function(arg) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLCharacterData.prototype.isEqualNode = function(node) {\r\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\r\n        return false;\r\n      }\r\n      if (node.data !== this.data) {\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return XMLCharacterData;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLDocument = require('./XMLDocument');\r\n\r\n  XMLElement = require('./XMLElement');\r\n\r\n  XMLCData = require('./XMLCData');\r\n\r\n  XMLComment = require('./XMLComment');\r\n\r\n  XMLRaw = require('./XMLRaw');\r\n\r\n  XMLText = require('./XMLText');\r\n\r\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n\r\n  XMLDeclaration = require('./XMLDeclaration');\r\n\r\n  XMLDocType = require('./XMLDocType');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  XMLAttribute = require('./XMLAttribute');\r\n\r\n  XMLStringifier = require('./XMLStringifier');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  WriterState = require('./WriterState');\r\n\r\n  module.exports = XMLDocumentCB = (function() {\r\n    function XMLDocumentCB(options, onData, onEnd) {\r\n      var writerOptions;\r\n      this.name = \"?xml\";\r\n      this.type = NodeType.Document;\r\n      options || (options = {});\r\n      writerOptions = {};\r\n      if (!options.writer) {\r\n        options.writer = new XMLStringWriter();\r\n      } else if (isPlainObject(options.writer)) {\r\n        writerOptions = options.writer;\r\n        options.writer = new XMLStringWriter();\r\n      }\r\n      this.options = options;\r\n      this.writer = options.writer;\r\n      this.writerOptions = this.writer.filterOptions(writerOptions);\r\n      this.stringify = new XMLStringifier(options);\r\n      this.onDataCallback = onData || function() {};\r\n      this.onEndCallback = onEnd || function() {};\r\n      this.currentNode = null;\r\n      this.currentLevel = -1;\r\n      this.openTags = {};\r\n      this.documentStarted = false;\r\n      this.documentCompleted = false;\r\n      this.root = null;\r\n    }\r\n\r\n    XMLDocumentCB.prototype.createChildNode = function(node) {\r\n      var att, attName, attributes, child, i, len, ref1, ref2;\r\n      switch (node.type) {\r\n        case NodeType.CData:\r\n          this.cdata(node.value);\r\n          break;\r\n        case NodeType.Comment:\r\n          this.comment(node.value);\r\n          break;\r\n        case NodeType.Element:\r\n          attributes = {};\r\n          ref1 = node.attribs;\r\n          for (attName in ref1) {\r\n            if (!hasProp.call(ref1, attName)) continue;\r\n            att = ref1[attName];\r\n            attributes[attName] = att.value;\r\n          }\r\n          this.node(node.name, attributes);\r\n          break;\r\n        case NodeType.Dummy:\r\n          this.dummy();\r\n          break;\r\n        case NodeType.Raw:\r\n          this.raw(node.value);\r\n          break;\r\n        case NodeType.Text:\r\n          this.text(node.value);\r\n          break;\r\n        case NodeType.ProcessingInstruction:\r\n          this.instruction(node.target, node.value);\r\n          break;\r\n        default:\r\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\r\n      }\r\n      ref2 = node.children;\r\n      for (i = 0, len = ref2.length; i < len; i++) {\r\n        child = ref2[i];\r\n        this.createChildNode(child);\r\n        if (child.type === NodeType.Element) {\r\n          this.up();\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dummy = function() {\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\r\n      var ref1;\r\n      if (name == null) {\r\n        throw new Error(\"Missing node name.\");\r\n      }\r\n      if (this.root && this.currentLevel === -1) {\r\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\r\n      }\r\n      this.openCurrent();\r\n      name = getValue(name);\r\n      if (attributes == null) {\r\n        attributes = {};\r\n      }\r\n      attributes = getValue(attributes);\r\n      if (!isObject(attributes)) {\r\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\r\n      }\r\n      this.currentNode = new XMLElement(this, name, attributes);\r\n      this.currentNode.children = false;\r\n      this.currentLevel++;\r\n      this.openTags[this.currentLevel] = this.currentNode;\r\n      if (text != null) {\r\n        this.text(text);\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\r\n      var child, i, len, oldValidationFlag, ref1, root;\r\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\r\n        this.dtdElement.apply(this, arguments);\r\n      } else {\r\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\r\n          oldValidationFlag = this.options.noValidation;\r\n          this.options.noValidation = true;\r\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\r\n          root.element(name);\r\n          this.options.noValidation = oldValidationFlag;\r\n          ref1 = root.children;\r\n          for (i = 0, len = ref1.length; i < len; i++) {\r\n            child = ref1[i];\r\n            this.createChildNode(child);\r\n            if (child.type === NodeType.Element) {\r\n              this.up();\r\n            }\r\n          }\r\n        } else {\r\n          this.node(name, attributes, text);\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.attribute = function(name, value) {\r\n      var attName, attValue;\r\n      if (!this.currentNode || this.currentNode.children) {\r\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\r\n      }\r\n      if (name != null) {\r\n        name = getValue(name);\r\n      }\r\n      if (isObject(name)) {\r\n        for (attName in name) {\r\n          if (!hasProp.call(name, attName)) continue;\r\n          attValue = name[attName];\r\n          this.attribute(attName, attValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        if (this.options.keepNullAttributes && (value == null)) {\r\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\r\n        } else if (value != null) {\r\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.text = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLText(this, value);\r\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.cdata = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLCData(this, value);\r\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.comment = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLComment(this, value);\r\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.raw = function(value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLRaw(this, value);\r\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.instruction = function(target, value) {\r\n      var i, insTarget, insValue, len, node;\r\n      this.openCurrent();\r\n      if (target != null) {\r\n        target = getValue(target);\r\n      }\r\n      if (value != null) {\r\n        value = getValue(value);\r\n      }\r\n      if (Array.isArray(target)) {\r\n        for (i = 0, len = target.length; i < len; i++) {\r\n          insTarget = target[i];\r\n          this.instruction(insTarget);\r\n        }\r\n      } else if (isObject(target)) {\r\n        for (insTarget in target) {\r\n          if (!hasProp.call(target, insTarget)) continue;\r\n          insValue = target[insTarget];\r\n          this.instruction(insTarget, insValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        node = new XMLProcessingInstruction(this, target, value);\r\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\r\n      var node;\r\n      this.openCurrent();\r\n      if (this.documentStarted) {\r\n        throw new Error(\"declaration() must be the first node.\");\r\n      }\r\n      node = new XMLDeclaration(this, version, encoding, standalone);\r\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\r\n      this.openCurrent();\r\n      if (root == null) {\r\n        throw new Error(\"Missing root node name.\");\r\n      }\r\n      if (this.root) {\r\n        throw new Error(\"dtd() must come before the root node.\");\r\n      }\r\n      this.currentNode = new XMLDocType(this, pubID, sysID);\r\n      this.currentNode.rootNodeName = root;\r\n      this.currentNode.children = false;\r\n      this.currentLevel++;\r\n      this.openTags[this.currentLevel] = this.currentNode;\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDElement(this, name, value);\r\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\r\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.entity = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDEntity(this, false, name, value);\r\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDEntity(this, true, name, value);\r\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.notation = function(name, value) {\r\n      var node;\r\n      this.openCurrent();\r\n      node = new XMLDTDNotation(this, name, value);\r\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.up = function() {\r\n      if (this.currentLevel < 0) {\r\n        throw new Error(\"The document node has no parent.\");\r\n      }\r\n      if (this.currentNode) {\r\n        if (this.currentNode.children) {\r\n          this.closeNode(this.currentNode);\r\n        } else {\r\n          this.openNode(this.currentNode);\r\n        }\r\n        this.currentNode = null;\r\n      } else {\r\n        this.closeNode(this.openTags[this.currentLevel]);\r\n      }\r\n      delete this.openTags[this.currentLevel];\r\n      this.currentLevel--;\r\n      return this;\r\n    };\r\n\r\n    XMLDocumentCB.prototype.end = function() {\r\n      while (this.currentLevel >= 0) {\r\n        this.up();\r\n      }\r\n      return this.onEnd();\r\n    };\r\n\r\n    XMLDocumentCB.prototype.openCurrent = function() {\r\n      if (this.currentNode) {\r\n        this.currentNode.children = true;\r\n        return this.openNode(this.currentNode);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.openNode = function(node) {\r\n      var att, chunk, name, ref1;\r\n      if (!node.isOpen) {\r\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\r\n          this.root = node;\r\n        }\r\n        chunk = '';\r\n        if (node.type === NodeType.Element) {\r\n          this.writerOptions.state = WriterState.OpenTag;\r\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\r\n          ref1 = node.attribs;\r\n          for (name in ref1) {\r\n            if (!hasProp.call(ref1, name)) continue;\r\n            att = ref1[name];\r\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\r\n          }\r\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\r\n          this.writerOptions.state = WriterState.InsideTag;\r\n        } else {\r\n          this.writerOptions.state = WriterState.OpenTag;\r\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\r\n          if (node.pubID && node.sysID) {\r\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n          } else if (node.sysID) {\r\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\r\n          }\r\n          if (node.children) {\r\n            chunk += ' [';\r\n            this.writerOptions.state = WriterState.InsideTag;\r\n          } else {\r\n            this.writerOptions.state = WriterState.CloseTag;\r\n            chunk += '>';\r\n          }\r\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\r\n        }\r\n        this.onData(chunk, this.currentLevel);\r\n        return node.isOpen = true;\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.closeNode = function(node) {\r\n      var chunk;\r\n      if (!node.isClosed) {\r\n        chunk = '';\r\n        this.writerOptions.state = WriterState.CloseTag;\r\n        if (node.type === NodeType.Element) {\r\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\r\n        } else {\r\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\r\n        }\r\n        this.writerOptions.state = WriterState.None;\r\n        this.onData(chunk, this.currentLevel);\r\n        return node.isClosed = true;\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\r\n      this.documentStarted = true;\r\n      return this.onDataCallback(chunk, level + 1);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.onEnd = function() {\r\n      this.documentCompleted = true;\r\n      return this.onEndCallback();\r\n    };\r\n\r\n    XMLDocumentCB.prototype.debugInfo = function(name) {\r\n      if (name == null) {\r\n        return \"\";\r\n      } else {\r\n        return \"node: <\" + name + \">\";\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.ele = function() {\r\n      return this.element.apply(this, arguments);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.txt = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dat = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.com = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.ins = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\r\n      return this.declaration(version, encoding, standalone);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\r\n      return this.doctype(root, pubID, sysID);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\r\n      return this.element(name, attributes, text);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.t = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.d = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.c = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.r = function(value) {\r\n      return this.raw(value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.i = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.att = function() {\r\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\r\n        return this.attList.apply(this, arguments);\r\n      } else {\r\n        return this.attribute.apply(this, arguments);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.a = function() {\r\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\r\n        return this.attList.apply(this, arguments);\r\n      } else {\r\n        return this.attribute.apply(this, arguments);\r\n      }\r\n    };\r\n\r\n    XMLDocumentCB.prototype.ent = function(name, value) {\r\n      return this.entity(name, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.pent = function(name, value) {\r\n      return this.pEntity(name, value);\r\n    };\r\n\r\n    XMLDocumentCB.prototype.not = function(name, value) {\r\n      return this.notation(name, value);\r\n    };\r\n\r\n    return XMLDocumentCB;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLStringifier,\r\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  module.exports = XMLStringifier = (function() {\r\n    function XMLStringifier(options) {\r\n      this.assertLegalName = bind(this.assertLegalName, this);\r\n      this.assertLegalChar = bind(this.assertLegalChar, this);\r\n      var key, ref, value;\r\n      options || (options = {});\r\n      this.options = options;\r\n      if (!this.options.version) {\r\n        this.options.version = '1.0';\r\n      }\r\n      ref = options.stringify || {};\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this[key] = value;\r\n      }\r\n    }\r\n\r\n    XMLStringifier.prototype.name = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalName('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.text = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar(this.textEscape('' + val || ''));\r\n    };\r\n\r\n    XMLStringifier.prototype.cdata = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      val = '' + val || '';\r\n      val = val.replace(']]>', ']]]]><![CDATA[>');\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.comment = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      val = '' + val || '';\r\n      if (val.match(/--/)) {\r\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\r\n      }\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.raw = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return '' + val || '';\r\n    };\r\n\r\n    XMLStringifier.prototype.attValue = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\r\n    };\r\n\r\n    XMLStringifier.prototype.insTarget = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.insValue = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      val = '' + val || '';\r\n      if (val.match(/\\?>/)) {\r\n        throw new Error(\"Invalid processing instruction value: \" + val);\r\n      }\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.xmlVersion = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      val = '' + val || '';\r\n      if (!val.match(/1\\.[0-9]+/)) {\r\n        throw new Error(\"Invalid version number: \" + val);\r\n      }\r\n      return val;\r\n    };\r\n\r\n    XMLStringifier.prototype.xmlEncoding = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      val = '' + val || '';\r\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\r\n        throw new Error(\"Invalid encoding: \" + val);\r\n      }\r\n      return this.assertLegalChar(val);\r\n    };\r\n\r\n    XMLStringifier.prototype.xmlStandalone = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      if (val) {\r\n        return \"yes\";\r\n      } else {\r\n        return \"no\";\r\n      }\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdPubID = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdSysID = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdElementValue = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdAttType = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.dtdNData = function(val) {\r\n      if (this.options.noValidation) {\r\n        return val;\r\n      }\r\n      return this.assertLegalChar('' + val || '');\r\n    };\r\n\r\n    XMLStringifier.prototype.convertAttKey = '@';\r\n\r\n    XMLStringifier.prototype.convertPIKey = '?';\r\n\r\n    XMLStringifier.prototype.convertTextKey = '#text';\r\n\r\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\r\n\r\n    XMLStringifier.prototype.convertCommentKey = '#comment';\r\n\r\n    XMLStringifier.prototype.convertRawKey = '#raw';\r\n\r\n    XMLStringifier.prototype.assertLegalChar = function(str) {\r\n      var regex, res;\r\n      if (this.options.noValidation) {\r\n        return str;\r\n      }\r\n      regex = '';\r\n      if (this.options.version === '1.0') {\r\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\r\n        if (res = str.match(regex)) {\r\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\r\n        }\r\n      } else if (this.options.version === '1.1') {\r\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\r\n        if (res = str.match(regex)) {\r\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\r\n        }\r\n      }\r\n      return str;\r\n    };\r\n\r\n    XMLStringifier.prototype.assertLegalName = function(str) {\r\n      var regex;\r\n      if (this.options.noValidation) {\r\n        return str;\r\n      }\r\n      this.assertLegalChar(str);\r\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\r\n      if (!str.match(regex)) {\r\n        throw new Error(\"Invalid character in name\");\r\n      }\r\n      return str;\r\n    };\r\n\r\n    XMLStringifier.prototype.textEscape = function(str) {\r\n      var ampregex;\r\n      if (this.options.noValidation) {\r\n        return str;\r\n      }\r\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\r\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\r\n    };\r\n\r\n    XMLStringifier.prototype.attEscape = function(str) {\r\n      var ampregex;\r\n      if (this.options.noValidation) {\r\n        return str;\r\n      }\r\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\r\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\r\n    };\r\n\r\n    return XMLStringifier;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLNamedNodeMap;\r\n\r\n  module.exports = XMLNamedNodeMap = (function() {\r\n    function XMLNamedNodeMap(nodes) {\r\n      this.nodes = nodes;\r\n    }\r\n\r\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\r\n      get: function() {\r\n        return Object.keys(this.nodes).length || 0;\r\n      }\r\n    });\r\n\r\n    XMLNamedNodeMap.prototype.clone = function() {\r\n      return this.nodes = null;\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\r\n      return this.nodes[name];\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\r\n      var oldNode;\r\n      oldNode = this.nodes[node.nodeName];\r\n      this.nodes[node.nodeName] = node;\r\n      return oldNode || null;\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\r\n      var oldNode;\r\n      oldNode = this.nodes[name];\r\n      delete this.nodes[name];\r\n      return oldNode || null;\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.item = function(index) {\r\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    };\r\n\r\n    return XMLNamedNodeMap;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  exports.stripBOM = function(str) {\r\n    if (str[0] === '\\uFEFF') {\r\n      return str.substring(1);\r\n    } else {\r\n      return str;\r\n    }\r\n  };\r\n\r\n}).call(this);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortTablePipe } from '../sort-table.pipe';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [HomeComponent,SortTablePipe],\r\n  imports: [\r\n    CommonModule,FormsModule,HttpClientModule,NgxSpinnerModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\r\n\r\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\r\n\r\n  XMLDOMImplementation = require('./XMLDOMImplementation');\r\n\r\n  XMLDocument = require('./XMLDocument');\r\n\r\n  XMLDocumentCB = require('./XMLDocumentCB');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  XMLStreamWriter = require('./XMLStreamWriter');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  WriterState = require('./WriterState');\r\n\r\n  module.exports.create = function(name, xmldec, doctype, options) {\r\n    var doc, root;\r\n    if (name == null) {\r\n      throw new Error(\"Root element needs a name.\");\r\n    }\r\n    options = assign({}, xmldec, doctype, options);\r\n    doc = new XMLDocument(options);\r\n    root = doc.element(name);\r\n    if (!options.headless) {\r\n      doc.declaration(options);\r\n      if ((options.pubID != null) || (options.sysID != null)) {\r\n        doc.dtd(options);\r\n      }\r\n    }\r\n    return root;\r\n  };\r\n\r\n  module.exports.begin = function(options, onData, onEnd) {\r\n    var ref1;\r\n    if (isFunction(options)) {\r\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\r\n      options = {};\r\n    }\r\n    if (onData) {\r\n      return new XMLDocumentCB(options, onData, onEnd);\r\n    } else {\r\n      return new XMLDocument(options);\r\n    }\r\n  };\r\n\r\n  module.exports.stringWriter = function(options) {\r\n    return new XMLStringWriter(options);\r\n  };\r\n\r\n  module.exports.streamWriter = function(stream, options) {\r\n    return new XMLStreamWriter(stream, options);\r\n  };\r\n\r\n  module.exports.implementation = new XMLDOMImplementation();\r\n\r\n  module.exports.nodeType = NodeType;\r\n\r\n  module.exports.writerState = WriterState;\r\n\r\n}).call(this);\r\n","// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\n/*</replacement>*/\r\n\r\nvar isEncoding = Buffer.isEncoding || function (encoding) {\r\n  encoding = '' + encoding;\r\n  switch (encoding && encoding.toLowerCase()) {\r\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction _normalizeEncoding(enc) {\r\n  if (!enc) return 'utf8';\r\n  var retried;\r\n  while (true) {\r\n    switch (enc) {\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return 'utf8';\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return 'utf16le';\r\n      case 'latin1':\r\n      case 'binary':\r\n        return 'latin1';\r\n      case 'base64':\r\n      case 'ascii':\r\n      case 'hex':\r\n        return enc;\r\n      default:\r\n        if (retried) return; // undefined\r\n        enc = ('' + enc).toLowerCase();\r\n        retried = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\r\n// modules monkey-patch it to support additional encodings\r\nfunction normalizeEncoding(enc) {\r\n  var nenc = _normalizeEncoding(enc);\r\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\r\n  return nenc || enc;\r\n}\r\n\r\n// StringDecoder provides an interface for efficiently splitting a series of\r\n// buffers into a series of JS strings without breaking apart multi-byte\r\n// characters.\r\nexports.StringDecoder = StringDecoder;\r\nfunction StringDecoder(encoding) {\r\n  this.encoding = normalizeEncoding(encoding);\r\n  var nb;\r\n  switch (this.encoding) {\r\n    case 'utf16le':\r\n      this.text = utf16Text;\r\n      this.end = utf16End;\r\n      nb = 4;\r\n      break;\r\n    case 'utf8':\r\n      this.fillLast = utf8FillLast;\r\n      nb = 4;\r\n      break;\r\n    case 'base64':\r\n      this.text = base64Text;\r\n      this.end = base64End;\r\n      nb = 3;\r\n      break;\r\n    default:\r\n      this.write = simpleWrite;\r\n      this.end = simpleEnd;\r\n      return;\r\n  }\r\n  this.lastNeed = 0;\r\n  this.lastTotal = 0;\r\n  this.lastChar = Buffer.allocUnsafe(nb);\r\n}\r\n\r\nStringDecoder.prototype.write = function (buf) {\r\n  if (buf.length === 0) return '';\r\n  var r;\r\n  var i;\r\n  if (this.lastNeed) {\r\n    r = this.fillLast(buf);\r\n    if (r === undefined) return '';\r\n    i = this.lastNeed;\r\n    this.lastNeed = 0;\r\n  } else {\r\n    i = 0;\r\n  }\r\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\r\n  return r || '';\r\n};\r\n\r\nStringDecoder.prototype.end = utf8End;\r\n\r\n// Returns only complete characters in a Buffer\r\nStringDecoder.prototype.text = utf8Text;\r\n\r\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\r\nStringDecoder.prototype.fillLast = function (buf) {\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n};\r\n\r\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\r\n// continuation byte. If an invalid byte is detected, -2 is returned.\r\nfunction utf8CheckByte(byte) {\r\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\r\n  return byte >> 6 === 0x02 ? -1 : -2;\r\n}\r\n\r\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\r\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\r\n// needed to complete the UTF-8 character (if applicable) are returned.\r\nfunction utf8CheckIncomplete(self, buf, i) {\r\n  var j = buf.length - 1;\r\n  if (j < i) return 0;\r\n  var nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 1;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 2;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) {\r\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\r\n    }\r\n    return nb;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\r\n// needed or are available. If we see a non-continuation byte where we expect\r\n// one, we \"replace\" the validated continuation bytes we've seen so far with\r\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\r\n// behavior. The continuation byte check is included three times in the case\r\n// where all of the continuation bytes for a character exist in the same buffer.\r\n// It is also done this way as a slight performance increase instead of using a\r\n// loop.\r\nfunction utf8CheckExtraBytes(self, buf, p) {\r\n  if ((buf[0] & 0xC0) !== 0x80) {\r\n    self.lastNeed = 0;\r\n    return '\\ufffd';\r\n  }\r\n  if (self.lastNeed > 1 && buf.length > 1) {\r\n    if ((buf[1] & 0xC0) !== 0x80) {\r\n      self.lastNeed = 1;\r\n      return '\\ufffd';\r\n    }\r\n    if (self.lastNeed > 2 && buf.length > 2) {\r\n      if ((buf[2] & 0xC0) !== 0x80) {\r\n        self.lastNeed = 2;\r\n        return '\\ufffd';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\r\nfunction utf8FillLast(buf) {\r\n  var p = this.lastTotal - this.lastNeed;\r\n  var r = utf8CheckExtraBytes(this, buf, p);\r\n  if (r !== undefined) return r;\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, p, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n}\r\n\r\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\r\n// partial character, the character's bytes are buffered until the required\r\n// number of bytes are available.\r\nfunction utf8Text(buf, i) {\r\n  var total = utf8CheckIncomplete(this, buf, i);\r\n  if (!this.lastNeed) return buf.toString('utf8', i);\r\n  this.lastTotal = total;\r\n  var end = buf.length - (total - this.lastNeed);\r\n  buf.copy(this.lastChar, 0, end);\r\n  return buf.toString('utf8', i, end);\r\n}\r\n\r\n// For UTF-8, a replacement character is added when ending on a partial\r\n// character.\r\nfunction utf8End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + '\\ufffd';\r\n  return r;\r\n}\r\n\r\n// UTF-16LE typically needs two bytes per character, but even if we have an even\r\n// number of bytes available, we need to check if we end on a leading/high\r\n// surrogate. In that case, we need to wait for the next two bytes in order to\r\n// decode the last character properly.\r\nfunction utf16Text(buf, i) {\r\n  if ((buf.length - i) % 2 === 0) {\r\n    var r = buf.toString('utf16le', i);\r\n    if (r) {\r\n      var c = r.charCodeAt(r.length - 1);\r\n      if (c >= 0xD800 && c <= 0xDBFF) {\r\n        this.lastNeed = 2;\r\n        this.lastTotal = 4;\r\n        this.lastChar[0] = buf[buf.length - 2];\r\n        this.lastChar[1] = buf[buf.length - 1];\r\n        return r.slice(0, -1);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  this.lastNeed = 1;\r\n  this.lastTotal = 2;\r\n  this.lastChar[0] = buf[buf.length - 1];\r\n  return buf.toString('utf16le', i, buf.length - 1);\r\n}\r\n\r\n// For UTF-16LE we do not explicitly append special replacement characters if we\r\n// end on a partial character, we simply let v8 handle that.\r\nfunction utf16End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) {\r\n    var end = this.lastTotal - this.lastNeed;\r\n    return r + this.lastChar.toString('utf16le', 0, end);\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction base64Text(buf, i) {\r\n  var n = (buf.length - i) % 3;\r\n  if (n === 0) return buf.toString('base64', i);\r\n  this.lastNeed = 3 - n;\r\n  this.lastTotal = 3;\r\n  if (n === 1) {\r\n    this.lastChar[0] = buf[buf.length - 1];\r\n  } else {\r\n    this.lastChar[0] = buf[buf.length - 2];\r\n    this.lastChar[1] = buf[buf.length - 1];\r\n  }\r\n  return buf.toString('base64', i, buf.length - n);\r\n}\r\n\r\nfunction base64End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\r\n  return r;\r\n}\r\n\r\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\r\nfunction simpleWrite(buf) {\r\n  return buf.toString(this.encoding);\r\n}\r\n\r\nfunction simpleEnd(buf) {\r\n  return buf && buf.length ? this.write(buf) : '';\r\n}","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var prefixMatch;\r\n\r\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\r\n\r\n  exports.normalize = function(str) {\r\n    return str.toLowerCase();\r\n  };\r\n\r\n  exports.firstCharLowerCase = function(str) {\r\n    return str.charAt(0).toLowerCase() + str.slice(1);\r\n  };\r\n\r\n  exports.stripPrefix = function(str) {\r\n    return str.replace(prefixMatch, '');\r\n  };\r\n\r\n  exports.parseNumbers = function(str) {\r\n    if (!isNaN(str)) {\r\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\r\n    }\r\n    return str;\r\n  };\r\n\r\n  exports.parseBooleans = function(str) {\r\n    if (/^(?:true|false)$/i.test(str)) {\r\n      str = str.toLowerCase() === 'true';\r\n    }\r\n    return str;\r\n  };\r\n\r\n}).call(this);\r\n","/* eslint-disable node/no-deprecated-api */\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\n// alternative to using Object.keys for old browsers\r\nfunction copyProps (src, dst) {\r\n  for (var key in src) {\r\n    dst[key] = src[key]\r\n  }\r\n}\r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n} else {\r\n  // Copy properties from require('buffer')\r\n  copyProps(buffer, exports)\r\n  exports.Buffer = SafeBuffer\r\n}\r\n\r\nfunction SafeBuffer (arg, encodingOrOffset, length) {\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\n// Copy static methods from Buffer\r\ncopyProps(Buffer, SafeBuffer)\r\n\r\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\r\n  if (typeof arg === 'number') {\r\n    throw new TypeError('Argument must not be a number')\r\n  }\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.alloc = function (size, fill, encoding) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  var buf = Buffer(size)\r\n  if (fill !== undefined) {\r\n    if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n  } else {\r\n    buf.fill(0)\r\n  }\r\n  return buf\r\n}\r\n\r\nSafeBuffer.allocUnsafe = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return Buffer(size)\r\n}\r\n\r\nSafeBuffer.allocUnsafeSlow = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return buffer.SlowBuffer(size)\r\n}\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\r\n\r\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\r\n\r\n  XMLDOMStringList = require('./XMLDOMStringList');\r\n\r\n  module.exports = XMLDOMConfiguration = (function() {\r\n    function XMLDOMConfiguration() {\r\n      var clonedSelf;\r\n      this.defaultParams = {\r\n        \"canonical-form\": false,\r\n        \"cdata-sections\": false,\r\n        \"comments\": false,\r\n        \"datatype-normalization\": false,\r\n        \"element-content-whitespace\": true,\r\n        \"entities\": true,\r\n        \"error-handler\": new XMLDOMErrorHandler(),\r\n        \"infoset\": true,\r\n        \"validate-if-schema\": false,\r\n        \"namespaces\": true,\r\n        \"namespace-declarations\": true,\r\n        \"normalize-characters\": false,\r\n        \"schema-location\": '',\r\n        \"schema-type\": '',\r\n        \"split-cdata-sections\": true,\r\n        \"validate\": false,\r\n        \"well-formed\": true\r\n      };\r\n      this.params = clonedSelf = Object.create(this.defaultParams);\r\n    }\r\n\r\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\r\n      get: function() {\r\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\r\n      }\r\n    });\r\n\r\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\r\n      if (this.params.hasOwnProperty(name)) {\r\n        return this.params[name];\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\r\n      return true;\r\n    };\r\n\r\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\r\n      if (value != null) {\r\n        return this.params[name] = value;\r\n      } else {\r\n        return delete this.params[name];\r\n      }\r\n    };\r\n\r\n    return XMLDOMConfiguration;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLCharacterData, XMLComment,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLCharacterData = require('./XMLCharacterData');\r\n\r\n  module.exports = XMLComment = (function(superClass) {\r\n    extend(XMLComment, superClass);\r\n\r\n    function XMLComment(parent, text) {\r\n      XMLComment.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\r\n      }\r\n      this.name = \"#comment\";\r\n      this.type = NodeType.Comment;\r\n      this.value = this.stringify.comment(text);\r\n    }\r\n\r\n    XMLComment.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLComment.prototype.toString = function(options) {\r\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLComment;\r\n\r\n  })(XMLCharacterData);\r\n\r\n}).call(this);\r\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nmodule.exports = Emitter;\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks[event] = this._callbacks[event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  var self = this;\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  function on() {\r\n    self.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks[event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks[event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks[event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks[event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\r\n\r\n  XMLElement = null;\r\n\r\n  XMLCData = null;\r\n\r\n  XMLComment = null;\r\n\r\n  XMLDeclaration = null;\r\n\r\n  XMLDocType = null;\r\n\r\n  XMLRaw = null;\r\n\r\n  XMLText = null;\r\n\r\n  XMLProcessingInstruction = null;\r\n\r\n  XMLDummy = null;\r\n\r\n  NodeType = null;\r\n\r\n  XMLNodeList = null;\r\n\r\n  XMLNamedNodeMap = null;\r\n\r\n  DocumentPosition = null;\r\n\r\n  module.exports = XMLNode = (function() {\r\n    function XMLNode(parent1) {\r\n      this.parent = parent1;\r\n      if (this.parent) {\r\n        this.options = this.parent.options;\r\n        this.stringify = this.parent.stringify;\r\n      }\r\n      this.value = null;\r\n      this.children = [];\r\n      this.baseURI = null;\r\n      if (!XMLElement) {\r\n        XMLElement = require('./XMLElement');\r\n        XMLCData = require('./XMLCData');\r\n        XMLComment = require('./XMLComment');\r\n        XMLDeclaration = require('./XMLDeclaration');\r\n        XMLDocType = require('./XMLDocType');\r\n        XMLRaw = require('./XMLRaw');\r\n        XMLText = require('./XMLText');\r\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n        XMLDummy = require('./XMLDummy');\r\n        NodeType = require('./NodeType');\r\n        XMLNodeList = require('./XMLNodeList');\r\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\r\n        DocumentPosition = require('./DocumentPosition');\r\n      }\r\n    }\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\r\n      get: function() {\r\n        return this.name;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\r\n      get: function() {\r\n        return this.type;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\r\n      get: function() {\r\n        return this.value;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\r\n      get: function() {\r\n        return this.parent;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\r\n      get: function() {\r\n        if (!this.childNodeList || !this.childNodeList.nodes) {\r\n          this.childNodeList = new XMLNodeList(this.children);\r\n        }\r\n        return this.childNodeList;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\r\n      get: function() {\r\n        return this.children[0] || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\r\n      get: function() {\r\n        return this.children[this.children.length - 1] || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\r\n      get: function() {\r\n        var i;\r\n        i = this.parent.children.indexOf(this);\r\n        return this.parent.children[i - 1] || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\r\n      get: function() {\r\n        var i;\r\n        i = this.parent.children.indexOf(this);\r\n        return this.parent.children[i + 1] || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\r\n      get: function() {\r\n        return this.document() || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\r\n      get: function() {\r\n        var child, j, len, ref2, str;\r\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\r\n          str = '';\r\n          ref2 = this.children;\r\n          for (j = 0, len = ref2.length; j < len; j++) {\r\n            child = ref2[j];\r\n            if (child.textContent) {\r\n              str += child.textContent;\r\n            }\r\n          }\r\n          return str;\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n      set: function(value) {\r\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n      }\r\n    });\r\n\r\n    XMLNode.prototype.setParent = function(parent) {\r\n      var child, j, len, ref2, results;\r\n      this.parent = parent;\r\n      if (parent) {\r\n        this.options = parent.options;\r\n        this.stringify = parent.stringify;\r\n      }\r\n      ref2 = this.children;\r\n      results = [];\r\n      for (j = 0, len = ref2.length; j < len; j++) {\r\n        child = ref2[j];\r\n        results.push(child.setParent(this));\r\n      }\r\n      return results;\r\n    };\r\n\r\n    XMLNode.prototype.element = function(name, attributes, text) {\r\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\r\n      lastChild = null;\r\n      if (attributes === null && (text == null)) {\r\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\r\n      }\r\n      if (attributes == null) {\r\n        attributes = {};\r\n      }\r\n      attributes = getValue(attributes);\r\n      if (!isObject(attributes)) {\r\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\r\n      }\r\n      if (name != null) {\r\n        name = getValue(name);\r\n      }\r\n      if (Array.isArray(name)) {\r\n        for (j = 0, len = name.length; j < len; j++) {\r\n          item = name[j];\r\n          lastChild = this.element(item);\r\n        }\r\n      } else if (isFunction(name)) {\r\n        lastChild = this.element(name.apply());\r\n      } else if (isObject(name)) {\r\n        for (key in name) {\r\n          if (!hasProp.call(name, key)) continue;\r\n          val = name[key];\r\n          if (isFunction(val)) {\r\n            val = val.apply();\r\n          }\r\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\r\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\r\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\r\n            lastChild = this.dummy();\r\n          } else if (isObject(val) && isEmpty(val)) {\r\n            lastChild = this.element(key);\r\n          } else if (!this.options.keepNullNodes && (val == null)) {\r\n            lastChild = this.dummy();\r\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\r\n            for (k = 0, len1 = val.length; k < len1; k++) {\r\n              item = val[k];\r\n              childNode = {};\r\n              childNode[key] = item;\r\n              lastChild = this.element(childNode);\r\n            }\r\n          } else if (isObject(val)) {\r\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\r\n              lastChild = this.element(val);\r\n            } else {\r\n              lastChild = this.element(key);\r\n              lastChild.element(val);\r\n            }\r\n          } else {\r\n            lastChild = this.element(key, val);\r\n          }\r\n        }\r\n      } else if (!this.options.keepNullNodes && text === null) {\r\n        lastChild = this.dummy();\r\n      } else {\r\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\r\n          lastChild = this.text(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\r\n          lastChild = this.cdata(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\r\n          lastChild = this.comment(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\r\n          lastChild = this.raw(text);\r\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\r\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\r\n        } else {\r\n          lastChild = this.node(name, attributes, text);\r\n        }\r\n      }\r\n      if (lastChild == null) {\r\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\r\n      }\r\n      return lastChild;\r\n    };\r\n\r\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\r\n      var child, i, newChild, refChild, removed;\r\n      if (name != null ? name.type : void 0) {\r\n        newChild = name;\r\n        refChild = attributes;\r\n        newChild.setParent(this);\r\n        if (refChild) {\r\n          i = children.indexOf(refChild);\r\n          removed = children.splice(i);\r\n          children.push(newChild);\r\n          Array.prototype.push.apply(children, removed);\r\n        } else {\r\n          children.push(newChild);\r\n        }\r\n        return newChild;\r\n      } else {\r\n        if (this.isRoot) {\r\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\r\n        }\r\n        i = this.parent.children.indexOf(this);\r\n        removed = this.parent.children.splice(i);\r\n        child = this.parent.element(name, attributes, text);\r\n        Array.prototype.push.apply(this.parent.children, removed);\r\n        return child;\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\r\n      var child, i, removed;\r\n      if (this.isRoot) {\r\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\r\n      }\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i + 1);\r\n      child = this.parent.element(name, attributes, text);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return child;\r\n    };\r\n\r\n    XMLNode.prototype.remove = function() {\r\n      var i, ref2;\r\n      if (this.isRoot) {\r\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\r\n      }\r\n      i = this.parent.children.indexOf(this);\r\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\r\n      return this.parent;\r\n    };\r\n\r\n    XMLNode.prototype.node = function(name, attributes, text) {\r\n      var child, ref2;\r\n      if (name != null) {\r\n        name = getValue(name);\r\n      }\r\n      attributes || (attributes = {});\r\n      attributes = getValue(attributes);\r\n      if (!isObject(attributes)) {\r\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\r\n      }\r\n      child = new XMLElement(this, name, attributes);\r\n      if (text != null) {\r\n        child.text(text);\r\n      }\r\n      this.children.push(child);\r\n      return child;\r\n    };\r\n\r\n    XMLNode.prototype.text = function(value) {\r\n      var child;\r\n      if (isObject(value)) {\r\n        this.element(value);\r\n      }\r\n      child = new XMLText(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.cdata = function(value) {\r\n      var child;\r\n      child = new XMLCData(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.comment = function(value) {\r\n      var child;\r\n      child = new XMLComment(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.commentBefore = function(value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i);\r\n      child = this.parent.comment(value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.commentAfter = function(value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i + 1);\r\n      child = this.parent.comment(value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.raw = function(value) {\r\n      var child;\r\n      child = new XMLRaw(this, value);\r\n      this.children.push(child);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.dummy = function() {\r\n      var child;\r\n      child = new XMLDummy(this);\r\n      return child;\r\n    };\r\n\r\n    XMLNode.prototype.instruction = function(target, value) {\r\n      var insTarget, insValue, instruction, j, len;\r\n      if (target != null) {\r\n        target = getValue(target);\r\n      }\r\n      if (value != null) {\r\n        value = getValue(value);\r\n      }\r\n      if (Array.isArray(target)) {\r\n        for (j = 0, len = target.length; j < len; j++) {\r\n          insTarget = target[j];\r\n          this.instruction(insTarget);\r\n        }\r\n      } else if (isObject(target)) {\r\n        for (insTarget in target) {\r\n          if (!hasProp.call(target, insTarget)) continue;\r\n          insValue = target[insTarget];\r\n          this.instruction(insTarget, insValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        instruction = new XMLProcessingInstruction(this, target, value);\r\n        this.children.push(instruction);\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.instructionBefore = function(target, value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i);\r\n      child = this.parent.instruction(target, value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.instructionAfter = function(target, value) {\r\n      var child, i, removed;\r\n      i = this.parent.children.indexOf(this);\r\n      removed = this.parent.children.splice(i + 1);\r\n      child = this.parent.instruction(target, value);\r\n      Array.prototype.push.apply(this.parent.children, removed);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\r\n      var doc, xmldec;\r\n      doc = this.document();\r\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\r\n      if (doc.children.length === 0) {\r\n        doc.children.unshift(xmldec);\r\n      } else if (doc.children[0].type === NodeType.Declaration) {\r\n        doc.children[0] = xmldec;\r\n      } else {\r\n        doc.children.unshift(xmldec);\r\n      }\r\n      return doc.root() || doc;\r\n    };\r\n\r\n    XMLNode.prototype.dtd = function(pubID, sysID) {\r\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\r\n      doc = this.document();\r\n      doctype = new XMLDocType(doc, pubID, sysID);\r\n      ref2 = doc.children;\r\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\r\n        child = ref2[i];\r\n        if (child.type === NodeType.DocType) {\r\n          doc.children[i] = doctype;\r\n          return doctype;\r\n        }\r\n      }\r\n      ref3 = doc.children;\r\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\r\n        child = ref3[i];\r\n        if (child.isRoot) {\r\n          doc.children.splice(i, 0, doctype);\r\n          return doctype;\r\n        }\r\n      }\r\n      doc.children.push(doctype);\r\n      return doctype;\r\n    };\r\n\r\n    XMLNode.prototype.up = function() {\r\n      if (this.isRoot) {\r\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\r\n      }\r\n      return this.parent;\r\n    };\r\n\r\n    XMLNode.prototype.root = function() {\r\n      var node;\r\n      node = this;\r\n      while (node) {\r\n        if (node.type === NodeType.Document) {\r\n          return node.rootObject;\r\n        } else if (node.isRoot) {\r\n          return node;\r\n        } else {\r\n          node = node.parent;\r\n        }\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.document = function() {\r\n      var node;\r\n      node = this;\r\n      while (node) {\r\n        if (node.type === NodeType.Document) {\r\n          return node;\r\n        } else {\r\n          node = node.parent;\r\n        }\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.end = function(options) {\r\n      return this.document().end(options);\r\n    };\r\n\r\n    XMLNode.prototype.prev = function() {\r\n      var i;\r\n      i = this.parent.children.indexOf(this);\r\n      if (i < 1) {\r\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\r\n      }\r\n      return this.parent.children[i - 1];\r\n    };\r\n\r\n    XMLNode.prototype.next = function() {\r\n      var i;\r\n      i = this.parent.children.indexOf(this);\r\n      if (i === -1 || i === this.parent.children.length - 1) {\r\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\r\n      }\r\n      return this.parent.children[i + 1];\r\n    };\r\n\r\n    XMLNode.prototype.importDocument = function(doc) {\r\n      var clonedRoot;\r\n      clonedRoot = doc.root().clone();\r\n      clonedRoot.parent = this;\r\n      clonedRoot.isRoot = false;\r\n      this.children.push(clonedRoot);\r\n      return this;\r\n    };\r\n\r\n    XMLNode.prototype.debugInfo = function(name) {\r\n      var ref2, ref3;\r\n      name = name || this.name;\r\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\r\n        return \"\";\r\n      } else if (name == null) {\r\n        return \"parent: <\" + this.parent.name + \">\";\r\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\r\n        return \"node: <\" + name + \">\";\r\n      } else {\r\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.ele = function(name, attributes, text) {\r\n      return this.element(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.nod = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.txt = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLNode.prototype.dat = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLNode.prototype.com = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLNode.prototype.ins = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLNode.prototype.doc = function() {\r\n      return this.document();\r\n    };\r\n\r\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\r\n      return this.declaration(version, encoding, standalone);\r\n    };\r\n\r\n    XMLNode.prototype.e = function(name, attributes, text) {\r\n      return this.element(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.n = function(name, attributes, text) {\r\n      return this.node(name, attributes, text);\r\n    };\r\n\r\n    XMLNode.prototype.t = function(value) {\r\n      return this.text(value);\r\n    };\r\n\r\n    XMLNode.prototype.d = function(value) {\r\n      return this.cdata(value);\r\n    };\r\n\r\n    XMLNode.prototype.c = function(value) {\r\n      return this.comment(value);\r\n    };\r\n\r\n    XMLNode.prototype.r = function(value) {\r\n      return this.raw(value);\r\n    };\r\n\r\n    XMLNode.prototype.i = function(target, value) {\r\n      return this.instruction(target, value);\r\n    };\r\n\r\n    XMLNode.prototype.u = function() {\r\n      return this.up();\r\n    };\r\n\r\n    XMLNode.prototype.importXMLBuilder = function(doc) {\r\n      return this.importDocument(doc);\r\n    };\r\n\r\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.removeChild = function(oldChild) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.appendChild = function(newChild) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.hasChildNodes = function() {\r\n      return this.children.length !== 0;\r\n    };\r\n\r\n    XMLNode.prototype.cloneNode = function(deep) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.normalize = function() {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.isSupported = function(feature, version) {\r\n      return true;\r\n    };\r\n\r\n    XMLNode.prototype.hasAttributes = function() {\r\n      return this.attribs.length !== 0;\r\n    };\r\n\r\n    XMLNode.prototype.compareDocumentPosition = function(other) {\r\n      var ref, res;\r\n      ref = this;\r\n      if (ref === other) {\r\n        return 0;\r\n      } else if (this.document() !== other.document()) {\r\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\r\n        if (Math.random() < 0.5) {\r\n          res |= DocumentPosition.Preceding;\r\n        } else {\r\n          res |= DocumentPosition.Following;\r\n        }\r\n        return res;\r\n      } else if (ref.isAncestor(other)) {\r\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\r\n      } else if (ref.isDescendant(other)) {\r\n        return DocumentPosition.Contains | DocumentPosition.Following;\r\n      } else if (ref.isPreceding(other)) {\r\n        return DocumentPosition.Preceding;\r\n      } else {\r\n        return DocumentPosition.Following;\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.isSameNode = function(other) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.isEqualNode = function(node) {\r\n      var i, j, ref2;\r\n      if (node.nodeType !== this.nodeType) {\r\n        return false;\r\n      }\r\n      if (node.children.length !== this.children.length) {\r\n        return false;\r\n      }\r\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\r\n        if (!this.children[i].isEqualNode(node.children[i])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n\r\n    XMLNode.prototype.getFeature = function(feature, version) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.setUserData = function(key, data, handler) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.getUserData = function(key) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLNode.prototype.contains = function(other) {\r\n      if (!other) {\r\n        return false;\r\n      }\r\n      return other === this || this.isDescendant(other);\r\n    };\r\n\r\n    XMLNode.prototype.isDescendant = function(node) {\r\n      var child, isDescendantChild, j, len, ref2;\r\n      ref2 = this.children;\r\n      for (j = 0, len = ref2.length; j < len; j++) {\r\n        child = ref2[j];\r\n        if (node === child) {\r\n          return true;\r\n        }\r\n        isDescendantChild = child.isDescendant(node);\r\n        if (isDescendantChild) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    XMLNode.prototype.isAncestor = function(node) {\r\n      return node.isDescendant(this);\r\n    };\r\n\r\n    XMLNode.prototype.isPreceding = function(node) {\r\n      var nodePos, thisPos;\r\n      nodePos = this.treePosition(node);\r\n      thisPos = this.treePosition(this);\r\n      if (nodePos === -1 || thisPos === -1) {\r\n        return false;\r\n      } else {\r\n        return nodePos < thisPos;\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.isFollowing = function(node) {\r\n      var nodePos, thisPos;\r\n      nodePos = this.treePosition(node);\r\n      thisPos = this.treePosition(this);\r\n      if (nodePos === -1 || thisPos === -1) {\r\n        return false;\r\n      } else {\r\n        return nodePos > thisPos;\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.treePosition = function(node) {\r\n      var found, pos;\r\n      pos = 0;\r\n      found = false;\r\n      this.foreachTreeNode(this.document(), function(childNode) {\r\n        pos++;\r\n        if (!found && childNode === node) {\r\n          return found = true;\r\n        }\r\n      });\r\n      if (found) {\r\n        return pos;\r\n      } else {\r\n        return -1;\r\n      }\r\n    };\r\n\r\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\r\n      var child, j, len, ref2, res;\r\n      node || (node = this.document());\r\n      ref2 = node.children;\r\n      for (j = 0, len = ref2.length; j < len; j++) {\r\n        child = ref2[j];\r\n        if (res = func(child)) {\r\n          return res;\r\n        } else {\r\n          res = this.foreachTreeNode(child, func);\r\n          if (res) {\r\n            return res;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    return XMLNode;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var XMLDOMErrorHandler;\r\n\r\n  module.exports = XMLDOMErrorHandler = (function() {\r\n    function XMLDOMErrorHandler() {}\r\n\r\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\r\n      throw new Error(error);\r\n    };\r\n\r\n    return XMLDOMErrorHandler;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLCharacterData, XMLText,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLCharacterData = require('./XMLCharacterData');\r\n\r\n  module.exports = XMLText = (function(superClass) {\r\n    extend(XMLText, superClass);\r\n\r\n    function XMLText(parent, text) {\r\n      XMLText.__super__.constructor.call(this, parent);\r\n      if (text == null) {\r\n        throw new Error(\"Missing element text. \" + this.debugInfo());\r\n      }\r\n      this.name = \"#text\";\r\n      this.type = NodeType.Text;\r\n      this.value = this.stringify.text(text);\r\n    }\r\n\r\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\r\n      get: function() {\r\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\r\n      get: function() {\r\n        var next, prev, str;\r\n        str = '';\r\n        prev = this.previousSibling;\r\n        while (prev) {\r\n          str = prev.data + str;\r\n          prev = prev.previousSibling;\r\n        }\r\n        str += this.data;\r\n        next = this.nextSibling;\r\n        while (next) {\r\n          str = str + next.data;\r\n          next = next.nextSibling;\r\n        }\r\n        return str;\r\n      }\r\n    });\r\n\r\n    XMLText.prototype.clone = function() {\r\n      return Object.create(this);\r\n    };\r\n\r\n    XMLText.prototype.toString = function(options) {\r\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    XMLText.prototype.splitText = function(offset) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLText.prototype.replaceWholeText = function(content) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    return XMLText;\r\n\r\n  })(XMLCharacterData);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  assign = require('./Utility').assign;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLDeclaration = require('./XMLDeclaration');\r\n\r\n  XMLDocType = require('./XMLDocType');\r\n\r\n  XMLCData = require('./XMLCData');\r\n\r\n  XMLComment = require('./XMLComment');\r\n\r\n  XMLElement = require('./XMLElement');\r\n\r\n  XMLRaw = require('./XMLRaw');\r\n\r\n  XMLText = require('./XMLText');\r\n\r\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\r\n\r\n  XMLDummy = require('./XMLDummy');\r\n\r\n  XMLDTDAttList = require('./XMLDTDAttList');\r\n\r\n  XMLDTDElement = require('./XMLDTDElement');\r\n\r\n  XMLDTDEntity = require('./XMLDTDEntity');\r\n\r\n  XMLDTDNotation = require('./XMLDTDNotation');\r\n\r\n  WriterState = require('./WriterState');\r\n\r\n  module.exports = XMLWriterBase = (function() {\r\n    function XMLWriterBase(options) {\r\n      var key, ref, value;\r\n      options || (options = {});\r\n      this.options = options;\r\n      ref = options.writer || {};\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this[\"_\" + key] = this[key];\r\n        this[key] = value;\r\n      }\r\n    }\r\n\r\n    XMLWriterBase.prototype.filterOptions = function(options) {\r\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\r\n      options || (options = {});\r\n      options = assign({}, this.options, options);\r\n      filteredOptions = {\r\n        writer: this\r\n      };\r\n      filteredOptions.pretty = options.pretty || false;\r\n      filteredOptions.allowEmpty = options.allowEmpty || false;\r\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\r\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\r\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\r\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\r\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\r\n      if (filteredOptions.spaceBeforeSlash === true) {\r\n        filteredOptions.spaceBeforeSlash = ' ';\r\n      }\r\n      filteredOptions.suppressPrettyCount = 0;\r\n      filteredOptions.user = {};\r\n      filteredOptions.state = WriterState.None;\r\n      return filteredOptions;\r\n    };\r\n\r\n    XMLWriterBase.prototype.indent = function(node, options, level) {\r\n      var indentLevel;\r\n      if (!options.pretty || options.suppressPrettyCount) {\r\n        return '';\r\n      } else if (options.pretty) {\r\n        indentLevel = (level || 0) + options.offset + 1;\r\n        if (indentLevel > 0) {\r\n          return new Array(indentLevel).join(options.indent);\r\n        }\r\n      }\r\n      return '';\r\n    };\r\n\r\n    XMLWriterBase.prototype.endline = function(node, options, level) {\r\n      if (!options.pretty || options.suppressPrettyCount) {\r\n        return '';\r\n      } else {\r\n        return options.newline;\r\n      }\r\n    };\r\n\r\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\r\n      var r;\r\n      this.openAttribute(att, options, level);\r\n      r = ' ' + att.name + '=\"' + att.value + '\"';\r\n      this.closeAttribute(att, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<![CDATA[';\r\n      options.state = WriterState.InsideTag;\r\n      r += node.value;\r\n      options.state = WriterState.CloseTag;\r\n      r += ']]>' + this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.comment = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<!-- ';\r\n      options.state = WriterState.InsideTag;\r\n      r += node.value;\r\n      options.state = WriterState.CloseTag;\r\n      r += ' -->' + this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<?xml';\r\n      options.state = WriterState.InsideTag;\r\n      r += ' version=\"' + node.version + '\"';\r\n      if (node.encoding != null) {\r\n        r += ' encoding=\"' + node.encoding + '\"';\r\n      }\r\n      if (node.standalone != null) {\r\n        r += ' standalone=\"' + node.standalone + '\"';\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '?>';\r\n      r += this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.docType = function(node, options, level) {\r\n      var child, i, len, r, ref;\r\n      level || (level = 0);\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level);\r\n      r += '<!DOCTYPE ' + node.root().name;\r\n      if (node.pubID && node.sysID) {\r\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n      } else if (node.sysID) {\r\n        r += ' SYSTEM \"' + node.sysID + '\"';\r\n      }\r\n      if (node.children.length > 0) {\r\n        r += ' [';\r\n        r += this.endline(node, options, level);\r\n        options.state = WriterState.InsideTag;\r\n        ref = node.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          r += this.writeChildNode(child, options, level + 1);\r\n        }\r\n        options.state = WriterState.CloseTag;\r\n        r += ']';\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '>';\r\n      r += this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.element = function(node, options, level) {\r\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\r\n      level || (level = 0);\r\n      prettySuppressed = false;\r\n      r = '';\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r += this.indent(node, options, level) + '<' + node.name;\r\n      ref = node.attribs;\r\n      for (name in ref) {\r\n        if (!hasProp.call(ref, name)) continue;\r\n        att = ref[name];\r\n        r += this.attribute(att, options, level);\r\n      }\r\n      childNodeCount = node.children.length;\r\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\r\n      if (childNodeCount === 0 || node.children.every(function(e) {\r\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\r\n      })) {\r\n        if (options.allowEmpty) {\r\n          r += '>';\r\n          options.state = WriterState.CloseTag;\r\n          r += '</' + node.name + '>' + this.endline(node, options, level);\r\n        } else {\r\n          options.state = WriterState.CloseTag;\r\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\r\n        }\r\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\r\n        r += '>';\r\n        options.state = WriterState.InsideTag;\r\n        options.suppressPrettyCount++;\r\n        prettySuppressed = true;\r\n        r += this.writeChildNode(firstChildNode, options, level + 1);\r\n        options.suppressPrettyCount--;\r\n        prettySuppressed = false;\r\n        options.state = WriterState.CloseTag;\r\n        r += '</' + node.name + '>' + this.endline(node, options, level);\r\n      } else {\r\n        if (options.dontPrettyTextNodes) {\r\n          ref1 = node.children;\r\n          for (i = 0, len = ref1.length; i < len; i++) {\r\n            child = ref1[i];\r\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\r\n              options.suppressPrettyCount++;\r\n              prettySuppressed = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        r += '>' + this.endline(node, options, level);\r\n        options.state = WriterState.InsideTag;\r\n        ref2 = node.children;\r\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\r\n          child = ref2[j];\r\n          r += this.writeChildNode(child, options, level + 1);\r\n        }\r\n        options.state = WriterState.CloseTag;\r\n        r += this.indent(node, options, level) + '</' + node.name + '>';\r\n        if (prettySuppressed) {\r\n          options.suppressPrettyCount--;\r\n        }\r\n        r += this.endline(node, options, level);\r\n        options.state = WriterState.None;\r\n      }\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\r\n      switch (node.type) {\r\n        case NodeType.CData:\r\n          return this.cdata(node, options, level);\r\n        case NodeType.Comment:\r\n          return this.comment(node, options, level);\r\n        case NodeType.Element:\r\n          return this.element(node, options, level);\r\n        case NodeType.Raw:\r\n          return this.raw(node, options, level);\r\n        case NodeType.Text:\r\n          return this.text(node, options, level);\r\n        case NodeType.ProcessingInstruction:\r\n          return this.processingInstruction(node, options, level);\r\n        case NodeType.Dummy:\r\n          return '';\r\n        case NodeType.Declaration:\r\n          return this.declaration(node, options, level);\r\n        case NodeType.DocType:\r\n          return this.docType(node, options, level);\r\n        case NodeType.AttributeDeclaration:\r\n          return this.dtdAttList(node, options, level);\r\n        case NodeType.ElementDeclaration:\r\n          return this.dtdElement(node, options, level);\r\n        case NodeType.EntityDeclaration:\r\n          return this.dtdEntity(node, options, level);\r\n        case NodeType.NotationDeclaration:\r\n          return this.dtdNotation(node, options, level);\r\n        default:\r\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\r\n      }\r\n    };\r\n\r\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<?';\r\n      options.state = WriterState.InsideTag;\r\n      r += node.target;\r\n      if (node.value) {\r\n        r += ' ' + node.value;\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '?>';\r\n      r += this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.raw = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level);\r\n      options.state = WriterState.InsideTag;\r\n      r += node.value;\r\n      options.state = WriterState.CloseTag;\r\n      r += this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.text = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level);\r\n      options.state = WriterState.InsideTag;\r\n      r += node.value;\r\n      options.state = WriterState.CloseTag;\r\n      r += this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<!ATTLIST';\r\n      options.state = WriterState.InsideTag;\r\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\r\n      if (node.defaultValueType !== '#DEFAULT') {\r\n        r += ' ' + node.defaultValueType;\r\n      }\r\n      if (node.defaultValue) {\r\n        r += ' \"' + node.defaultValue + '\"';\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<!ELEMENT';\r\n      options.state = WriterState.InsideTag;\r\n      r += ' ' + node.name + ' ' + node.value;\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<!ENTITY';\r\n      options.state = WriterState.InsideTag;\r\n      if (node.pe) {\r\n        r += ' %';\r\n      }\r\n      r += ' ' + node.name;\r\n      if (node.value) {\r\n        r += ' \"' + node.value + '\"';\r\n      } else {\r\n        if (node.pubID && node.sysID) {\r\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n        } else if (node.sysID) {\r\n          r += ' SYSTEM \"' + node.sysID + '\"';\r\n        }\r\n        if (node.nData) {\r\n          r += ' NDATA ' + node.nData;\r\n        }\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\r\n      var r;\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      r = this.indent(node, options, level) + '<!NOTATION';\r\n      options.state = WriterState.InsideTag;\r\n      r += ' ' + node.name;\r\n      if (node.pubID && node.sysID) {\r\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\r\n      } else if (node.pubID) {\r\n        r += ' PUBLIC \"' + node.pubID + '\"';\r\n      } else if (node.sysID) {\r\n        r += ' SYSTEM \"' + node.sysID + '\"';\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\r\n      options.state = WriterState.None;\r\n      this.closeNode(node, options, level);\r\n      return r;\r\n    };\r\n\r\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\r\n\r\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\r\n\r\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\r\n\r\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\r\n\r\n    return XMLWriterBase;\r\n\r\n  })();\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  exports.defaults = {\r\n    \"0.1\": {\r\n      explicitCharkey: false,\r\n      trim: true,\r\n      normalize: true,\r\n      normalizeTags: false,\r\n      attrkey: \"@\",\r\n      charkey: \"#\",\r\n      explicitArray: false,\r\n      ignoreAttrs: false,\r\n      mergeAttrs: false,\r\n      explicitRoot: false,\r\n      validator: null,\r\n      xmlns: false,\r\n      explicitChildren: false,\r\n      childkey: '@@',\r\n      charsAsChildren: false,\r\n      includeWhiteChars: false,\r\n      async: false,\r\n      strict: true,\r\n      attrNameProcessors: null,\r\n      attrValueProcessors: null,\r\n      tagNameProcessors: null,\r\n      valueProcessors: null,\r\n      emptyTag: ''\r\n    },\r\n    \"0.2\": {\r\n      explicitCharkey: false,\r\n      trim: false,\r\n      normalize: false,\r\n      normalizeTags: false,\r\n      attrkey: \"$\",\r\n      charkey: \"_\",\r\n      explicitArray: true,\r\n      ignoreAttrs: false,\r\n      mergeAttrs: false,\r\n      explicitRoot: true,\r\n      validator: null,\r\n      xmlns: false,\r\n      explicitChildren: false,\r\n      preserveChildrenOrder: false,\r\n      childkey: '$$',\r\n      charsAsChildren: false,\r\n      includeWhiteChars: false,\r\n      async: false,\r\n      strict: true,\r\n      attrNameProcessors: null,\r\n      attrValueProcessors: null,\r\n      tagNameProcessors: null,\r\n      valueProcessors: null,\r\n      rootName: 'root',\r\n      xmldec: {\r\n        'version': '1.0',\r\n        'encoding': 'UTF-8',\r\n        'standalone': true\r\n      },\r\n      doctype: null,\r\n      renderOpts: {\r\n        'pretty': true,\r\n        'indent': '  ',\r\n        'newline': '\\n'\r\n      },\r\n      headless: false,\r\n      chunkSize: 10000,\r\n      emptyTag: '',\r\n      cdata: false\r\n    }\r\n  };\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  \"use strict\";\r\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\r\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  sax = require('sax');\r\n\r\n  events = require('events');\r\n\r\n  bom = require('./bom');\r\n\r\n  processors = require('./processors');\r\n\r\n  setImmediate = require('timers').setImmediate;\r\n\r\n  defaults = require('./defaults').defaults;\r\n\r\n  isEmpty = function(thing) {\r\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\r\n  };\r\n\r\n  processItem = function(processors, item, key) {\r\n    var i, len, process;\r\n    for (i = 0, len = processors.length; i < len; i++) {\r\n      process = processors[i];\r\n      item = process(item, key);\r\n    }\r\n    return item;\r\n  };\r\n\r\n  exports.Parser = (function(superClass) {\r\n    extend(Parser, superClass);\r\n\r\n    function Parser(opts) {\r\n      this.parseStringPromise = bind(this.parseStringPromise, this);\r\n      this.parseString = bind(this.parseString, this);\r\n      this.reset = bind(this.reset, this);\r\n      this.assignOrPush = bind(this.assignOrPush, this);\r\n      this.processAsync = bind(this.processAsync, this);\r\n      var key, ref, value;\r\n      if (!(this instanceof exports.Parser)) {\r\n        return new exports.Parser(opts);\r\n      }\r\n      this.options = {};\r\n      ref = defaults[\"0.2\"];\r\n      for (key in ref) {\r\n        if (!hasProp.call(ref, key)) continue;\r\n        value = ref[key];\r\n        this.options[key] = value;\r\n      }\r\n      for (key in opts) {\r\n        if (!hasProp.call(opts, key)) continue;\r\n        value = opts[key];\r\n        this.options[key] = value;\r\n      }\r\n      if (this.options.xmlns) {\r\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\r\n      }\r\n      if (this.options.normalizeTags) {\r\n        if (!this.options.tagNameProcessors) {\r\n          this.options.tagNameProcessors = [];\r\n        }\r\n        this.options.tagNameProcessors.unshift(processors.normalize);\r\n      }\r\n      this.reset();\r\n    }\r\n\r\n    Parser.prototype.processAsync = function() {\r\n      var chunk, err;\r\n      try {\r\n        if (this.remaining.length <= this.options.chunkSize) {\r\n          chunk = this.remaining;\r\n          this.remaining = '';\r\n          this.saxParser = this.saxParser.write(chunk);\r\n          return this.saxParser.close();\r\n        } else {\r\n          chunk = this.remaining.substr(0, this.options.chunkSize);\r\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\r\n          this.saxParser = this.saxParser.write(chunk);\r\n          return setImmediate(this.processAsync);\r\n        }\r\n      } catch (error1) {\r\n        err = error1;\r\n        if (!this.saxParser.errThrown) {\r\n          this.saxParser.errThrown = true;\r\n          return this.emit(err);\r\n        }\r\n      }\r\n    };\r\n\r\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\r\n      if (!(key in obj)) {\r\n        if (!this.options.explicitArray) {\r\n          return obj[key] = newValue;\r\n        } else {\r\n          return obj[key] = [newValue];\r\n        }\r\n      } else {\r\n        if (!(obj[key] instanceof Array)) {\r\n          obj[key] = [obj[key]];\r\n        }\r\n        return obj[key].push(newValue);\r\n      }\r\n    };\r\n\r\n    Parser.prototype.reset = function() {\r\n      var attrkey, charkey, ontext, stack;\r\n      this.removeAllListeners();\r\n      this.saxParser = sax.parser(this.options.strict, {\r\n        trim: false,\r\n        normalize: false,\r\n        xmlns: this.options.xmlns\r\n      });\r\n      this.saxParser.errThrown = false;\r\n      this.saxParser.onerror = (function(_this) {\r\n        return function(error) {\r\n          _this.saxParser.resume();\r\n          if (!_this.saxParser.errThrown) {\r\n            _this.saxParser.errThrown = true;\r\n            return _this.emit(\"error\", error);\r\n          }\r\n        };\r\n      })(this);\r\n      this.saxParser.onend = (function(_this) {\r\n        return function() {\r\n          if (!_this.saxParser.ended) {\r\n            _this.saxParser.ended = true;\r\n            return _this.emit(\"end\", _this.resultObject);\r\n          }\r\n        };\r\n      })(this);\r\n      this.saxParser.ended = false;\r\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\r\n      this.resultObject = null;\r\n      stack = [];\r\n      attrkey = this.options.attrkey;\r\n      charkey = this.options.charkey;\r\n      this.saxParser.onopentag = (function(_this) {\r\n        return function(node) {\r\n          var key, newValue, obj, processedKey, ref;\r\n          obj = {};\r\n          obj[charkey] = \"\";\r\n          if (!_this.options.ignoreAttrs) {\r\n            ref = node.attributes;\r\n            for (key in ref) {\r\n              if (!hasProp.call(ref, key)) continue;\r\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\r\n                obj[attrkey] = {};\r\n              }\r\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\r\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\r\n              if (_this.options.mergeAttrs) {\r\n                _this.assignOrPush(obj, processedKey, newValue);\r\n              } else {\r\n                obj[attrkey][processedKey] = newValue;\r\n              }\r\n            }\r\n          }\r\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\r\n          if (_this.options.xmlns) {\r\n            obj[_this.options.xmlnskey] = {\r\n              uri: node.uri,\r\n              local: node.local\r\n            };\r\n          }\r\n          return stack.push(obj);\r\n        };\r\n      })(this);\r\n      this.saxParser.onclosetag = (function(_this) {\r\n        return function() {\r\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\r\n          obj = stack.pop();\r\n          nodeName = obj[\"#name\"];\r\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\r\n            delete obj[\"#name\"];\r\n          }\r\n          if (obj.cdata === true) {\r\n            cdata = obj.cdata;\r\n            delete obj.cdata;\r\n          }\r\n          s = stack[stack.length - 1];\r\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\r\n            emptyStr = obj[charkey];\r\n            delete obj[charkey];\r\n          } else {\r\n            if (_this.options.trim) {\r\n              obj[charkey] = obj[charkey].trim();\r\n            }\r\n            if (_this.options.normalize) {\r\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\r\n            }\r\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\r\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\r\n              obj = obj[charkey];\r\n            }\r\n          }\r\n          if (isEmpty(obj)) {\r\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\r\n          }\r\n          if (_this.options.validator != null) {\r\n            xpath = \"/\" + ((function() {\r\n              var i, len, results;\r\n              results = [];\r\n              for (i = 0, len = stack.length; i < len; i++) {\r\n                node = stack[i];\r\n                results.push(node[\"#name\"]);\r\n              }\r\n              return results;\r\n            })()).concat(nodeName).join(\"/\");\r\n            (function() {\r\n              var err;\r\n              try {\r\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\r\n              } catch (error1) {\r\n                err = error1;\r\n                return _this.emit(\"error\", err);\r\n              }\r\n            })();\r\n          }\r\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\r\n            if (!_this.options.preserveChildrenOrder) {\r\n              node = {};\r\n              if (_this.options.attrkey in obj) {\r\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\r\n                delete obj[_this.options.attrkey];\r\n              }\r\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\r\n                node[_this.options.charkey] = obj[_this.options.charkey];\r\n                delete obj[_this.options.charkey];\r\n              }\r\n              if (Object.getOwnPropertyNames(obj).length > 0) {\r\n                node[_this.options.childkey] = obj;\r\n              }\r\n              obj = node;\r\n            } else if (s) {\r\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\r\n              objClone = {};\r\n              for (key in obj) {\r\n                if (!hasProp.call(obj, key)) continue;\r\n                objClone[key] = obj[key];\r\n              }\r\n              s[_this.options.childkey].push(objClone);\r\n              delete obj[\"#name\"];\r\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\r\n                obj = obj[charkey];\r\n              }\r\n            }\r\n          }\r\n          if (stack.length > 0) {\r\n            return _this.assignOrPush(s, nodeName, obj);\r\n          } else {\r\n            if (_this.options.explicitRoot) {\r\n              old = obj;\r\n              obj = {};\r\n              obj[nodeName] = old;\r\n            }\r\n            _this.resultObject = obj;\r\n            _this.saxParser.ended = true;\r\n            return _this.emit(\"end\", _this.resultObject);\r\n          }\r\n        };\r\n      })(this);\r\n      ontext = (function(_this) {\r\n        return function(text) {\r\n          var charChild, s;\r\n          s = stack[stack.length - 1];\r\n          if (s) {\r\n            s[charkey] += text;\r\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\r\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\r\n              charChild = {\r\n                '#name': '__text__'\r\n              };\r\n              charChild[charkey] = text;\r\n              if (_this.options.normalize) {\r\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\r\n              }\r\n              s[_this.options.childkey].push(charChild);\r\n            }\r\n            return s;\r\n          }\r\n        };\r\n      })(this);\r\n      this.saxParser.ontext = ontext;\r\n      return this.saxParser.oncdata = (function(_this) {\r\n        return function(text) {\r\n          var s;\r\n          s = ontext(text);\r\n          if (s) {\r\n            return s.cdata = true;\r\n          }\r\n        };\r\n      })(this);\r\n    };\r\n\r\n    Parser.prototype.parseString = function(str, cb) {\r\n      var err;\r\n      if ((cb != null) && typeof cb === \"function\") {\r\n        this.on(\"end\", function(result) {\r\n          this.reset();\r\n          return cb(null, result);\r\n        });\r\n        this.on(\"error\", function(err) {\r\n          this.reset();\r\n          return cb(err);\r\n        });\r\n      }\r\n      try {\r\n        str = str.toString();\r\n        if (str.trim() === '') {\r\n          this.emit(\"end\", null);\r\n          return true;\r\n        }\r\n        str = bom.stripBOM(str);\r\n        if (this.options.async) {\r\n          this.remaining = str;\r\n          setImmediate(this.processAsync);\r\n          return this.saxParser;\r\n        }\r\n        return this.saxParser.write(str).close();\r\n      } catch (error1) {\r\n        err = error1;\r\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\r\n          this.emit('error', err);\r\n          return this.saxParser.errThrown = true;\r\n        } else if (this.saxParser.ended) {\r\n          throw err;\r\n        }\r\n      }\r\n    };\r\n\r\n    Parser.prototype.parseStringPromise = function(str) {\r\n      return new Promise((function(_this) {\r\n        return function(resolve, reject) {\r\n          return _this.parseString(str, function(err, value) {\r\n            if (err) {\r\n              return reject(err);\r\n            } else {\r\n              return resolve(value);\r\n            }\r\n          });\r\n        };\r\n      })(this));\r\n    };\r\n\r\n    return Parser;\r\n\r\n  })(events);\r\n\r\n  exports.parseString = function(str, a, b) {\r\n    var cb, options, parser;\r\n    if (b != null) {\r\n      if (typeof b === 'function') {\r\n        cb = b;\r\n      }\r\n      if (typeof a === 'object') {\r\n        options = a;\r\n      }\r\n    } else {\r\n      if (typeof a === 'function') {\r\n        cb = a;\r\n      }\r\n      options = {};\r\n    }\r\n    parser = new exports.Parser(options);\r\n    return parser.parseString(str, cb);\r\n  };\r\n\r\n  exports.parseStringPromise = function(str, a) {\r\n    var options, parser;\r\n    if (typeof a === 'object') {\r\n      options = a;\r\n    }\r\n    parser = new exports.Parser(options);\r\n    return parser.parseStringPromise(str);\r\n  };\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  isPlainObject = require('./Utility').isPlainObject;\r\n\r\n  XMLDOMImplementation = require('./XMLDOMImplementation');\r\n\r\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLStringifier = require('./XMLStringifier');\r\n\r\n  XMLStringWriter = require('./XMLStringWriter');\r\n\r\n  module.exports = XMLDocument = (function(superClass) {\r\n    extend(XMLDocument, superClass);\r\n\r\n    function XMLDocument(options) {\r\n      XMLDocument.__super__.constructor.call(this, null);\r\n      this.name = \"#document\";\r\n      this.type = NodeType.Document;\r\n      this.documentURI = null;\r\n      this.domConfig = new XMLDOMConfiguration();\r\n      options || (options = {});\r\n      if (!options.writer) {\r\n        options.writer = new XMLStringWriter();\r\n      }\r\n      this.options = options;\r\n      this.stringify = new XMLStringifier(options);\r\n    }\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\r\n      value: new XMLDOMImplementation()\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\r\n      get: function() {\r\n        var child, i, len, ref;\r\n        ref = this.children;\r\n        for (i = 0, len = ref.length; i < len; i++) {\r\n          child = ref[i];\r\n          if (child.type === NodeType.DocType) {\r\n            return child;\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\r\n      get: function() {\r\n        return this.rootObject || null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\r\n      get: function() {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\r\n      get: function() {\r\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\r\n          return this.children[0].encoding;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\r\n      get: function() {\r\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\r\n          return this.children[0].standalone === 'yes';\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\r\n      get: function() {\r\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\r\n          return this.children[0].version;\r\n        } else {\r\n          return \"1.0\";\r\n        }\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\r\n      get: function() {\r\n        return this.documentURI;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\r\n      get: function() {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    XMLDocument.prototype.end = function(writer) {\r\n      var writerOptions;\r\n      writerOptions = {};\r\n      if (!writer) {\r\n        writer = this.options.writer;\r\n      } else if (isPlainObject(writer)) {\r\n        writerOptions = writer;\r\n        writer = this.options.writer;\r\n      }\r\n      return writer.document(this, writer.filterOptions(writerOptions));\r\n    };\r\n\r\n    XMLDocument.prototype.toString = function(options) {\r\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    XMLDocument.prototype.createElement = function(tagName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createDocumentFragment = function() {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createTextNode = function(data) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createComment = function(data) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createCDATASection = function(data) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createAttribute = function(name) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createEntityReference = function(name) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.getElementById = function(elementId) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.adoptNode = function(source) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.normalizeDocument = function() {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createEvent = function(eventInterface) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createRange = function() {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    return XMLDocument;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\n'use strict'\r\n\r\nvar base64 = require('base64-js')\r\nvar ieee754 = require('ieee754')\r\nvar customInspectSymbol =\r\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\r\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\r\n    : null\r\n\r\nexports.Buffer = Buffer\r\nexports.SlowBuffer = SlowBuffer\r\nexports.INSPECT_MAX_BYTES = 50\r\n\r\nvar K_MAX_LENGTH = 0x7fffffff\r\nexports.kMaxLength = K_MAX_LENGTH\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\r\n *               implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * We report that the browser does not support typed arrays if the are not subclassable\r\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\r\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\r\n * for __proto__ and has a buggy typed array implementation.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\r\n\r\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\r\n    typeof console.error === 'function') {\r\n  console.error(\r\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\r\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\r\n  )\r\n}\r\n\r\nfunction typedArraySupport () {\r\n  // Can typed array instances can be augmented?\r\n  try {\r\n    var arr = new Uint8Array(1)\r\n    var proto = { foo: function () { return 42 } }\r\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\r\n    Object.setPrototypeOf(arr, proto)\r\n    return arr.foo() === 42\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nObject.defineProperty(Buffer.prototype, 'parent', {\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!Buffer.isBuffer(this)) return undefined\r\n    return this.buffer\r\n  }\r\n})\r\n\r\nObject.defineProperty(Buffer.prototype, 'offset', {\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!Buffer.isBuffer(this)) return undefined\r\n    return this.byteOffset\r\n  }\r\n})\r\n\r\nfunction createBuffer (length) {\r\n  if (length > K_MAX_LENGTH) {\r\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\r\n  }\r\n  // Return an augmented `Uint8Array` instance\r\n  var buf = new Uint8Array(length)\r\n  Object.setPrototypeOf(buf, Buffer.prototype)\r\n  return buf\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new TypeError(\r\n        'The \"string\" argument must be of type string. Received type number'\r\n      )\r\n    }\r\n    return allocUnsafe(arg)\r\n  }\r\n  return from(arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\nfunction from (value, encodingOrOffset, length) {\r\n  if (typeof value === 'string') {\r\n    return fromString(value, encodingOrOffset)\r\n  }\r\n\r\n  if (ArrayBuffer.isView(value)) {\r\n    return fromArrayView(value)\r\n  }\r\n\r\n  if (value == null) {\r\n    throw new TypeError(\r\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\r\n      'or Array-like Object. Received type ' + (typeof value)\r\n    )\r\n  }\r\n\r\n  if (isInstance(value, ArrayBuffer) ||\r\n      (value && isInstance(value.buffer, ArrayBuffer))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof SharedArrayBuffer !== 'undefined' &&\r\n      (isInstance(value, SharedArrayBuffer) ||\r\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    throw new TypeError(\r\n      'The \"value\" argument must not be of type number. Received type number'\r\n    )\r\n  }\r\n\r\n  var valueOf = value.valueOf && value.valueOf()\r\n  if (valueOf != null && valueOf !== value) {\r\n    return Buffer.from(valueOf, encodingOrOffset, length)\r\n  }\r\n\r\n  var b = fromObject(value)\r\n  if (b) return b\r\n\r\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\r\n      typeof value[Symbol.toPrimitive] === 'function') {\r\n    return Buffer.from(\r\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\r\n    )\r\n  }\r\n\r\n  throw new TypeError(\r\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\r\n    'or Array-like Object. Received type ' + (typeof value)\r\n  )\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(value, encodingOrOffset, length)\r\n}\r\n\r\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\r\n// https://github.com/feross/buffer/pull/148\r\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\r\nObject.setPrototypeOf(Buffer, Uint8Array)\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be of type number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n  }\r\n}\r\n\r\nfunction alloc (size, fill, encoding) {\r\n  assertSize(size)\r\n  if (size <= 0) {\r\n    return createBuffer(size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpreted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(size).fill(fill, encoding)\r\n      : createBuffer(size).fill(fill)\r\n  }\r\n  return createBuffer(size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe (size) {\r\n  assertSize(size)\r\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n\r\nfunction fromString (string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8'\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('Unknown encoding: ' + encoding)\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0\r\n  var buf = createBuffer(length)\r\n\r\n  var actual = buf.write(string, encoding)\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    buf = buf.slice(0, actual)\r\n  }\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromArrayLike (array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n  var buf = createBuffer(length)\r\n  for (var i = 0; i < length; i += 1) {\r\n    buf[i] = array[i] & 255\r\n  }\r\n  return buf\r\n}\r\n\r\nfunction fromArrayView (arrayView) {\r\n  if (isInstance(arrayView, Uint8Array)) {\r\n    var copy = new Uint8Array(arrayView)\r\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\r\n  }\r\n  return fromArrayLike(arrayView)\r\n}\r\n\r\nfunction fromArrayBuffer (array, byteOffset, length) {\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\"offset\" is outside of buffer bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\"length\" is outside of buffer bounds')\r\n  }\r\n\r\n  var buf\r\n  if (byteOffset === undefined && length === undefined) {\r\n    buf = new Uint8Array(array)\r\n  } else if (length === undefined) {\r\n    buf = new Uint8Array(array, byteOffset)\r\n  } else {\r\n    buf = new Uint8Array(array, byteOffset, length)\r\n  }\r\n\r\n  // Return an augmented `Uint8Array` instance\r\n  Object.setPrototypeOf(buf, Buffer.prototype)\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromObject (obj) {\r\n  if (Buffer.isBuffer(obj)) {\r\n    var len = checked(obj.length) | 0\r\n    var buf = createBuffer(len)\r\n\r\n    if (buf.length === 0) {\r\n      return buf\r\n    }\r\n\r\n    obj.copy(buf, 0, 0, len)\r\n    return buf\r\n  }\r\n\r\n  if (obj.length !== undefined) {\r\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\r\n      return createBuffer(0)\r\n    }\r\n    return fromArrayLike(obj)\r\n  }\r\n\r\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n    return fromArrayLike(obj.data)\r\n  }\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= K_MAX_LENGTH) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\n\r\nfunction SlowBuffer (length) {\r\n  if (+length != length) { // eslint-disable-line eqeqeq\r\n    length = 0\r\n  }\r\n  return Buffer.alloc(+length)\r\n}\r\n\r\nBuffer.isBuffer = function isBuffer (b) {\r\n  return b != null && b._isBuffer === true &&\r\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\r\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    throw new TypeError(\r\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\r\n    )\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length\r\n  var y = b.length\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i]\r\n      y = b[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!Array.isArray(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  var i\r\n  if (length === undefined) {\r\n    length = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer.allocUnsafe(length)\r\n  var pos = 0\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i]\r\n    if (isInstance(buf, Uint8Array)) {\r\n      if (pos + buf.length > buffer.length) {\r\n        Buffer.from(buf).copy(buffer, pos)\r\n      } else {\r\n        Uint8Array.prototype.set.call(\r\n          buffer,\r\n          buf,\r\n          pos\r\n        )\r\n      }\r\n    } else if (!Buffer.isBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    } else {\r\n      buf.copy(buffer, pos)\r\n    }\r\n    pos += buf.length\r\n  }\r\n  return buffer\r\n}\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (Buffer.isBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    throw new TypeError(\r\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\r\n      'Received type ' + typeof string\r\n    )\r\n  }\r\n\r\n  var len = string.length\r\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\r\n  if (!mustMatch && len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) {\r\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\r\n        }\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0\r\n  start >>>= 0\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\r\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\r\n// reliably in a browserify context because there could be multiple different\r\n// copies of the 'buffer' package in use. This method works even for Buffer\r\n// instances that were created from another copy of the `buffer` package.\r\n// See: https://github.com/feross/buffer/issues/154\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap (b, n, m) {\r\n  var i = b[n]\r\n  b[n] = b[m]\r\n  b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  var len = this.length\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap(this, i, i + 1)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  var len = this.length\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap(this, i, i + 3)\r\n    swap(this, i + 1, i + 2)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  var len = this.length\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap(this, i, i + 7)\r\n    swap(this, i + 1, i + 6)\r\n    swap(this, i + 2, i + 5)\r\n    swap(this, i + 3, i + 4)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  var length = this.length\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n}\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  var str = ''\r\n  var max = exports.INSPECT_MAX_BYTES\r\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\r\n  if (this.length > max) str += ' ... '\r\n  return '<Buffer ' + str + '>'\r\n}\r\nif (customInspectSymbol) {\r\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\r\n}\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (isInstance(target, Uint8Array)) {\r\n    target = Buffer.from(target, target.offset, target.byteLength)\r\n  }\r\n  if (!Buffer.isBuffer(target)) {\r\n    throw new TypeError(\r\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\r\n      'Received type ' + (typeof target)\r\n    )\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0\r\n  end >>>= 0\r\n  thisStart >>>= 0\r\n  thisEnd >>>= 0\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart\r\n  var y = end - start\r\n  var len = Math.min(x, y)\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd)\r\n  var targetCopy = target.slice(start, end)\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i]\r\n      y = targetCopy[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset\r\n    byteOffset = 0\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000\r\n  }\r\n  byteOffset = +byteOffset // Coerce to Number.\r\n  if (numberIsNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1)\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding)\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (Buffer.isBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF // Search for a byte value [0-255]\r\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1\r\n  var arrLength = arr.length\r\n  var valLength = val.length\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase()\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2\r\n      arrLength /= 2\r\n      valLength /= 2\r\n      byteOffset /= 2\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i\r\n  if (dir) {\r\n    var foundIndex = -1\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex\r\n        foundIndex = -1\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0\r\n  var remaining = buf.length - offset\r\n  if (!length) {\r\n    length = remaining\r\n  } else {\r\n    length = Number(length)\r\n    if (length > remaining) {\r\n      length = remaining\r\n    }\r\n  }\r\n\r\n  var strLen = string.length\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n    if (numberIsNaN(parsed)) return i\r\n    buf[offset + i] = parsed\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8'\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset >>> 0\r\n    if (isFinite(length)) {\r\n      length = length >>> 0\r\n      if (encoding === undefined) encoding = 'utf8'\r\n    } else {\r\n      encoding = length\r\n      length = undefined\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset\r\n  if (length === undefined || length > remaining) length = remaining\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n}\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return base64.fromByteArray(buf)\r\n  } else {\r\n    return base64.fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end)\r\n  var res = []\r\n\r\n  var i = start\r\n  while (i < end) {\r\n    var firstByte = buf[i]\r\n    var codePoint = null\r\n    var bytesPerSequence = (firstByte > 0xEF)\r\n      ? 4\r\n      : (firstByte > 0xDF)\r\n          ? 3\r\n          : (firstByte > 0xBF)\r\n              ? 2\r\n              : 1\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1]\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          fourthByte = buf[i + 3]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD\r\n      bytesPerSequence = 1\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n      codePoint = 0xDC00 | codePoint & 0x3FF\r\n    }\r\n\r\n    res.push(codePoint)\r\n    i += bytesPerSequence\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = ''\r\n  var i = 0\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F)\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i])\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length\r\n\r\n  if (!start || start < 0) start = 0\r\n  if (!end || end < 0 || end > len) end = len\r\n\r\n  var out = ''\r\n  for (var i = start; i < end; ++i) {\r\n    out += hexSliceLookupTable[buf[i]]\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end)\r\n  var res = ''\r\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\r\n  for (var i = 0; i < bytes.length - 1; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  var len = this.length\r\n  start = ~~start\r\n  end = end === undefined ? len : ~~end\r\n\r\n  if (start < 0) {\r\n    start += len\r\n    if (start < 0) start = 0\r\n  } else if (start > len) {\r\n    start = len\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len\r\n    if (end < 0) end = 0\r\n  } else if (end > len) {\r\n    end = len\r\n  }\r\n\r\n  if (end < start) end = start\r\n\r\n  var newBuf = this.subarray(start, end)\r\n  // Return an augmented `Uint8Array` instance\r\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\r\n\r\n  return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUintLE =\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUintBE =\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length)\r\n  }\r\n\r\n  var val = this[offset + --byteLength]\r\n  var mul = 1\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUint8 =\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUint16LE =\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUint16BE =\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUint32LE =\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n}\r\n\r\nBuffer.prototype.readUint32BE =\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var i = byteLength\r\n  var mul = 1\r\n  var val = this[offset + --i]\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset] | (this[offset + 1] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset + 1] | (this[offset] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUintLE =\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var mul = 1\r\n  var i = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUintBE =\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUint8 =\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeUint16LE =\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUint16BE =\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUint32LE =\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset + 3] = (value >>> 24)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUint32BE =\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = 0\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n  if (value < 0) value = 0xff + value + 1\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 3] = (value >>> 24)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\r\n  if (!start) start = 0\r\n  if (!end && end !== 0) end = this.length\r\n  if (targetStart >= target.length) targetStart = target.length\r\n  if (!targetStart) targetStart = 0\r\n  if (end > 0 && end < start) end = start\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start\r\n  }\r\n\r\n  var len = end - start\r\n\r\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\r\n    // Use built-in when available, missing from IE11\r\n    this.copyWithin(targetStart, start, end)\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, end),\r\n      targetStart\r\n    )\r\n  }\r\n\r\n  return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start\r\n      start = 0\r\n      end = this.length\r\n    } else if (typeof end === 'string') {\r\n      encoding = end\r\n      end = this.length\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0)\r\n      if ((encoding === 'utf8' && code < 128) ||\r\n          encoding === 'latin1') {\r\n        // Fast path: If `val` fits into a single byte, use that numeric value.\r\n        val = code\r\n      }\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255\r\n  } else if (typeof val === 'boolean') {\r\n    val = Number(val)\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0\r\n  end = end === undefined ? this.length : end >>> 0\r\n\r\n  if (!val) val = 0\r\n\r\n  var i\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val\r\n    }\r\n  } else {\r\n    var bytes = Buffer.isBuffer(val)\r\n      ? val\r\n      : Buffer.from(val, encoding)\r\n    var len = bytes.length\r\n    if (len === 0) {\r\n      throw new TypeError('The value \"' + val +\r\n        '\" is invalid for argument \"value\"')\r\n    }\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len]\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean (str) {\r\n  // Node takes equal signs as end of the Base64 encoding\r\n  str = str.split('=')[0]\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = str.trim().replace(INVALID_BASE64_RE, '')\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '='\r\n  }\r\n  return str\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity\r\n  var codePoint\r\n  var length = string.length\r\n  var leadSurrogate = null\r\n  var bytes = []\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i)\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n        leadSurrogate = codePoint\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n    }\r\n\r\n    leadSurrogate = null\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint)\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF)\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i)\r\n    hi = c >> 8\r\n    lo = c % 256\r\n    byteArray.push(lo)\r\n    byteArray.push(hi)\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\nfunction base64ToBytes (str) {\r\n  return base64.toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i]\r\n  }\r\n  return i\r\n}\r\n\r\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\r\n// the `instanceof` check but they should be treated as of that type.\r\n// See: https://github.com/feross/buffer/issues/166\r\nfunction isInstance (obj, type) {\r\n  return obj instanceof type ||\r\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\r\n      obj.constructor.name === type.name)\r\n}\r\nfunction numberIsNaN (obj) {\r\n  // For IE11 support\r\n  return obj !== obj // eslint-disable-line no-self-compare\r\n}\r\n\r\n// Create lookup table for `toString('hex')`\r\n// See: https://github.com/feross/buffer/issues/219\r\nvar hexSliceLookupTable = (function () {\r\n  var alphabet = '0123456789abcdef'\r\n  var table = new Array(256)\r\n  for (var i = 0; i < 16; ++i) {\r\n    var i16 = i * 16\r\n    for (var j = 0; j < 16; ++j) {\r\n      table[i16 + j] = alphabet[i] + alphabet[j]\r\n    }\r\n  }\r\n  return table\r\n})()\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLDTDNotation, XMLNode,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  module.exports = XMLDTDNotation = (function(superClass) {\r\n    extend(XMLDTDNotation, superClass);\r\n\r\n    function XMLDTDNotation(parent, name, value) {\r\n      XMLDTDNotation.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\r\n      }\r\n      if (!value.pubID && !value.sysID) {\r\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\r\n      }\r\n      this.name = this.stringify.name(name);\r\n      this.type = NodeType.NotationDeclaration;\r\n      if (value.pubID != null) {\r\n        this.pubID = this.stringify.dtdPubID(value.pubID);\r\n      }\r\n      if (value.sysID != null) {\r\n        this.sysID = this.stringify.dtdSysID(value.sysID);\r\n      }\r\n    }\r\n\r\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\r\n      get: function() {\r\n        return this.pubID;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\r\n      get: function() {\r\n        return this.sysID;\r\n      }\r\n    });\r\n\r\n    XMLDTDNotation.prototype.toString = function(options) {\r\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    return XMLDTDNotation;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLAttribute = require('./XMLAttribute');\r\n\r\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\r\n\r\n  module.exports = XMLElement = (function(superClass) {\r\n    extend(XMLElement, superClass);\r\n\r\n    function XMLElement(parent, name, attributes) {\r\n      var child, j, len, ref1;\r\n      XMLElement.__super__.constructor.call(this, parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing element name. \" + this.debugInfo());\r\n      }\r\n      this.name = this.stringify.name(name);\r\n      this.type = NodeType.Element;\r\n      this.attribs = {};\r\n      this.schemaTypeInfo = null;\r\n      if (attributes != null) {\r\n        this.attribute(attributes);\r\n      }\r\n      if (parent.type === NodeType.Document) {\r\n        this.isRoot = true;\r\n        this.documentObject = parent;\r\n        parent.rootObject = this;\r\n        if (parent.children) {\r\n          ref1 = parent.children;\r\n          for (j = 0, len = ref1.length; j < len; j++) {\r\n            child = ref1[j];\r\n            if (child.type === NodeType.DocType) {\r\n              child.name = this.name;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\r\n      get: function() {\r\n        return this.name;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\r\n      get: function() {\r\n        return '';\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\r\n      get: function() {\r\n        return '';\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'localName', {\r\n      get: function() {\r\n        return this.name;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'id', {\r\n      get: function() {\r\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'className', {\r\n      get: function() {\r\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'classList', {\r\n      get: function() {\r\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\r\n      get: function() {\r\n        if (!this.attributeMap || !this.attributeMap.nodes) {\r\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\r\n        }\r\n        return this.attributeMap;\r\n      }\r\n    });\r\n\r\n    XMLElement.prototype.clone = function() {\r\n      var att, attName, clonedSelf, ref1;\r\n      clonedSelf = Object.create(this);\r\n      if (clonedSelf.isRoot) {\r\n        clonedSelf.documentObject = null;\r\n      }\r\n      clonedSelf.attribs = {};\r\n      ref1 = this.attribs;\r\n      for (attName in ref1) {\r\n        if (!hasProp.call(ref1, attName)) continue;\r\n        att = ref1[attName];\r\n        clonedSelf.attribs[attName] = att.clone();\r\n      }\r\n      clonedSelf.children = [];\r\n      this.children.forEach(function(child) {\r\n        var clonedChild;\r\n        clonedChild = child.clone();\r\n        clonedChild.parent = clonedSelf;\r\n        return clonedSelf.children.push(clonedChild);\r\n      });\r\n      return clonedSelf;\r\n    };\r\n\r\n    XMLElement.prototype.attribute = function(name, value) {\r\n      var attName, attValue;\r\n      if (name != null) {\r\n        name = getValue(name);\r\n      }\r\n      if (isObject(name)) {\r\n        for (attName in name) {\r\n          if (!hasProp.call(name, attName)) continue;\r\n          attValue = name[attName];\r\n          this.attribute(attName, attValue);\r\n        }\r\n      } else {\r\n        if (isFunction(value)) {\r\n          value = value.apply();\r\n        }\r\n        if (this.options.keepNullAttributes && (value == null)) {\r\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\r\n        } else if (value != null) {\r\n          this.attribs[name] = new XMLAttribute(this, name, value);\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLElement.prototype.removeAttribute = function(name) {\r\n      var attName, j, len;\r\n      if (name == null) {\r\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\r\n      }\r\n      name = getValue(name);\r\n      if (Array.isArray(name)) {\r\n        for (j = 0, len = name.length; j < len; j++) {\r\n          attName = name[j];\r\n          delete this.attribs[attName];\r\n        }\r\n      } else {\r\n        delete this.attribs[name];\r\n      }\r\n      return this;\r\n    };\r\n\r\n    XMLElement.prototype.toString = function(options) {\r\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\r\n    };\r\n\r\n    XMLElement.prototype.att = function(name, value) {\r\n      return this.attribute(name, value);\r\n    };\r\n\r\n    XMLElement.prototype.a = function(name, value) {\r\n      return this.attribute(name, value);\r\n    };\r\n\r\n    XMLElement.prototype.getAttribute = function(name) {\r\n      if (this.attribs.hasOwnProperty(name)) {\r\n        return this.attribs[name].value;\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    XMLElement.prototype.setAttribute = function(name, value) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getAttributeNode = function(name) {\r\n      if (this.attribs.hasOwnProperty(name)) {\r\n        return this.attribs[name];\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getElementsByTagName = function(name) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.hasAttribute = function(name) {\r\n      return this.attribs.hasOwnProperty(name);\r\n    };\r\n\r\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\r\n      if (this.attribs.hasOwnProperty(name)) {\r\n        return this.attribs[name].isId;\r\n      } else {\r\n        return isId;\r\n      }\r\n    };\r\n\r\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\r\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\r\n    };\r\n\r\n    XMLElement.prototype.isEqualNode = function(node) {\r\n      var i, j, ref1;\r\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\r\n        return false;\r\n      }\r\n      if (node.namespaceURI !== this.namespaceURI) {\r\n        return false;\r\n      }\r\n      if (node.prefix !== this.prefix) {\r\n        return false;\r\n      }\r\n      if (node.localName !== this.localName) {\r\n        return false;\r\n      }\r\n      if (node.attribs.length !== this.attribs.length) {\r\n        return false;\r\n      }\r\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\r\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return XMLElement;\r\n\r\n  })(XMLNode);\r\n\r\n}).call(this);\r\n","// Generated by CoffeeScript 1.12.7\r\n(function() {\r\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\r\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n    hasProp = {}.hasOwnProperty;\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  XMLWriterBase = require('./XMLWriterBase');\r\n\r\n  WriterState = require('./WriterState');\r\n\r\n  module.exports = XMLStreamWriter = (function(superClass) {\r\n    extend(XMLStreamWriter, superClass);\r\n\r\n    function XMLStreamWriter(stream, options) {\r\n      this.stream = stream;\r\n      XMLStreamWriter.__super__.constructor.call(this, options);\r\n    }\r\n\r\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\r\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\r\n        return '';\r\n      } else {\r\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\r\n      }\r\n    };\r\n\r\n    XMLStreamWriter.prototype.document = function(doc, options) {\r\n      var child, i, j, k, len, len1, ref, ref1, results;\r\n      ref = doc.children;\r\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\r\n        child = ref[i];\r\n        child.isLastRootNode = i === doc.children.length - 1;\r\n      }\r\n      options = this.filterOptions(options);\r\n      ref1 = doc.children;\r\n      results = [];\r\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\r\n        child = ref1[k];\r\n        results.push(this.writeChildNode(child, options, 0));\r\n      }\r\n      return results;\r\n    };\r\n\r\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\r\n      var child, j, len, ref;\r\n      level || (level = 0);\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      this.stream.write(this.indent(node, options, level));\r\n      this.stream.write('<!DOCTYPE ' + node.root().name);\r\n      if (node.pubID && node.sysID) {\r\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\r\n      } else if (node.sysID) {\r\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\r\n      }\r\n      if (node.children.length > 0) {\r\n        this.stream.write(' [');\r\n        this.stream.write(this.endline(node, options, level));\r\n        options.state = WriterState.InsideTag;\r\n        ref = node.children;\r\n        for (j = 0, len = ref.length; j < len; j++) {\r\n          child = ref[j];\r\n          this.writeChildNode(child, options, level + 1);\r\n        }\r\n        options.state = WriterState.CloseTag;\r\n        this.stream.write(']');\r\n      }\r\n      options.state = WriterState.CloseTag;\r\n      this.stream.write(options.spaceBeforeSlash + '>');\r\n      this.stream.write(this.endline(node, options, level));\r\n      options.state = WriterState.None;\r\n      return this.closeNode(node, options, level);\r\n    };\r\n\r\n    XMLStreamWriter.prototype.element = function(node, options, level) {\r\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\r\n      level || (level = 0);\r\n      this.openNode(node, options, level);\r\n      options.state = WriterState.OpenTag;\r\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\r\n      ref = node.attribs;\r\n      for (name in ref) {\r\n        if (!hasProp.call(ref, name)) continue;\r\n        att = ref[name];\r\n        this.attribute(att, options, level);\r\n      }\r\n      childNodeCount = node.children.length;\r\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\r\n      if (childNodeCount === 0 || node.children.every(function(e) {\r\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\r\n      })) {\r\n        if (options.allowEmpty) {\r\n          this.stream.write('>');\r\n          options.state = WriterState.CloseTag;\r\n          this.stream.write('</' + node.name + '>');\r\n        } else {\r\n          options.state = WriterState.CloseTag;\r\n          this.stream.write(options.spaceBeforeSlash + '/>');\r\n        }\r\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\r\n        this.stream.write('>');\r\n        options.state = WriterState.InsideTag;\r\n        options.suppressPrettyCount++;\r\n        prettySuppressed = true;\r\n        this.writeChildNode(firstChildNode, options, level + 1);\r\n        options.suppressPrettyCount--;\r\n        prettySuppressed = false;\r\n        options.state = WriterState.CloseTag;\r\n        this.stream.write('</' + node.name + '>');\r\n      } else {\r\n        this.stream.write('>' + this.endline(node, options, level));\r\n        options.state = WriterState.InsideTag;\r\n        ref1 = node.children;\r\n        for (j = 0, len = ref1.length; j < len; j++) {\r\n          child = ref1[j];\r\n          this.writeChildNode(child, options, level + 1);\r\n        }\r\n        options.state = WriterState.CloseTag;\r\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\r\n      }\r\n      this.stream.write(this.endline(node, options, level));\r\n      options.state = WriterState.None;\r\n      return this.closeNode(node, options, level);\r\n    };\r\n\r\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.text = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\r\n    };\r\n\r\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\r\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\r\n    };\r\n\r\n    return XMLStreamWriter;\r\n\r\n  })(XMLWriterBase);\r\n\r\n}).call(this);\r\n"],"sourceRoot":"webpack:///"}