{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.css","./src/app/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACI;AACI;AACV;AACE;AAE/C,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE;CACxC,CAAC;IASW,WAAW,SAAX,WAAW;CAAI;AAAf,WAAW;IAPvB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,+DAAc,CAAC;QAC9B,OAAO,EAAE;YACP,4DAAY,EAAC,0DAAW,EAAC,4DAAgB;YACzC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;KACF,CAAC;GACW,WAAW,CAAI;AAAJ;;;;;;;;;;;;;AClBxB;AAAe,wQAAyM,gBAAgB,iBAAiB,kkEAAkkE,oBAAoB,kBAAkB,gDAAgD,E;;;;;;;;;;;;ACAj5E;AAAe,8EAAe,4BAA4B,OAAO,+CAA+C,+QAA+Q,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7U;AACO;AAElB;AAEc;AACL;AACjB;IAOlB,cAAc,SAAd,cAAc;IAOvB,YACY,KAAqB,EACrB,MAAc,EACd,qBAA4C,EAC7C,cAAiC;QAHhC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC7C,mBAAc,GAAd,cAAc,CAAmB;QAT5C,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;QAQP,wCAAwC;QACxC,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;IAED,QAAQ;QACJ,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACzE,CAAC;IAED,OAAO,CAAC,aAAkB;QACtB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC;aAC/E,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,+BAA+B,EAAG,OAAO,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;CACJ;;YApDgB,8DAAc;YAAtB,sDAAM;YAIN,+DAAqB;YACrB,6DAAiB;;AAQb,cAAc;IAL1B,+DAAS,CAAC;QACP,QAAQ,EAAE,OAAO;QACjB,kFAAqC;;KAEtC,CAAC;GACS,cAAc,CAuC1B;AAvC0B","file":"login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,FormsModule,NgxSpinnerModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","export default \"<html>\\r\\n<body>\\r\\n    <header>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <p style=\\\"text-align: left;font-size: 24px;margin-top: 15px;\\\">TIBSmartMigrator</p>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </header>\\r\\n    <div class=\\\"container register\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <!-- <div class=\\\"col-md-3 register-left\\\"> -->\\r\\n                <!-- <img src=\\\"https://image.ibb.co/n7oTvU/logo_white.png\\\" alt=\\\"\\\"/> -->\\r\\n                <!-- <img src=\\\"assets/user_icon.png\\\"/>\\r\\n                <h3>TIBSmartMigrator</h3>\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-9 register-right\\\">\\r\\n                <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\r\\n                    <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\r\\n                    <h3 class=\\\"register-heading\\\">LOGIN</h3> \\r\\n                    <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"doLogin(loginForm.value)\\\" class=\\\"row register-form\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username *\\\" name=\\\"username\\\" ngModel required/>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password *\\\" name=\\\"password\\\" ngModel required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <button [disabled]=\\\"loginForm.form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btnRegister\\\">Login</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <footer>\\r\\n        <h1 style=\\\"color:#052F87\\\"><b>Cognizant</b></h1>\\r\\n    </footer>\\r\\n</body>\\r\\n</html>\\r\\n<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" template=\\\"<img src='assets/spinner.gif' />\\\"><br>\\r\\n  <p style=\\\"color: white; text-align: center;margin-top: 130px;\\\">Please Wait... </p>  \\r\\n</ngx-spinner> \\r\\n\";","export default \"\\r\\n.register{\\r\\n    background: #f8f9fa;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksbUJBQW1CO0VBQ3JCIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnJlZ2lzdGVye1xyXG4gICAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcclxuICB9Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n  })\r\nexport class LoginComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string;\r\n    error = '';\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService,\r\n        public spinnerService: NgxSpinnerService\r\n    ) { \r\n        // redirect to home if already logged in\r\n        if (this.authenticationService.currentUserValue) { \r\n            this.router.navigate(['/login']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    }\r\n\r\n    doLogin(loginformData: any){\r\n        console.log(loginformData);\r\n        this.spinnerService.show();\r\n        this.authenticationService.login(loginformData.username, loginformData.password)\r\n        .pipe(first())\r\n        .subscribe(\r\n            data => {\r\n                this.router.navigate(['/home']);\r\n            },\r\n            error => {\r\n                this.error = error;\r\n                Swal.fire('Error!', \"Invalid username or password.\" , 'error');\r\n                this.spinnerService.hide();\r\n            });\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}